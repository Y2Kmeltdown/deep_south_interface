// hbm_bottom_example_design_altera_hbm_1930_chvq3bq.v

// This file was auto-generated from altera_hbm_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 19.4 64

`timescale 1 ps / 1 ps
module hbm_bottom_example_design_altera_hbm_1930_chvq3bq (
		input  wire         pll_ref_clk,                 //         pll_ref_clk.clk
		input  wire         ext_core_clk,                //        ext_core_clk.clk
		input  wire         ext_core_clk_locked,         // ext_core_clk_locked.export
		input  wire         wmcrst_n_in,                 //         wmcrst_n_in.reset_n
		input  wire         hbm_only_reset_in,           //   hbm_only_reset_in.reset
		output wire         local_cal_success,           //              status.local_cal_success
		output wire         local_cal_fail,              //                    .local_cal_fail
		output wire [2:0]   cal_lat,                     //             cal_lat.cal_lat
		output wire         ck_t_0,                      //               mem_0.ck_t
		output wire         ck_c_0,                      //                    .ck_c
		output wire         cke_0,                       //                    .cke
		output wire [7:0]   c_0,                         //                    .c
		output wire [5:0]   r_0,                         //                    .r
		inout  wire [127:0] dq_0,                        //                    .dq
		inout  wire [15:0]  dm_0,                        //                    .dm
		inout  wire [15:0]  dbi_0,                       //                    .dbi
		inout  wire [3:0]   par_0,                       //                    .par
		inout  wire [3:0]   derr_0,                      //                    .derr
		input  wire [3:0]   rdqs_t_0,                    //                    .rdqs_t
		input  wire [3:0]   rdqs_c_0,                    //                    .rdqs_c
		output wire [3:0]   wdqs_t_0,                    //                    .wdqs_t
		output wire [3:0]   wdqs_c_0,                    //                    .wdqs_c
		inout  wire [7:0]   rd_0,                        //                    .rd
		output wire         rr_0,                        //                    .rr
		output wire         rc_0,                        //                    .rc
		input  wire         aerr_0,                      //                    .aerr
		input  wire         cattrip,                     //          m2u_bridge.cattrip
		input  wire [2:0]   temp,                        //                    .temp
		input  wire [7:0]   wso,                         //                    .wso
		output wire         reset_n,                     //                    .reset_n
		output wire         wrst_n,                      //                    .wrst_n
		output wire         wrck,                        //                    .wrck
		output wire         shiftwr,                     //                    .shiftwr
		output wire         capturewr,                   //                    .capturewr
		output wire         updatewr,                    //                    .updatewr
		output wire         selectwir,                   //                    .selectwir
		output wire         wsi,                         //                    .wsi
		output wire         wmc_clk_0_clk,               //           wmc_clk_0.clk
		output wire         phy_clk_0_clk,               //           phy_clk_0.clk
		output wire         wmcrst_n_0_reset_n,          //          wmcrst_n_0.reset_n
		input  wire [8:0]   axi_0_0_awid,                //             axi_0_0.awid
		input  wire [28:0]  axi_0_0_awaddr,              //                    .awaddr
		input  wire [7:0]   axi_0_0_awlen,               //                    .awlen
		input  wire [2:0]   axi_0_0_awsize,              //                    .awsize
		input  wire [1:0]   axi_0_0_awburst,             //                    .awburst
		input  wire [2:0]   axi_0_0_awprot,              //                    .awprot
		input  wire [3:0]   axi_0_0_awqos,               //                    .awqos
		input  wire [0:0]   axi_0_0_awuser,              //                    .awuser
		input  wire         axi_0_0_awvalid,             //                    .awvalid
		output wire         axi_0_0_awready,             //                    .awready
		input  wire [255:0] axi_0_0_wdata,               //                    .wdata
		input  wire [31:0]  axi_0_0_wstrb,               //                    .wstrb
		input  wire         axi_0_0_wlast,               //                    .wlast
		input  wire         axi_0_0_wvalid,              //                    .wvalid
		output wire         axi_0_0_wready,              //                    .wready
		output wire [8:0]   axi_0_0_bid,                 //                    .bid
		output wire [1:0]   axi_0_0_bresp,               //                    .bresp
		output wire         axi_0_0_bvalid,              //                    .bvalid
		input  wire         axi_0_0_bready,              //                    .bready
		input  wire [8:0]   axi_0_0_arid,                //                    .arid
		input  wire [28:0]  axi_0_0_araddr,              //                    .araddr
		input  wire [7:0]   axi_0_0_arlen,               //                    .arlen
		input  wire [2:0]   axi_0_0_arsize,              //                    .arsize
		input  wire [1:0]   axi_0_0_arburst,             //                    .arburst
		input  wire [2:0]   axi_0_0_arprot,              //                    .arprot
		input  wire [3:0]   axi_0_0_arqos,               //                    .arqos
		input  wire [0:0]   axi_0_0_aruser,              //                    .aruser
		input  wire         axi_0_0_arvalid,             //                    .arvalid
		output wire         axi_0_0_arready,             //                    .arready
		output wire [8:0]   axi_0_0_rid,                 //                    .rid
		output wire [255:0] axi_0_0_rdata,               //                    .rdata
		output wire [1:0]   axi_0_0_rresp,               //                    .rresp
		output wire         axi_0_0_rlast,               //                    .rlast
		output wire         axi_0_0_rvalid,              //                    .rvalid
		input  wire         axi_0_0_rready,              //                    .rready
		input  wire [8:0]   axi_0_1_awid,                //             axi_0_1.awid
		input  wire [28:0]  axi_0_1_awaddr,              //                    .awaddr
		input  wire [7:0]   axi_0_1_awlen,               //                    .awlen
		input  wire [2:0]   axi_0_1_awsize,              //                    .awsize
		input  wire [1:0]   axi_0_1_awburst,             //                    .awburst
		input  wire [2:0]   axi_0_1_awprot,              //                    .awprot
		input  wire [3:0]   axi_0_1_awqos,               //                    .awqos
		input  wire [0:0]   axi_0_1_awuser,              //                    .awuser
		input  wire         axi_0_1_awvalid,             //                    .awvalid
		output wire         axi_0_1_awready,             //                    .awready
		input  wire [255:0] axi_0_1_wdata,               //                    .wdata
		input  wire [31:0]  axi_0_1_wstrb,               //                    .wstrb
		input  wire         axi_0_1_wlast,               //                    .wlast
		input  wire         axi_0_1_wvalid,              //                    .wvalid
		output wire         axi_0_1_wready,              //                    .wready
		output wire [8:0]   axi_0_1_bid,                 //                    .bid
		output wire [1:0]   axi_0_1_bresp,               //                    .bresp
		output wire         axi_0_1_bvalid,              //                    .bvalid
		input  wire         axi_0_1_bready,              //                    .bready
		input  wire [8:0]   axi_0_1_arid,                //                    .arid
		input  wire [28:0]  axi_0_1_araddr,              //                    .araddr
		input  wire [7:0]   axi_0_1_arlen,               //                    .arlen
		input  wire [2:0]   axi_0_1_arsize,              //                    .arsize
		input  wire [1:0]   axi_0_1_arburst,             //                    .arburst
		input  wire [2:0]   axi_0_1_arprot,              //                    .arprot
		input  wire [3:0]   axi_0_1_arqos,               //                    .arqos
		input  wire [0:0]   axi_0_1_aruser,              //                    .aruser
		input  wire         axi_0_1_arvalid,             //                    .arvalid
		output wire         axi_0_1_arready,             //                    .arready
		output wire [8:0]   axi_0_1_rid,                 //                    .rid
		output wire [255:0] axi_0_1_rdata,               //                    .rdata
		output wire [1:0]   axi_0_1_rresp,               //                    .rresp
		output wire         axi_0_1_rlast,               //                    .rlast
		output wire         axi_0_1_rvalid,              //                    .rvalid
		input  wire         axi_0_1_rready,              //                    .rready
		output wire         axi_extra_0_0_ruser_err_dbe, //       axi_extra_0_0.ruser_err_dbe
		output wire [31:0]  axi_extra_0_0_ruser_data,    //                    .ruser_data
		input  wire [31:0]  axi_extra_0_0_wuser_data,    //                    .wuser_data
		input  wire [3:0]   axi_extra_0_0_wuser_strb,    //                    .wuser_strb
		output wire         axi_extra_0_1_ruser_err_dbe, //       axi_extra_0_1.ruser_err_dbe
		output wire [31:0]  axi_extra_0_1_ruser_data,    //                    .ruser_data
		input  wire [31:0]  axi_extra_0_1_wuser_data,    //                    .wuser_data
		input  wire [3:0]   axi_extra_0_1_wuser_strb,    //                    .wuser_strb
		input  wire [15:0]  apb_0_ur_paddr,              //               apb_0.ur_paddr
		input  wire         apb_0_ur_psel,               //                    .ur_psel
		input  wire         apb_0_ur_penable,            //                    .ur_penable
		input  wire         apb_0_ur_pwrite,             //                    .ur_pwrite
		input  wire [15:0]  apb_0_ur_pwdata,             //                    .ur_pwdata
		input  wire [1:0]   apb_0_ur_pstrb,              //                    .ur_pstrb
		output wire         apb_0_ur_prready,            //                    .ur_prready
		output wire [15:0]  apb_0_ur_prdata              //                    .ur_prdata
	);

	wire         uib_cal_in_prog_cal_in_prog;              // uib:cal_in_prog -> axi_ufi_adpt_0:cal_in_prog
	wire         uib_axifencereq_axifencereq;              // uib:axifencereq -> axi_ufi_adpt_0:axifencereq
	wire   [1:0] axi_ufi_adpt_0_ub48_group_4_0_ddout1_en;  // axi_ufi_adpt_0:ddout1_en_4_0 -> uib:ddout1_en_4_0
	wire  [79:0] axi_ufi_adpt_0_ub48_group_4_0_sdout0;     // axi_ufi_adpt_0:sdout0_4_0 -> uib:sdout0_4_0
	wire   [1:0] axi_ufi_adpt_0_ub48_group_4_0_sdout0_en;  // axi_ufi_adpt_0:sdout0_en_4_0 -> uib:sdout0_en_4_0
	wire   [1:0] axi_ufi_adpt_0_ub48_group_4_0_ddout0_en;  // axi_ufi_adpt_0:ddout0_en_4_0 -> uib:ddout0_en_4_0
	wire   [1:0] axi_ufi_adpt_0_ub48_group_4_0_sdin0_en;   // axi_ufi_adpt_0:sdin0_en_4_0 -> uib:sdin0_en_4_0
	wire   [7:0] axi_ufi_adpt_0_ub48_group_4_0_ddout0;     // axi_ufi_adpt_0:ddout0_4_0 -> uib:ddout0_4_0
	wire  [79:0] uib_ub48_group_4_0_sdin0;                 // uib:sdin0_4_0 -> axi_ufi_adpt_0:sdin0_4_0
	wire   [7:0] axi_ufi_adpt_0_ub48_group_4_0_ddout1;     // axi_ufi_adpt_0:ddout1_4_0 -> uib:ddout1_4_0
	wire   [7:0] uib_ub48_group_4_0_ddin0;                 // uib:ddin0_4_0 -> axi_ufi_adpt_0:ddin0_4_0
	wire   [1:0] axi_ufi_adpt_0_ub48_group_4_0_ddin0_en;   // axi_ufi_adpt_0:ddin0_en_4_0 -> uib:ddin0_en_4_0
	wire   [1:0] axi_ufi_adpt_0_ub48_group_4_0_ddin1_en;   // axi_ufi_adpt_0:ddin1_en_4_0 -> uib:ddin1_en_4_0
	wire   [7:0] uib_ub48_group_4_0_ddin1;                 // uib:ddin1_4_0 -> axi_ufi_adpt_0:ddin1_4_0
	wire   [1:0] axi_ufi_adpt_0_ub48_group_4_1_ddout1_en;  // axi_ufi_adpt_0:ddout1_en_4_1 -> uib:ddout1_en_4_1
	wire  [79:0] axi_ufi_adpt_0_ub48_group_4_1_sdout0;     // axi_ufi_adpt_0:sdout0_4_1 -> uib:sdout0_4_1
	wire   [1:0] axi_ufi_adpt_0_ub48_group_4_1_sdout0_en;  // axi_ufi_adpt_0:sdout0_en_4_1 -> uib:sdout0_en_4_1
	wire   [1:0] axi_ufi_adpt_0_ub48_group_4_1_ddout0_en;  // axi_ufi_adpt_0:ddout0_en_4_1 -> uib:ddout0_en_4_1
	wire   [1:0] axi_ufi_adpt_0_ub48_group_4_1_sdin0_en;   // axi_ufi_adpt_0:sdin0_en_4_1 -> uib:sdin0_en_4_1
	wire   [7:0] axi_ufi_adpt_0_ub48_group_4_1_ddout0;     // axi_ufi_adpt_0:ddout0_4_1 -> uib:ddout0_4_1
	wire  [79:0] uib_ub48_group_4_1_sdin0;                 // uib:sdin0_4_1 -> axi_ufi_adpt_0:sdin0_4_1
	wire   [7:0] axi_ufi_adpt_0_ub48_group_4_1_ddout1;     // axi_ufi_adpt_0:ddout1_4_1 -> uib:ddout1_4_1
	wire   [7:0] uib_ub48_group_4_1_ddin0;                 // uib:ddin0_4_1 -> axi_ufi_adpt_0:ddin0_4_1
	wire   [1:0] axi_ufi_adpt_0_ub48_group_4_1_ddin0_en;   // axi_ufi_adpt_0:ddin0_en_4_1 -> uib:ddin0_en_4_1
	wire   [1:0] axi_ufi_adpt_0_ub48_group_4_1_ddin1_en;   // axi_ufi_adpt_0:ddin1_en_4_1 -> uib:ddin1_en_4_1
	wire   [7:0] uib_ub48_group_4_1_ddin1;                 // uib:ddin1_4_1 -> axi_ufi_adpt_0:ddin1_4_1
	wire   [1:0] uib_ub48_4_rd_vld;                        // uib:rd_vld_4 -> axi_ufi_adpt_0:rd_vld_4
	wire   [3:0] uib_ub48_4_remap_sts;                     // uib:remap_sts_4 -> axi_ufi_adpt_0:remap_sts_4
	wire   [1:0] axi_ufi_adpt_0_ub48_4_rden;               // axi_ufi_adpt_0:rden_4 -> uib:rden_4
	wire   [1:0] axi_ufi_adpt_0_ufi_axi_extra_ardout1_vld; // axi_ufi_adpt_0:ardout1_vld -> uib:ardout1_vld_0
	wire  [29:0] axi_ufi_adpt_0_ufi_axi_extra_axdout0_p0;  // axi_ufi_adpt_0:axdout0_p0 -> uib:axdout0_p0_0
	wire  [19:0] axi_ufi_adpt_0_ufi_axi_extra_axdout1_p1;  // axi_ufi_adpt_0:axdout1_p1 -> uib:axdout1_p1_0
	wire  [19:0] axi_ufi_adpt_0_ufi_axi_extra_axdout0_p1;  // axi_ufi_adpt_0:axdout0_p1 -> uib:axdout0_p1_0
	wire   [1:0] axi_ufi_adpt_0_ufi_axi_extra_ardout3_vld; // axi_ufi_adpt_0:ardout3_vld -> uib:ardout3_vld_0
	wire   [1:0] axi_ufi_adpt_0_ufi_axi_extra_ardout1_qos; // axi_ufi_adpt_0:ardout1_qos -> uib:ardout1_qos_0
	wire   [1:0] axi_ufi_adpt_0_ufi_axi_extra_ardout3_qos; // axi_ufi_adpt_0:ardout3_qos -> uib:ardout3_qos_0
	wire   [1:0] axi_ufi_adpt_0_ufi_axi_extra_ardout3_ap;  // axi_ufi_adpt_0:ardout3_ap -> uib:ardout3_ap_0
	wire   [1:0] axi_ufi_adpt_0_ufi_axi_extra_ardout0_ap;  // axi_ufi_adpt_0:ardout0_ap -> uib:ardout0_ap_0
	wire   [1:0] axi_ufi_adpt_0_ufi_axi_extra_ardout1_ap;  // axi_ufi_adpt_0:ardout1_ap -> uib:ardout1_ap_0
	wire   [1:0] axi_ufi_adpt_0_ufi_axi_extra_ardout2_ap;  // axi_ufi_adpt_0:ardout2_ap -> uib:ardout2_ap_0
	wire  [17:0] axi_ufi_adpt_0_ufi_axi_extra_ardout3_p1;  // axi_ufi_adpt_0:ardout3_p1 -> uib:ardout3_p1_0
	wire  [49:0] axi_ufi_adpt_0_ufi_axi_extra_ardout2_p0;  // axi_ufi_adpt_0:ardout2_p0 -> uib:ardout2_p0_0
	wire  [17:0] axi_ufi_adpt_0_ufi_axi_extra_ardout2_p1;  // axi_ufi_adpt_0:ardout2_p1 -> uib:ardout2_p1_0
	wire  [17:0] axi_ufi_adpt_0_ufi_axi_extra_ardout0_p1;  // axi_ufi_adpt_0:ardout0_p1 -> uib:ardout0_p1_0
	wire  [29:0] axi_ufi_adpt_0_ufi_axi_extra_axdout1_p0;  // axi_ufi_adpt_0:axdout1_p0 -> uib:axdout1_p0_0
	wire  [17:0] axi_ufi_adpt_0_ufi_axi_extra_ardout1_p1;  // axi_ufi_adpt_0:ardout1_p1 -> uib:ardout1_p1_0
	wire  [49:0] axi_ufi_adpt_0_ufi_axi_extra_ardout0_p0;  // axi_ufi_adpt_0:ardout0_p0 -> uib:ardout0_p0_0
	wire   [1:0] axi_ufi_adpt_0_ufi_axi_extra_ardout0_qos; // axi_ufi_adpt_0:ardout0_qos -> uib:ardout0_qos_0
	wire  [49:0] axi_ufi_adpt_0_ufi_axi_extra_ardout1_p0;  // axi_ufi_adpt_0:ardout1_p0 -> uib:ardout1_p0_0
	wire  [49:0] axi_ufi_adpt_0_ufi_axi_extra_ardout3_p0;  // axi_ufi_adpt_0:ardout3_p0 -> uib:ardout3_p0_0
	wire   [1:0] axi_ufi_adpt_0_ufi_axi_extra_ardout2_qos; // axi_ufi_adpt_0:ardout2_qos -> uib:ardout2_qos_0
	wire         uib_wmc_clk_clk;                          // uib:wmc_clk -> axi_ufi_adpt_0:wmc_clk_in
	wire         uib_phy_clk_clk;                          // uib:phy_clk -> axi_ufi_adpt_0:phy_clk_in
	wire         uib_wmcrst_n_reset;                       // uib:wmcrst_n -> axi_ufi_adpt_0:wmcrst_n_in
	wire   [1:0] axi_ufi_adpt_0_ub48_group_0_0_ddout1_en;  // axi_ufi_adpt_0:ddout1_en_0_0 -> uib:ddout1_en_0_0
	wire  [79:0] axi_ufi_adpt_0_ub48_group_0_0_sdout0;     // axi_ufi_adpt_0:sdout0_0_0 -> uib:sdout0_0_0
	wire   [1:0] axi_ufi_adpt_0_ub48_group_0_0_sdout0_en;  // axi_ufi_adpt_0:sdout0_en_0_0 -> uib:sdout0_en_0_0
	wire   [1:0] axi_ufi_adpt_0_ub48_group_0_0_ddout0_en;  // axi_ufi_adpt_0:ddout0_en_0_0 -> uib:ddout0_en_0_0
	wire   [1:0] axi_ufi_adpt_0_ub48_group_0_0_sdin0_en;   // axi_ufi_adpt_0:sdin0_en_0_0 -> uib:sdin0_en_0_0
	wire   [7:0] axi_ufi_adpt_0_ub48_group_0_0_ddout0;     // axi_ufi_adpt_0:ddout0_0_0 -> uib:ddout0_0_0
	wire  [79:0] uib_ub48_group_0_0_sdin0;                 // uib:sdin0_0_0 -> axi_ufi_adpt_0:sdin0_0_0
	wire   [7:0] axi_ufi_adpt_0_ub48_group_0_0_ddout1;     // axi_ufi_adpt_0:ddout1_0_0 -> uib:ddout1_0_0
	wire   [7:0] uib_ub48_group_0_0_ddin0;                 // uib:ddin0_0_0 -> axi_ufi_adpt_0:ddin0_0_0
	wire   [1:0] axi_ufi_adpt_0_ub48_group_0_0_ddin0_en;   // axi_ufi_adpt_0:ddin0_en_0_0 -> uib:ddin0_en_0_0
	wire   [1:0] axi_ufi_adpt_0_ub48_group_0_0_ddin1_en;   // axi_ufi_adpt_0:ddin1_en_0_0 -> uib:ddin1_en_0_0
	wire   [7:0] uib_ub48_group_0_0_ddin1;                 // uib:ddin1_0_0 -> axi_ufi_adpt_0:ddin1_0_0
	wire   [1:0] axi_ufi_adpt_0_ub48_group_0_1_ddout1_en;  // axi_ufi_adpt_0:ddout1_en_0_1 -> uib:ddout1_en_0_1
	wire  [79:0] axi_ufi_adpt_0_ub48_group_0_1_sdout0;     // axi_ufi_adpt_0:sdout0_0_1 -> uib:sdout0_0_1
	wire   [1:0] axi_ufi_adpt_0_ub48_group_0_1_sdout0_en;  // axi_ufi_adpt_0:sdout0_en_0_1 -> uib:sdout0_en_0_1
	wire   [1:0] axi_ufi_adpt_0_ub48_group_0_1_ddout0_en;  // axi_ufi_adpt_0:ddout0_en_0_1 -> uib:ddout0_en_0_1
	wire   [1:0] axi_ufi_adpt_0_ub48_group_0_1_sdin0_en;   // axi_ufi_adpt_0:sdin0_en_0_1 -> uib:sdin0_en_0_1
	wire   [7:0] axi_ufi_adpt_0_ub48_group_0_1_ddout0;     // axi_ufi_adpt_0:ddout0_0_1 -> uib:ddout0_0_1
	wire  [79:0] uib_ub48_group_0_1_sdin0;                 // uib:sdin0_0_1 -> axi_ufi_adpt_0:sdin0_0_1
	wire   [7:0] axi_ufi_adpt_0_ub48_group_0_1_ddout1;     // axi_ufi_adpt_0:ddout1_0_1 -> uib:ddout1_0_1
	wire   [7:0] uib_ub48_group_0_1_ddin0;                 // uib:ddin0_0_1 -> axi_ufi_adpt_0:ddin0_0_1
	wire   [1:0] axi_ufi_adpt_0_ub48_group_0_1_ddin0_en;   // axi_ufi_adpt_0:ddin0_en_0_1 -> uib:ddin0_en_0_1
	wire   [1:0] axi_ufi_adpt_0_ub48_group_0_1_ddin1_en;   // axi_ufi_adpt_0:ddin1_en_0_1 -> uib:ddin1_en_0_1
	wire   [7:0] uib_ub48_group_0_1_ddin1;                 // uib:ddin1_0_1 -> axi_ufi_adpt_0:ddin1_0_1
	wire   [1:0] uib_ub48_0_rd_vld;                        // uib:rd_vld_0 -> axi_ufi_adpt_0:rd_vld_0
	wire   [3:0] uib_ub48_0_remap_sts;                     // uib:remap_sts_0 -> axi_ufi_adpt_0:remap_sts_0
	wire   [1:0] axi_ufi_adpt_0_ub48_0_rden;               // axi_ufi_adpt_0:rden_0 -> uib:rden_0
	wire   [1:0] axi_ufi_adpt_0_ub48_group_1_0_ddout1_en;  // axi_ufi_adpt_0:ddout1_en_1_0 -> uib:ddout1_en_1_0
	wire  [79:0] axi_ufi_adpt_0_ub48_group_1_0_sdout0;     // axi_ufi_adpt_0:sdout0_1_0 -> uib:sdout0_1_0
	wire   [1:0] axi_ufi_adpt_0_ub48_group_1_0_sdout0_en;  // axi_ufi_adpt_0:sdout0_en_1_0 -> uib:sdout0_en_1_0
	wire   [1:0] axi_ufi_adpt_0_ub48_group_1_0_ddout0_en;  // axi_ufi_adpt_0:ddout0_en_1_0 -> uib:ddout0_en_1_0
	wire   [1:0] axi_ufi_adpt_0_ub48_group_1_0_sdin0_en;   // axi_ufi_adpt_0:sdin0_en_1_0 -> uib:sdin0_en_1_0
	wire   [7:0] axi_ufi_adpt_0_ub48_group_1_0_ddout0;     // axi_ufi_adpt_0:ddout0_1_0 -> uib:ddout0_1_0
	wire  [79:0] uib_ub48_group_1_0_sdin0;                 // uib:sdin0_1_0 -> axi_ufi_adpt_0:sdin0_1_0
	wire   [7:0] axi_ufi_adpt_0_ub48_group_1_0_ddout1;     // axi_ufi_adpt_0:ddout1_1_0 -> uib:ddout1_1_0
	wire   [7:0] uib_ub48_group_1_0_ddin0;                 // uib:ddin0_1_0 -> axi_ufi_adpt_0:ddin0_1_0
	wire   [1:0] axi_ufi_adpt_0_ub48_group_1_0_ddin0_en;   // axi_ufi_adpt_0:ddin0_en_1_0 -> uib:ddin0_en_1_0
	wire   [1:0] axi_ufi_adpt_0_ub48_group_1_0_ddin1_en;   // axi_ufi_adpt_0:ddin1_en_1_0 -> uib:ddin1_en_1_0
	wire   [7:0] uib_ub48_group_1_0_ddin1;                 // uib:ddin1_1_0 -> axi_ufi_adpt_0:ddin1_1_0
	wire   [1:0] axi_ufi_adpt_0_ub48_group_1_1_ddout1_en;  // axi_ufi_adpt_0:ddout1_en_1_1 -> uib:ddout1_en_1_1
	wire  [79:0] axi_ufi_adpt_0_ub48_group_1_1_sdout0;     // axi_ufi_adpt_0:sdout0_1_1 -> uib:sdout0_1_1
	wire   [1:0] axi_ufi_adpt_0_ub48_group_1_1_sdout0_en;  // axi_ufi_adpt_0:sdout0_en_1_1 -> uib:sdout0_en_1_1
	wire   [1:0] axi_ufi_adpt_0_ub48_group_1_1_ddout0_en;  // axi_ufi_adpt_0:ddout0_en_1_1 -> uib:ddout0_en_1_1
	wire   [1:0] axi_ufi_adpt_0_ub48_group_1_1_sdin0_en;   // axi_ufi_adpt_0:sdin0_en_1_1 -> uib:sdin0_en_1_1
	wire   [7:0] axi_ufi_adpt_0_ub48_group_1_1_ddout0;     // axi_ufi_adpt_0:ddout0_1_1 -> uib:ddout0_1_1
	wire  [79:0] uib_ub48_group_1_1_sdin0;                 // uib:sdin0_1_1 -> axi_ufi_adpt_0:sdin0_1_1
	wire   [7:0] axi_ufi_adpt_0_ub48_group_1_1_ddout1;     // axi_ufi_adpt_0:ddout1_1_1 -> uib:ddout1_1_1
	wire   [7:0] uib_ub48_group_1_1_ddin0;                 // uib:ddin0_1_1 -> axi_ufi_adpt_0:ddin0_1_1
	wire   [1:0] axi_ufi_adpt_0_ub48_group_1_1_ddin0_en;   // axi_ufi_adpt_0:ddin0_en_1_1 -> uib:ddin0_en_1_1
	wire   [1:0] axi_ufi_adpt_0_ub48_group_1_1_ddin1_en;   // axi_ufi_adpt_0:ddin1_en_1_1 -> uib:ddin1_en_1_1
	wire   [7:0] uib_ub48_group_1_1_ddin1;                 // uib:ddin1_1_1 -> axi_ufi_adpt_0:ddin1_1_1
	wire   [1:0] uib_ub48_1_rd_vld;                        // uib:rd_vld_1 -> axi_ufi_adpt_0:rd_vld_1
	wire   [3:0] uib_ub48_1_remap_sts;                     // uib:remap_sts_1 -> axi_ufi_adpt_0:remap_sts_1
	wire   [1:0] axi_ufi_adpt_0_ub48_1_rden;               // axi_ufi_adpt_0:rden_1 -> uib:rden_1
	wire   [1:0] axi_ufi_adpt_0_ub48_group_5_0_ddout1_en;  // axi_ufi_adpt_0:ddout1_en_5_0 -> uib:ddout1_en_5_0
	wire  [79:0] axi_ufi_adpt_0_ub48_group_5_0_sdout0;     // axi_ufi_adpt_0:sdout0_5_0 -> uib:sdout0_5_0
	wire   [1:0] axi_ufi_adpt_0_ub48_group_5_0_sdout0_en;  // axi_ufi_adpt_0:sdout0_en_5_0 -> uib:sdout0_en_5_0
	wire   [1:0] axi_ufi_adpt_0_ub48_group_5_0_ddout0_en;  // axi_ufi_adpt_0:ddout0_en_5_0 -> uib:ddout0_en_5_0
	wire   [1:0] axi_ufi_adpt_0_ub48_group_5_0_sdin0_en;   // axi_ufi_adpt_0:sdin0_en_5_0 -> uib:sdin0_en_5_0
	wire   [7:0] axi_ufi_adpt_0_ub48_group_5_0_ddout0;     // axi_ufi_adpt_0:ddout0_5_0 -> uib:ddout0_5_0
	wire  [79:0] uib_ub48_group_5_0_sdin0;                 // uib:sdin0_5_0 -> axi_ufi_adpt_0:sdin0_5_0
	wire   [7:0] axi_ufi_adpt_0_ub48_group_5_0_ddout1;     // axi_ufi_adpt_0:ddout1_5_0 -> uib:ddout1_5_0
	wire   [7:0] uib_ub48_group_5_0_ddin0;                 // uib:ddin0_5_0 -> axi_ufi_adpt_0:ddin0_5_0
	wire   [1:0] axi_ufi_adpt_0_ub48_group_5_0_ddin0_en;   // axi_ufi_adpt_0:ddin0_en_5_0 -> uib:ddin0_en_5_0
	wire   [1:0] axi_ufi_adpt_0_ub48_group_5_0_ddin1_en;   // axi_ufi_adpt_0:ddin1_en_5_0 -> uib:ddin1_en_5_0
	wire   [7:0] uib_ub48_group_5_0_ddin1;                 // uib:ddin1_5_0 -> axi_ufi_adpt_0:ddin1_5_0
	wire   [1:0] axi_ufi_adpt_0_ub48_group_5_1_ddout1_en;  // axi_ufi_adpt_0:ddout1_en_5_1 -> uib:ddout1_en_5_1
	wire  [79:0] axi_ufi_adpt_0_ub48_group_5_1_sdout0;     // axi_ufi_adpt_0:sdout0_5_1 -> uib:sdout0_5_1
	wire   [1:0] axi_ufi_adpt_0_ub48_group_5_1_sdout0_en;  // axi_ufi_adpt_0:sdout0_en_5_1 -> uib:sdout0_en_5_1
	wire   [1:0] axi_ufi_adpt_0_ub48_group_5_1_ddout0_en;  // axi_ufi_adpt_0:ddout0_en_5_1 -> uib:ddout0_en_5_1
	wire   [1:0] axi_ufi_adpt_0_ub48_group_5_1_sdin0_en;   // axi_ufi_adpt_0:sdin0_en_5_1 -> uib:sdin0_en_5_1
	wire   [7:0] axi_ufi_adpt_0_ub48_group_5_1_ddout0;     // axi_ufi_adpt_0:ddout0_5_1 -> uib:ddout0_5_1
	wire  [79:0] uib_ub48_group_5_1_sdin0;                 // uib:sdin0_5_1 -> axi_ufi_adpt_0:sdin0_5_1
	wire   [7:0] axi_ufi_adpt_0_ub48_group_5_1_ddout1;     // axi_ufi_adpt_0:ddout1_5_1 -> uib:ddout1_5_1
	wire   [7:0] uib_ub48_group_5_1_ddin0;                 // uib:ddin0_5_1 -> axi_ufi_adpt_0:ddin0_5_1
	wire   [1:0] axi_ufi_adpt_0_ub48_group_5_1_ddin0_en;   // axi_ufi_adpt_0:ddin0_en_5_1 -> uib:ddin0_en_5_1
	wire   [1:0] axi_ufi_adpt_0_ub48_group_5_1_ddin1_en;   // axi_ufi_adpt_0:ddin1_en_5_1 -> uib:ddin1_en_5_1
	wire   [7:0] uib_ub48_group_5_1_ddin1;                 // uib:ddin1_5_1 -> axi_ufi_adpt_0:ddin1_5_1
	wire   [1:0] uib_ub48_5_rd_vld;                        // uib:rd_vld_5 -> axi_ufi_adpt_0:rd_vld_5
	wire   [3:0] uib_ub48_5_remap_sts;                     // uib:remap_sts_5 -> axi_ufi_adpt_0:remap_sts_5
	wire   [1:0] axi_ufi_adpt_0_ub48_5_rden;               // axi_ufi_adpt_0:rden_5 -> uib:rden_5
	wire   [1:0] axi_ufi_adpt_0_ub48_group_6_0_ddout1_en;  // axi_ufi_adpt_0:ddout1_en_6_0 -> uib:ddout1_en_6_0
	wire  [79:0] axi_ufi_adpt_0_ub48_group_6_0_sdout0;     // axi_ufi_adpt_0:sdout0_6_0 -> uib:sdout0_6_0
	wire   [1:0] axi_ufi_adpt_0_ub48_group_6_0_sdout0_en;  // axi_ufi_adpt_0:sdout0_en_6_0 -> uib:sdout0_en_6_0
	wire   [1:0] axi_ufi_adpt_0_ub48_group_6_0_ddout0_en;  // axi_ufi_adpt_0:ddout0_en_6_0 -> uib:ddout0_en_6_0
	wire   [1:0] axi_ufi_adpt_0_ub48_group_6_0_sdin0_en;   // axi_ufi_adpt_0:sdin0_en_6_0 -> uib:sdin0_en_6_0
	wire   [7:0] axi_ufi_adpt_0_ub48_group_6_0_ddout0;     // axi_ufi_adpt_0:ddout0_6_0 -> uib:ddout0_6_0
	wire  [79:0] uib_ub48_group_6_0_sdin0;                 // uib:sdin0_6_0 -> axi_ufi_adpt_0:sdin0_6_0
	wire   [7:0] axi_ufi_adpt_0_ub48_group_6_0_ddout1;     // axi_ufi_adpt_0:ddout1_6_0 -> uib:ddout1_6_0
	wire   [7:0] uib_ub48_group_6_0_ddin0;                 // uib:ddin0_6_0 -> axi_ufi_adpt_0:ddin0_6_0
	wire   [1:0] axi_ufi_adpt_0_ub48_group_6_0_ddin0_en;   // axi_ufi_adpt_0:ddin0_en_6_0 -> uib:ddin0_en_6_0
	wire   [1:0] axi_ufi_adpt_0_ub48_group_6_0_ddin1_en;   // axi_ufi_adpt_0:ddin1_en_6_0 -> uib:ddin1_en_6_0
	wire   [7:0] uib_ub48_group_6_0_ddin1;                 // uib:ddin1_6_0 -> axi_ufi_adpt_0:ddin1_6_0
	wire   [1:0] axi_ufi_adpt_0_ub48_group_6_1_ddout1_en;  // axi_ufi_adpt_0:ddout1_en_6_1 -> uib:ddout1_en_6_1
	wire  [79:0] axi_ufi_adpt_0_ub48_group_6_1_sdout0;     // axi_ufi_adpt_0:sdout0_6_1 -> uib:sdout0_6_1
	wire   [1:0] axi_ufi_adpt_0_ub48_group_6_1_sdout0_en;  // axi_ufi_adpt_0:sdout0_en_6_1 -> uib:sdout0_en_6_1
	wire   [1:0] axi_ufi_adpt_0_ub48_group_6_1_ddout0_en;  // axi_ufi_adpt_0:ddout0_en_6_1 -> uib:ddout0_en_6_1
	wire   [1:0] axi_ufi_adpt_0_ub48_group_6_1_sdin0_en;   // axi_ufi_adpt_0:sdin0_en_6_1 -> uib:sdin0_en_6_1
	wire   [7:0] axi_ufi_adpt_0_ub48_group_6_1_ddout0;     // axi_ufi_adpt_0:ddout0_6_1 -> uib:ddout0_6_1
	wire  [79:0] uib_ub48_group_6_1_sdin0;                 // uib:sdin0_6_1 -> axi_ufi_adpt_0:sdin0_6_1
	wire   [7:0] axi_ufi_adpt_0_ub48_group_6_1_ddout1;     // axi_ufi_adpt_0:ddout1_6_1 -> uib:ddout1_6_1
	wire   [7:0] uib_ub48_group_6_1_ddin0;                 // uib:ddin0_6_1 -> axi_ufi_adpt_0:ddin0_6_1
	wire   [1:0] axi_ufi_adpt_0_ub48_group_6_1_ddin0_en;   // axi_ufi_adpt_0:ddin0_en_6_1 -> uib:ddin0_en_6_1
	wire   [1:0] axi_ufi_adpt_0_ub48_group_6_1_ddin1_en;   // axi_ufi_adpt_0:ddin1_en_6_1 -> uib:ddin1_en_6_1
	wire   [7:0] uib_ub48_group_6_1_ddin1;                 // uib:ddin1_6_1 -> axi_ufi_adpt_0:ddin1_6_1
	wire   [1:0] uib_ub48_6_rd_vld;                        // uib:rd_vld_6 -> axi_ufi_adpt_0:rd_vld_6
	wire   [3:0] uib_ub48_6_remap_sts;                     // uib:remap_sts_6 -> axi_ufi_adpt_0:remap_sts_6
	wire   [1:0] axi_ufi_adpt_0_ub48_6_rden;               // axi_ufi_adpt_0:rden_6 -> uib:rden_6

	hbm_bottom_example_design_altera_abstract_uib_191_jqkrkwy #(
		.PHY_CONFIG_ENUM                                  ("CONFIG_PHY_AND_HARD_CTRL"),
		.PHY_RESET_DEBOUNCE_EN                            (0),
		.PHY_UFIP2CPTRDLY                                 (0),
		.PHY_UFIC2PPTRDLY                                 (0),
		.DIAG_ABSTRACT_PHY                                (1),
		.DIAG_ENABLE_JTAG_UART                            (0),
		.DIAG_FAST_SIM_PLL                                (1),
		.DIAG_EXPORT_UIBPLL_LOCKED                        (0),
		.PORT_MEM_C_WIDTH                                 (8),
		.PORT_MEM_R_WIDTH                                 (6),
		.PORT_MEM_DQ_WIDTH                                (128),
		.PORT_MEM_DM_WIDTH                                (16),
		.PORT_MEM_DBI_WIDTH                               (16),
		.PORT_MEM_PAR_WIDTH                               (4),
		.PORT_MEM_DERR_WIDTH                              (4),
		.PORT_MEM_RDQS_T_WIDTH                            (4),
		.PORT_MEM_RDQS_C_WIDTH                            (4),
		.PORT_MEM_WDQS_T_WIDTH                            (4),
		.PORT_MEM_WDQS_C_WIDTH                            (4),
		.PORT_MEM_RD_WIDTH                                (8),
		.PORT_M2U_BRIDGE_TEMP_WIDTH                       (3),
		.PORT_M2U_BRIDGE_WSO_WIDTH                        (8),
		.PORT_MID_STACK_UFI_TEMP_WIDTH                    (3),
		.PORT_MID_STACK_UFI_WSO_WIDTH                     (8),
		.PORT_UB48_RDEN_WIDTH                             (2),
		.PORT_UB48_RD_VLD_WIDTH                           (2),
		.PORT_UB48_REMAP_STS_WIDTH                        (4),
		.PORT_UB48_GROUP_SDOUT0_WIDTH                     (80),
		.PORT_UB48_GROUP_SDOUT0_EN_WIDTH                  (2),
		.PORT_UB48_GROUP_SDIN0_WIDTH                      (80),
		.PORT_UB48_GROUP_SDIN0_EN_WIDTH                   (2),
		.PORT_UB48_GROUP_DDOUT0_WIDTH                     (8),
		.PORT_UB48_GROUP_DDOUT0_EN_WIDTH                  (2),
		.PORT_UB48_GROUP_DDIN0_WIDTH                      (8),
		.PORT_UB48_GROUP_DDIN0_EN_WIDTH                   (2),
		.PORT_UB48_GROUP_DDOUT1_WIDTH                     (8),
		.PORT_UB48_GROUP_DDOUT1_EN_WIDTH                  (2),
		.PORT_UB48_GROUP_DDIN1_WIDTH                      (8),
		.PORT_UB48_GROUP_DDIN1_EN_WIDTH                   (2),
		.PORT_UFI_AXI_EXTRA_AXDOUT0_P0_WIDTH              (30),
		.PORT_UFI_AXI_EXTRA_AXDOUT0_P1_WIDTH              (20),
		.PORT_UFI_AXI_EXTRA_AXDOUT1_P0_WIDTH              (30),
		.PORT_UFI_AXI_EXTRA_AXDOUT1_P1_WIDTH              (20),
		.PORT_UFI_AXI_EXTRA_ARDOUT1_P0_WIDTH              (50),
		.PORT_UFI_AXI_EXTRA_ARDOUT1_P1_WIDTH              (18),
		.PORT_UFI_AXI_EXTRA_ARDOUT1_QOS_WIDTH             (2),
		.PORT_UFI_AXI_EXTRA_ARDOUT1_AP_WIDTH              (2),
		.PORT_UFI_AXI_EXTRA_ARDOUT1_VLD_WIDTH             (2),
		.PORT_UFI_AXI_EXTRA_ARDOUT3_P0_WIDTH              (50),
		.PORT_UFI_AXI_EXTRA_ARDOUT3_P1_WIDTH              (18),
		.PORT_UFI_AXI_EXTRA_ARDOUT3_QOS_WIDTH             (2),
		.PORT_UFI_AXI_EXTRA_ARDOUT3_AP_WIDTH              (2),
		.PORT_UFI_AXI_EXTRA_ARDOUT3_VLD_WIDTH             (2),
		.PORT_UFI_AXI_EXTRA_ARDOUT0_P0_WIDTH              (50),
		.PORT_UFI_AXI_EXTRA_ARDOUT0_P1_WIDTH              (18),
		.PORT_UFI_AXI_EXTRA_ARDOUT0_QOS_WIDTH             (2),
		.PORT_UFI_AXI_EXTRA_ARDOUT0_AP_WIDTH              (2),
		.PORT_UFI_AXI_EXTRA_ARDOUT2_P0_WIDTH              (50),
		.PORT_UFI_AXI_EXTRA_ARDOUT2_P1_WIDTH              (18),
		.PORT_UFI_AXI_EXTRA_ARDOUT2_AP_WIDTH              (2),
		.PORT_UFI_AXI_EXTRA_ARDOUT2_QOS_WIDTH             (2),
		.PORT_CAL_LAT_P_WIDTH                             (3),
		.PORT_F2C_SLAVE_ADDRESS_WIDTH                     (27),
		.PORT_F2C_SLAVE_RDATA_WIDTH                       (32),
		.PORT_F2C_SLAVE_WDATA_WIDTH                       (32),
		.PORT_F2C_SLAVE_BYTEENABLE_WIDTH                  (4),
		.MEGAFUNC_DEVICE_FAMILY                           (""),
		.MEM_IF_CLK_MHZ                                   (600),
		.PHYCLK_FREQ_PS                                   (1666),
		.WMCCLK_FREQ_PS                                   (3332),
		.HR_WUFI                                          (1),
		.TXDBI_EN                                         (255),
		.RXDBI_EN                                         (255),
		.TXPAR_EN                                         (1),
		.RXPAR_EN                                         (1),
		.PAR_MODE                                         (2),
		.PAR_LAT                                          (1),
		.WR_DM_EN                                         (0),
		.RD_DM_EN                                         (0),
		.ECC_DEC_EN                                       (0),
		.ECC_ENC_EN                                       (0),
		.UFI_TOP                                          (0),
		.UIB_FLIPPED                                      (0),
		.PLL_CPA_ONLY_MODE                                (0),
		.PHY_USE_HARD_CONTROLLER                          (1),
		.SKIP_CAL                                         (0),
		.EXPORT_DFT                                       (0),
		.SILICON_REV                                      ("14nm4b"),
		.PROT_MODE                                        ("HBM2"),
		.HBMC_MODE                                        ("hbmc"),
		.ENABLE_C2F                                       (0),
		.CORE_CLK_FREQ_MHZ                                (300),
		.DEBOUNCE_PERIOD_MS                               (20),
		.SEQ_SIM_CAL_CLK_DIVIDE                           (28),
		.SEQ_SYNTH_CAL_CLK_DIVIDE                         (30),
		.SEQ_SIM_NIOS_PERIOD_PS                           (1000),
		.PA_FEEDBACK_DIVIDER_C0                           ("div_by_4"),
		.PA_FEEDBACK_DIVIDER_C1                           ("div_by_1"),
		.PA_FEEDBACK_DIVIDER_P0                           ("div_by_1"),
		.PA_FEEDBACK_DIVIDER_P1                           ("div_by_1"),
		.PA_EXPONENT0                                     (7),
		.PA_EXPONENT1                                     (1),
		.PLL_VCO_FREQ_MHZ_INT                             (1200),
		.PLL_VCO_TO_MEM_CLK_FREQ_RATIO                    (2),
		.PLL_PHY_CLK_VCO_PHASE                            (1),
		.PLL_NCNTR_SETTING                                (1),
		.PLL_VCO_FREQ_PS_STR                              ("832 ps"),
		.PLL_REF_CLK_FREQ_PS_STR                          ("4992 ps"),
		.PLL_SIM_VCO_FREQ_PS                              (832),
		.PLL_SIM_PHYCLK_0_FREQ_PS                         (3328),
		.PLL_SIM_PHYCLK_1_FREQ_PS                         (1664),
		.PLL_SIM_PHY_CLK_VCO_PHASE_PS                     (104),
		.PLL_REF_CLK_FREQ_PS_STR_FROM_API                 ("5004 ps"),
		.PLL_VCO_FREQ_PS_STR_FROM_API                     ("834 ps"),
		.PLL_M_CNT_HIGH                                   (3),
		.PLL_M_CNT_LOW                                    (3),
		.PLL_N_CNT_HIGH                                   (256),
		.PLL_N_CNT_LOW                                    (256),
		.PLL_M_CNT_BYPASS_EN                              ("false"),
		.PLL_N_CNT_BYPASS_EN                              ("true"),
		.PLL_M_CNT_EVEN_DUTY_EN                           ("false"),
		.PLL_N_CNT_EVEN_DUTY_EN                           ("false"),
		.PLL_CP_SETTING                                   ("pll_cp_setting10"),
		.PLL_RIPPLECAP_SETTING                            ("pll_ripplecap_setting0"),
		.PLL_BW_CTRL                                      ("pll_bw_res_setting3"),
		.PLL_C_CNT_HIGH_0                                 (1),
		.PLL_C_CNT_LOW_0                                  (1),
		.PLL_C_CNT_PRST_0                                 (1),
		.PLL_C_CNT_PH_MUX_PRST_0                          (1),
		.PLL_C_CNT_BYPASS_EN_0                            ("false"),
		.PLL_C_CNT_EVEN_DUTY_EN_0                         ("false"),
		.PLL_C_CNT_HIGH_1                                 (2),
		.PLL_C_CNT_LOW_1                                  (2),
		.PLL_C_CNT_PRST_1                                 (1),
		.PLL_C_CNT_PH_MUX_PRST_1                          (1),
		.PLL_C_CNT_BYPASS_EN_1                            ("false"),
		.PLL_C_CNT_EVEN_DUTY_EN_1                         ("false"),
		.PLL_C_CNT_HIGH_2                                 (256),
		.PLL_C_CNT_LOW_2                                  (256),
		.PLL_C_CNT_PRST_2                                 (1),
		.PLL_C_CNT_PH_MUX_PRST_2                          (0),
		.PLL_C_CNT_BYPASS_EN_2                            ("true"),
		.PLL_C_CNT_EVEN_DUTY_EN_2                         ("false"),
		.PLL_C_CNT_HIGH_3                                 (256),
		.PLL_C_CNT_LOW_3                                  (256),
		.PLL_C_CNT_PRST_3                                 (1),
		.PLL_C_CNT_PH_MUX_PRST_3                          (0),
		.PLL_C_CNT_BYPASS_EN_3                            ("true"),
		.PLL_C_CNT_EVEN_DUTY_EN_3                         ("false"),
		.PLL_C_CNT_HIGH_4                                 (256),
		.PLL_C_CNT_LOW_4                                  (256),
		.PLL_C_CNT_PRST_4                                 (1),
		.PLL_C_CNT_PH_MUX_PRST_4                          (0),
		.PLL_C_CNT_BYPASS_EN_4                            ("true"),
		.PLL_C_CNT_EVEN_DUTY_EN_4                         ("false"),
		.PLL_C_CNT_HIGH_5                                 (256),
		.PLL_C_CNT_LOW_5                                  (256),
		.PLL_C_CNT_PRST_5                                 (1),
		.PLL_C_CNT_PH_MUX_PRST_5                          (0),
		.PLL_C_CNT_BYPASS_EN_5                            ("true"),
		.PLL_C_CNT_EVEN_DUTY_EN_5                         ("false"),
		.PLL_C_CNT_HIGH_6                                 (256),
		.PLL_C_CNT_LOW_6                                  (256),
		.PLL_C_CNT_PRST_6                                 (1),
		.PLL_C_CNT_PH_MUX_PRST_6                          (0),
		.PLL_C_CNT_BYPASS_EN_6                            ("true"),
		.PLL_C_CNT_EVEN_DUTY_EN_6                         ("false"),
		.PLL_C_CNT_HIGH_7                                 (256),
		.PLL_C_CNT_LOW_7                                  (256),
		.PLL_C_CNT_PRST_7                                 (1),
		.PLL_C_CNT_PH_MUX_PRST_7                          (0),
		.PLL_C_CNT_BYPASS_EN_7                            ("true"),
		.PLL_C_CNT_EVEN_DUTY_EN_7                         ("false"),
		.PLL_C_CNT_HIGH_8                                 (256),
		.PLL_C_CNT_LOW_8                                  (256),
		.PLL_C_CNT_PRST_8                                 (1),
		.PLL_C_CNT_PH_MUX_PRST_8                          (0),
		.PLL_C_CNT_BYPASS_EN_8                            ("true"),
		.PLL_C_CNT_EVEN_DUTY_EN_8                         ("false"),
		.PLL_C_CNT_FREQ_PS_STR_0                          ("1668 ps"),
		.PLL_C_CNT_PHASE_PS_STR_0                         ("104 ps"),
		.PLL_C_CNT_DUTY_CYCLE_0                           (50),
		.PLL_C_CNT_FREQ_PS_STR_1                          ("3336 ps"),
		.PLL_C_CNT_PHASE_PS_STR_1                         ("104 ps"),
		.PLL_C_CNT_DUTY_CYCLE_1                           (50),
		.PLL_C_CNT_FREQ_PS_STR_2                          ("0.0 MHz"),
		.PLL_C_CNT_PHASE_PS_STR_2                         ("0 ps"),
		.PLL_C_CNT_DUTY_CYCLE_2                           (50),
		.PLL_C_CNT_FREQ_PS_STR_3                          ("0.0 MHz"),
		.PLL_C_CNT_PHASE_PS_STR_3                         ("0 ps"),
		.PLL_C_CNT_DUTY_CYCLE_3                           (50),
		.PLL_C_CNT_FREQ_PS_STR_4                          ("0.0 MHz"),
		.PLL_C_CNT_PHASE_PS_STR_4                         ("0 ps"),
		.PLL_C_CNT_DUTY_CYCLE_4                           (50),
		.PLL_C_CNT_FREQ_PS_STR_5                          ("0.0 MHz"),
		.PLL_C_CNT_PHASE_PS_STR_5                         ("0 ps"),
		.PLL_C_CNT_DUTY_CYCLE_5                           (50),
		.PLL_C_CNT_FREQ_PS_STR_6                          ("0.0 MHz"),
		.PLL_C_CNT_PHASE_PS_STR_6                         ("0 ps"),
		.PLL_C_CNT_DUTY_CYCLE_6                           (50),
		.PLL_C_CNT_FREQ_PS_STR_7                          ("0.0 MHz"),
		.PLL_C_CNT_PHASE_PS_STR_7                         ("0 ps"),
		.PLL_C_CNT_DUTY_CYCLE_7                           (50),
		.PLL_C_CNT_FREQ_PS_STR_8                          ("0.0 MHz"),
		.PLL_C_CNT_PHASE_PS_STR_8                         ("0 ps"),
		.PLL_C_CNT_DUTY_CYCLE_8                           (50),
		.PLL_C_CNT_OUT_EN_0                               ("true"),
		.PLL_C_CNT_OUT_EN_1                               ("true"),
		.PLL_C_CNT_OUT_EN_2                               ("false"),
		.PLL_C_CNT_OUT_EN_3                               ("false"),
		.PLL_C_CNT_OUT_EN_4                               ("false"),
		.PLL_C_CNT_OUT_EN_5                               ("false"),
		.PLL_C_CNT_OUT_EN_6                               ("false"),
		.PLL_C_CNT_OUT_EN_7                               ("false"),
		.PLL_C_CNT_OUT_EN_8                               ("false"),
		.PLL_FBCLK_MUX_1                                  ("pll_fbclk_mux_1_glb"),
		.PLL_FBCLK_MUX_2                                  ("pll_fbclk_mux_2_m_cnt"),
		.PLL_M_CNT_IN_SRC                                 ("c_m_cnt_in_src_ph_mux_clk"),
		.PLL_BW_SEL                                       ("high"),
		.HBMC_CH0_HBM_DEVICE                              ("hbm_device_8gb_8hi"),
		.HBMC_CH0_HBM_TRRDL                               (3),
		.HBMC_CH0_HBM_TRCDRD                              (9),
		.HBMC_CH0_HBM_TRCDWR                              (6),
		.HBMC_CH0_HBM_TRTPL_BL4                           (5),
		.HBMC_CH0_HBM_TRTPS_BL4                           (4),
		.HBMC_CH0_HBM_TRP                                 (9),
		.HBMC_CH0_HBM_TCCDS_BL4                           (2),
		.HBMC_CH0_HBM_TCCDR                               (3),
		.HBMC_CH0_HBM_TWR                                 (10),
		.HBMC_CH0_HBM_TWTRL                               (6),
		.HBMC_CH0_HBM_TWTRS                               (3),
		.HBMC_CH0_HBM_TDQSS_MAX_PS                        (200),
		.HBMC_CH0_HBM_TDQSS_MIN_PS                        (200),
		.HBMC_CH0_HBM_TDQSCK_MAX_PS                       (3500),
		.HBMC_CH0_HBM_TDQSQ_MAX_PS                        (105),
		.HBMC_CH0_HBM_PARAM_TYPE                          ("hbm_param_min"),
		.HBMC_CH0_RFSH_POLICY                             ("rfsh_policy_flexible"),
		.HBMC_CH0_HBM_TREFI                               (2340),
		.HBMC_CH0_HBM_TCKSRE                              (6),
		.HBMC_CH0_HBM_TCKSRX                              (6),
		.HBMC_CH0_HBM_TXS                                 (162),
		.HBMC_CH0_HBM_TCKESR                              (6),
		.HBMC_CH0_HBM_TXP                                 (5),
		.HBMC_CH0_HBM_TPD                                 (5),
		.HBMC_CH0_CFG_HBMC_MODES                          ("prod"),
		.HBMC_CH0_CORE_CLOCK_MHZ                          (300),
		.HBMC_CH0_CORE_CLOCK_PS                           (1000),
		.HBMC_CH0_CFG_CHANNEL_EN                          ("enable"),
		.HBMC_CH0_CFG_TR_ORDER                            ("enable"),
		.HBMC_CH0_CFG_ADDR_ORDER                          ("bgrbc"),
		.HBMC_CH0_CFG_USER_RD_AP_POL                      ("rdap_hint"),
		.HBMC_CH0_CFG_USER_WR_AP_POL                      ("wrap_hint"),
		.HBMC_CH0_CFG_RID_DEPENDENCY_EN                   ("enable"),
		.HBMC_CH0_CFG_HBMC_TX_BYPASS                      ("disable"),
		.HBMC_CH0_CFG_HBMC_RX_BYPASS                      ("disable"),
		.HBMC_CH0_CFG_P2HPEMUEN                           (0),
		.HBMC_CH0_CFG_RMPTREN                             ("disable"),
		.HBMC_CH0_CFG_RMPTRENDLY00                        (1),
		.HBMC_CH0_CFG_RMPTRENDLY01                        (2),
		.HBMC_CH0_CFG_RMPTRENDLY02                        (3),
		.HBMC_CH0_CFG_RMPTRENDLY03                        (4),
		.HBMC_CH0_CFG_RMPTRENDLY04                        (5),
		.HBMC_CH0_HBM_TRAS                                (20),
		.HBMC_CH0_HBM_TRRDS                               (3),
		.HBMC_CH0_HBMC_OFFSET                             (1),
		.HBMC_CH0_HBMC_RATE_VALUE                         ("rate_half"),
		.HBMC_CH0_HBM_CLOCK_MHZ                           (600),
		.HBMC_CH0_HBM_CLOCK_PS                            (1666),
		.HBMC_CH0_RFSH_MODE                               ("rfsh_mode_ctrl_rfsh_all"),
		.HBMC_CH0_HBM_TRFC                                (210),
		.HBMC_CH0_DATA_WIDTH_MODE                         ("data_width_mode_sdw"),
		.HBMC_CH0_EXT_RDIE                                (2),
		.HBMC_CH0_TEMP000_THROTTLE_RATIO                  (0),
		.HBMC_CH0_TEMP001_THROTTLE_RATIO                  (0),
		.HBMC_CH0_TEMP010_THROTTLE_RATIO                  (0),
		.HBMC_CH0_TEMP011_THROTTLE_RATIO                  (0),
		.HBMC_CH0_TEMP100_THROTTLE_RATIO                  (0),
		.HBMC_CH0_TEMP101_THROTTLE_RATIO                  (0),
		.HBMC_CH0_TEMP110_THROTTLE_RATIO                  (0),
		.HBMC_CH0_TEMP111_THROTTLE_RATIO                  (0),
		.HBMC_CH0_CORE_CLK_MODE                           ("hr_asyn"),
		.HBMC_CH0_CFG_HBMC_BL                             (4),
		.HBMC_CH0_USER_STRB_EN                            ("enable"),
		.HBMC_CH0_CFG_TBHMCRSTMIN                         (0),
		.HBMC_CH0_CFG_RESET_COUNT                         (0),
		.HBMC_CH0_CFG_HBMC_PC0_WL                         (6),
		.HBMC_CH0_CFG_HBMC_PC0_RL                         (15),
		.HBMC_CH0_CFG_HBMC_PC1_WL                         (6),
		.HBMC_CH0_CFG_HBMC_PC1_RL                         (15),
		.HBMC_CH0_CFG_POSTCAL_STATE                       ("sr"),
		.HBMC_CH0_CFG_UFIC2PDLY                           (0),
		.HBMC_CH0_CFG_UFIP2CDLY                           (0),
		.HBMC_CH0_CFG_CB_RMW_RD_IDLE_WAIT_EN              ("disable"),
		.HBMC_CH0_CFG_CB_RMW_FIFO_EMPTY_WAIT_EN           ("disable"),
		.HBMC_CH0_CFG_SB_POST_UPDATE_CYCLE                (1),
		.HBMC_CH0_CFG_HBMC_PC0_SCR_SEEDSEL                (0),
		.HBMC_CH0_CFG_HBMC_PC0_SCR_EN                     ("enable"),
		.HBMC_CH0_CFG_HBMC_RFSH_PB_BURST_GAP              (1),
		.HBMC_CH0_CFG_HBMC_PC1_SCR_SEEDSEL                (0),
		.HBMC_CH0_CFG_HBMC_PC1_SCR_EN                     ("enable"),
		.HBMC_CH0_CFG_FLIP_MODE                           ("disable"),
		.HBMC_CH0_CFG_DENSITY                             (3),
		.HBMC_CH0_CFG_USER_DATA_WIDTH                     ("b256"),
		.HBMC_CH0_CFG_CB_BREADY_BYPASS_EN                 ("disable"),
		.HBMC_CH0_CFG_CB_RREADY_BYPASS_EN                 ("disable"),
		.HBMC_CH0_CFG_CB_RVALID_GATE_EN                   ("enable"),
		.HBMC_CH0_CFG_CB_BVALID_GATE_EN                   ("enable"),
		.HBMC_CH0_CFG_ADDRCHNLMUXEN                       ("disable"),
		.HBMC_CH0_CFG_AXI_CMD_DEMUX_EN                    ("disable"),
		.HBMC_CH0_CFG_PC0_MAJOR_MODE_UPDATE_CNT           ("disable"),
		.HBMC_CH0_CFG_PC1_MAJOR_MODE_UPDATE_CNT           ("disable"),
		.HBMC_CH0_CFG_RCQ_AGE_LIMIT                       (32),
		.HBMC_CH0_CFG_RDB_RSVD_ENTRY                      (0),
		.HBMC_CH0_CFG_RD_STRB_IDLE_THRESHOLD              (50),
		.HBMC_CH0_CFG_PC0_CMD2RDEN                        (12),
		.HBMC_CH0_CFG_PC1_CMD2RDEN                        (13),
		.HBMC_CH0_CFG_PC0_CMD2RDIE                        (10),
		.HBMC_CH0_CFG_PC1_CMD2RDIE                        (11),
		.HBMC_CH0_CFG_PC0_DATAOE_ON                       (2),
		.HBMC_CH0_CFG_PC1_DATAOE_ON                       (2),
		.HBMC_CH0_CFG_PC0_CMD2DATA                        (3),
		.HBMC_CH0_CFG_PC1_CMD2DATA                        (4),
		.HBMC_CH0_CFG_WDB_RSVD_ENTRY                      (32),
		.HBMC_CH0_CFG_AWDB_RSVD_ENTRY                     (32),
		.HBMC_CH0_CFG_WCQ_BURST_THRESHOLD                 (64),
		.HBMC_CH0_CFG_WCQ_LWM                             (8),
		.HBMC_CH0_CFG_WCQ_TIMEOUT_THRESHOLD               (64),
		.HBMC_CH0_CFG_PC0_MAJOR_MODE_UPDATE_CFG           ("disable"),
		.HBMC_CH0_CFG_PC1_MAJOR_MODE_UPDATE_CFG           ("disable"),
		.HBMC_CH0_CFG_PC0_CMD2WDQS                        (2),
		.HBMC_CH0_CFG_PC1_CMD2WDQS                        (3),
		.HBMC_CH0_CFG_PC0_CMD2DATAOE                      (3),
		.HBMC_CH0_CFG_PC1_CMD2DATAOE                      (4),
		.HBMC_CH0_CFG_CB_MAJOR_MODE_EN                    ("enable"),
		.HBMC_CH0_CFG_CB_STRICT_MAJOR_MODE_EN             ("enable"),
		.HBMC_CH0_CFG_RFSH_ALL_EN                         ("enable"),
		.HBMC_CH0_CFG_RFSH_PB_EN                          ("disable"),
		.HBMC_CH0_CFG_USER_RFSH_PB_EN                     ("enable"),
		.HBMC_CH0_CFG_RFSH_AB_TO_PB_EN                    ("enable"),
		.HBMC_CH0_CFG_CB_TEMP_RFSH_FILTER_EN              ("disable"),
		.HBMC_CH0_CFG_RFSH_POST_LOWER_LIMIT               (1),
		.HBMC_CH0_CFG_RFSH_PRE_UPPER_LIMIT                (1),
		.HBMC_CH0_CFG_RFSH_IDLE_THRESHOLD                 (20),
		.HBMC_CH0_CFG_TEMP000_NO_OF_RFSH_BEFORE_SELF_RFSH (1),
		.HBMC_CH0_CFG_TEMP001_NO_OF_RFSH_BEFORE_SELF_RFSH (1),
		.HBMC_CH0_CFG_TEMP011_NO_OF_RFSH_BEFORE_SELF_RFSH (1),
		.HBMC_CH0_CFG_TEMP010_NO_OF_RFSH_BEFORE_SELF_RFSH (2),
		.HBMC_CH0_CFG_TEMP110_NO_OF_RFSH_BEFORE_SELF_RFSH (4),
		.HBMC_CH0_CFG_TEMP111_NO_OF_RFSH_BEFORE_SELF_RFSH (1),
		.HBMC_CH0_CFG_TEMP101_NO_OF_RFSH_BEFORE_SELF_RFSH (1),
		.HBMC_CH0_CFG_TEMP100_NO_OF_RFSH_BEFORE_SELF_RFSH (1),
		.HBMC_CH0_CFG_TEMP_FILTER_EN                      ("enable"),
		.HBMC_CH0_CFG_CATTRIP_FILTER_EN                   ("enable"),
		.HBMC_CH0_CFG_CB_BYPASS_CATTRIP                   ("disable"),
		.HBMC_CH0_CFG_CB_TEMP_SELECT                      ("disable"),
		.HBMC_CH0_CFG_F2C_TEMP_UPDATE                     ("disable"),
		.HBMC_CH0_CFG_F2C_TEMP                            (3),
		.HBMC_CH0_CFG_ADDR_SCR                            ("none"),
		.HBMC_CH0_CFG_ADDR_SPRD                           ("disable"),
		.HBMC_CH0_CFG_CB_RD_COL_ARB_PRIORITY_EN           ("enable"),
		.HBMC_CH0_CFG_CB_WR_COL_ARB_PRIORITY_EN           ("enable"),
		.HBMC_CH0_CFG_CB_RD_ROW_ARB_PRIORITY_EN           ("enable"),
		.HBMC_CH0_CFG_CB_WR_ROW_ARB_PRIORITY_EN           ("enable"),
		.HBMC_CH0_CFG_CB_DEPENDENCY_MODE                  ("enable"),
		.HBMC_CH0_CFG_MECC_EN                             ("disable"),
		.HBMC_CH0_CFG_CA_PAR_EN                           ("enable"),
		.HBMC_CH0_CFG_WR_PAR_EN                           ("enable"),
		.HBMC_CH0_CFG_RD_PAR_EN                           ("enable"),
		.HBMC_CH0_CFG_WR_DM_EN                            ("disable"),
		.HBMC_CH0_CFG_RD_DM_EN                            ("disable"),
		.HBMC_CH0_CFG_POWER_DOWN_EN                       ("enable"),
		.HBMC_CH0_CFG_POWER_DOWN_CK_DIS_EN                ("disable"),
		.HBMC_CH0_CFG_AUTO_RD_POWER_DOWN_EXIT_EN          ("enable"),
		.HBMC_CH0_CFG_AUTO_WR_POWER_DOWN_EXIT_EN          ("enable"),
		.HBMC_CH0_CFG_AUTO_RD_SELF_RFSH_EXIT_EN           ("enable"),
		.HBMC_CH0_CFG_AUTO_WR_SELF_RFSH_EXIT_EN           ("enable"),
		.HBMC_CH0_CFG_SELF_RFSH_CK_DIS_EN                 ("enable"),
		.HBMC_CH0_CFG_SELF_RFSH_EN                        ("enable"),
		.HBMC_CH0_H0_FR_CLK_STCFG_EN                      ("disable"),
		.HBMC_CH0_CFG_SB_PRE_STALL_CYCLE                  (3),
		.HBMC_CH0_CFG_SB_POST_STALL_CYCLE                 (1),
		.HBMC_CH0_CFG_HBMC_CORECLK_PROG_DELAY1            (8191),
		.HBMC_CH0_CFG_HBMC_CORECLK_PROG_DELAY2            (0),
		.HBMC_CH0_CFG_HBMCPTRENSYNCSEL                    ("enable"),
		.HBMC_CH0_CFG_UB48MODE                            ("enable"),
		.HBMC_CH0_CFG_HBMCH2CPTRSTART                     (6),
		.HBMC_CH0_CFG_DWORD_LPBKEN                        ("disable"),
		.HBMC_CH0_CFG_AWORD_LPBEN                         ("disable"),
		.HBMC_CH0_CFG_DWORD_LPBKSEL                       ("disable"),
		.HBMC_CH0_CFG_AWORD_LPBKSEL                       (0),
		.HBMC_CH0_CFG_OBSGRPSEL                           (0),
		.HBMC_CH0_CFG_OBSSIGSEL                           (0),
		.HBMC_CH0_CFG_MEM_MCE                             ("disable"),
		.HBMC_CH0_CFG_MEM_WA                              (6),
		.HBMC_CH0_CFG_MEM_RMCE                            (1),
		.HBMC_CH0_CFG_MEM_WMCE                            (1),
		.HBMC_CH0_CFG_MEM_WPULSE                          (2),
		.HBMC_CH0_CFG_SRAM_ECC_ENABLE                     ("enable"),
		.HBMC_CH0_CFG_PC0_SRAM_INJD                       ("disable"),
		.HBMC_CH0_CFG_PC0_SRAM_INJS                       ("disable"),
		.HBMC_CH0_CFG_PC1_SRAM_INJD                       ("disable"),
		.HBMC_CH0_CFG_PC1_SRAM_INJS                       ("disable"),
		.HBMC_CH0_CFG_SRAM_SERRINTEN                      ("enable"),
		.HBMC_CH0_CFG_SRAM_SLVERR_DIS                     ("disable"),
		.HBMC_CH0_MMR_USER_TRIGGER                        ("disable"),
		.HBMC_CH0_MMR_USER_RDWR                           ("disable"),
		.HBMC_CH0_MMR_USER_BYTEENABLE                     (0),
		.HBMC_CH0_MMR_USER_ADDR                           (0),
		.HBMC_CH0_MMR_USER_WRDATA                         (0),
		.HBMC_CH0_MMR_SBOWN_REQ                           ("disable"),
		.HBMC_CH0_MMR_SBOWN_DELAY                         (100),
		.HBMC_CH0_CFG_SKETCH1                             (2),
		.HBMC_CH0_CFG_SKETCH2                             (0),
		.HBMC_CH0_CFG_TST_PATTERN                         (0),
		.HBMC_CH0_CFG_TST_START_ADDR                      (0),
		.HBMC_CH0_CFG_TST_BURST_LEN                       (0),
		.HBMC_CH0_CFG_TST_GEN_CMD                         (0),
		.HBMC_CH0_CFG_AXI_TRAFFIC_SEL                     ("disable"),
		.HBMC_CH0_CFG_TST_PC_SEL                          ("disable"),
		.HBMC_CH0_CFG_TST_TRIGGER                         ("disable"),
		.HBMC_CH0_CFG_TST_TIME_OUT                        (0),
		.HBMC_CH0_HBMC_RATE                               (2),
		.HBMC_CH0_HBM_TRFCSB                              (96),
		.HBMC_CH0_HBM_TRREFD                              (5),
		.HBMC_CH0_UFI_TRDEN                               (20),
		.HBMC_CH0_CFG_HBMC_PC0_WTP                        (8),
		.HBMC_CH0_CFG_HBMC_PC1_WTP                        (8),
		.HBMC_CH0_CFG_HBMC_PC0_ITP                        (14),
		.HBMC_CH0_CFG_HBMC_PC1_ITP                        (14),
		.HBMC_CH0_CFG_HBMC_PC0_RTP                        (2),
		.HBMC_CH0_CFG_HBMC_PC1_RTP                        (2),
		.HBMC_CH0_CFG_PAR_LAT                             (1),
		.HBMC_CH0_CFG_HBMC_PC0_FIW_SHORT                  (3),
		.HBMC_CH0_CFG_HBMC_PC0_ATI                        (9),
		.HBMC_CH0_CFG_HBMC_PC0_ITI                        (14),
		.HBMC_CH0_CFG_HBMC_PC0_ATA                        (14),
		.HBMC_CH0_CFG_HBMC_PC0_ITA                        (18),
		.HBMC_CH0_CFG_HBMC_PC0_ITA_DLY                    (4),
		.HBMC_CH0_CFG_HBMC_PC0_ATP                        (10),
		.HBMC_CH0_CFG_HBMC_PC0_ATR                        (5),
		.HBMC_CH0_CFG_HBMC_PC0_ITR                        (9),
		.HBMC_CH0_CFG_HBMC_PC0_ATW                        (5),
		.HBMC_CH0_CFG_HBMC_PC0_ITW                        (7),
		.HBMC_CH0_CFG_HBMC_PC0_PTA                        (3),
		.HBMC_CH0_CFG_HBMC_PC0_WTI                        (8),
		.HBMC_CH0_CFG_HBMC_PC0_RTA                        (6),
		.HBMC_CH0_CFG_HBMC_PC0_WTA                        (12),
		.HBMC_CH0_CFG_HBMC_PC0_ATA_DBG                    (1),
		.HBMC_CH0_CFG_HBMC_PC0_ATI_DBG                    (1),
		.HBMC_CH0_CFG_HBMC_PC0_ITA_DBG                    (5),
		.HBMC_CH0_CFG_HBMC_PC0_ITI_DBG                    (1),
		.HBMC_CH0_CFG_HBMC_PC0_RTRWTW_DBG                 (0),
		.HBMC_CH0_CFG_HBMC_PC0_WTR_DBG                    (5),
		.HBMC_CH0_CFG_HBMC_PC0_ATA_SBG                    (1),
		.HBMC_CH0_CFG_HBMC_PC0_ATI_SBG                    (1),
		.HBMC_CH0_CFG_HBMC_PC0_ITA_SBG                    (5),
		.HBMC_CH0_CFG_HBMC_PC0_ITI_SBG                    (1),
		.HBMC_CH0_CFG_HBMC_PC0_WTR_SBG                    (7),
		.HBMC_CH0_CFG_HBMC_PC0_RTR_DSID                   (1),
		.HBMC_CH0_CFG_HBMC_POWER_DOWN_TO_CK_DIS           (4),
		.HBMC_CH0_CFG_HBMC_CK_DIS_TO_POWER_DOWN           (4),
		.HBMC_CH0_CFG_HBMC_MIN_POWER_DOWN                 (4),
		.HBMC_CH0_CFG_HBMC_POWER_DOWN_TO_VALID            (4),
		.HBMC_CH0_CFG_HBMC_SELF_RFSH_TO_CK_DIS            (4),
		.HBMC_CH0_CFG_HBMC_CK_DIS_TO_SELF_RFSH            (4),
		.HBMC_CH0_CFG_HBMC_SELF_RFSH_TO_VALID             (82),
		.HBMC_CH0_CFG_HBMC_MIN_SELF_RFSH                  (4),
		.HBMC_CH0_CFG_HBMC_RFSH_AB_TO_VALID               (106),
		.HBMC_CH0_CFG_HBMC_RFSH_PB_TO_RFSH_PB             (4),
		.HBMC_CH0_CFG_HBMC_RFSH_PB_TO_VALID               (49),
		.HBMC_CH0_CFG_HBMC_TEMP000_RFSH_PERIOD            (4678),
		.HBMC_CH0_CFG_HBMC_TEMP001_RFSH_PERIOD            (2338),
		.HBMC_CH0_CFG_HBMC_TEMP011_RFSH_PERIOD            (1168),
		.HBMC_CH0_CFG_HBMC_TEMP010_RFSH_PERIOD            (583),
		.HBMC_CH0_CFG_HBMC_TEMP110_RFSH_PERIOD            (290),
		.HBMC_CH0_CFG_HBMC_TEMP111_RFSH_PERIOD            (1168),
		.HBMC_CH0_CFG_HBMC_TEMP101_RFSH_PERIOD            (1168),
		.HBMC_CH0_CFG_HBMC_TEMP100_RFSH_PERIOD            (1168),
		.HBMC_CH0_CFG_HBMC_RFSH_PB_TO_RFSH_PB_OFFSET      (2),
		.HBMC_CH0_CFG_HBMC_PCH_PB_TO_VALID                (6),
		.HBMC_CH0_CFG_HBMC_PCH_AB_TO_VALID                (6),
		.HBMC_CH0_CFG_HBMC_PC1_FIW_SHORT                  (3),
		.HBMC_CH0_CFG_HBMC_PC1_ATI                        (9),
		.HBMC_CH0_CFG_HBMC_PC1_ITI                        (14),
		.HBMC_CH0_CFG_HBMC_PC1_ATA                        (14),
		.HBMC_CH0_CFG_HBMC_PC1_ITA                        (18),
		.HBMC_CH0_CFG_HBMC_PC1_ITA_DLY                    (4),
		.HBMC_CH0_CFG_HBMC_PC1_ATP                        (10),
		.HBMC_CH0_CFG_HBMC_PC1_ATR                        (5),
		.HBMC_CH0_CFG_HBMC_PC1_ITR                        (8),
		.HBMC_CH0_CFG_HBMC_PC1_ATW                        (5),
		.HBMC_CH0_CFG_HBMC_PC1_ITW                        (7),
		.HBMC_CH0_CFG_HBMC_PC1_PTA                        (3),
		.HBMC_CH0_CFG_HBMC_PC1_WTI                        (8),
		.HBMC_CH0_CFG_HBMC_PC1_RTA                        (6),
		.HBMC_CH0_CFG_HBMC_PC1_WTA                        (13),
		.HBMC_CH0_CFG_HBMC_PC1_ATA_DBG                    (1),
		.HBMC_CH0_CFG_HBMC_PC1_ATI_DBG                    (1),
		.HBMC_CH0_CFG_HBMC_PC1_ITA_DBG                    (5),
		.HBMC_CH0_CFG_HBMC_PC1_ITI_DBG                    (1),
		.HBMC_CH0_CFG_HBMC_PC1_RTRWTW_DBG                 (0),
		.HBMC_CH0_CFG_HBMC_PC1_WTR_DBG                    (5),
		.HBMC_CH0_CFG_HBMC_PC1_ATA_SBG                    (1),
		.HBMC_CH0_CFG_HBMC_PC1_ATI_SBG                    (1),
		.HBMC_CH0_CFG_HBMC_PC1_ITA_SBG                    (5),
		.HBMC_CH0_CFG_HBMC_PC1_ITI_SBG                    (1),
		.HBMC_CH0_CFG_HBMC_PC1_WTR_SBG                    (7),
		.HBMC_CH0_CFG_HBMC_PC1_RTR_DSID                   (1),
		.HBMC_CH0_CFG_PSEUDO_BL8_EN                       ("enable"),
		.HBMC_CH0_CFG_CB_WREADY_GATE_EN                   ("disable"),
		.HBMC_CH0_CFG_PC0_RDEN_ON                         (5),
		.HBMC_CH0_CFG_PC1_RDEN_ON                         (5),
		.HBMC_CH0_CFG_PC0_RDIE_ON                         (9),
		.HBMC_CH0_CFG_PC1_RDIE_ON                         (9),
		.HBMC_CH0_CFG_PC0_CMD2RD                          (27),
		.HBMC_CH0_CFG_PC1_CMD2RD                          (28),
		.HBMC_CH0_CFG_PC0_CMD2RDPAR                       (28),
		.HBMC_CH0_CFG_PC1_CMD2RDPAR                       (29),
		.HBMC_CH0_CFG_PC0_WDQS_ON                         (4),
		.HBMC_CH0_CFG_PC1_WDQS_ON                         (4),
		.HBMC_CH0_CFG_WCQ_HWM                             (24),
		.HBMC_CH0_CFG_RFSH_POST_UPPER_LIMIT               (1),
		.HBMC_CH0_CFG_THROTTLE_EN                         ("disable"),
		.HBMC_CH0_CFG_TEMP000_ON_TIME                     (0),
		.HBMC_CH0_CFG_TEMP001_ON_TIME                     (0),
		.HBMC_CH0_CFG_TEMP010_ON_TIME                     (0),
		.HBMC_CH0_CFG_TEMP011_ON_TIME                     (0),
		.HBMC_CH0_CFG_TEMP100_ON_TIME                     (0),
		.HBMC_CH0_CFG_TEMP101_ON_TIME                     (0),
		.HBMC_CH0_CFG_TEMP110_ON_TIME                     (0),
		.HBMC_CH0_CFG_TEMP111_ON_TIME                     (0),
		.HBMC_CH0_CFG_TEMP000_OFF_TIME                    (255),
		.HBMC_CH0_CFG_TEMP001_OFF_TIME                    (255),
		.HBMC_CH0_CFG_TEMP010_OFF_TIME                    (255),
		.HBMC_CH0_CFG_TEMP011_OFF_TIME                    (255),
		.HBMC_CH0_CFG_TEMP100_OFF_TIME                    (255),
		.HBMC_CH0_CFG_TEMP101_OFF_TIME                    (255),
		.HBMC_CH0_CFG_TEMP110_OFF_TIME                    (255),
		.HBMC_CH0_CFG_TEMP111_OFF_TIME                    (255),
		.HBMC_CH0_CFG_RMW_EN                              ("enable"),
		.HBMC_CH0_CFG_POWER_DOWN_IDLE_THRESHOLD           (1),
		.HBMC_CH0_CFG_SB_PRE_UPDATE_CYCLE                 (8),
		.HBMC_CH0_CFG_HBMCC2HPTRDLY                       (0),
		.HBMC_CH0_HBM_TCCDL_BL4                           (4),
		.HBMC_CH0_HBM_TRTW                                (12),
		.HBMC_CH0_HBM_TFAW                                (12),
		.HBMC_CH0_HBM_TEAW                                (24),
		.HBMC_CH0_CFG_HBMC_PC0_FAW                        (3),
		.HBMC_CH0_CFG_HBMC_PC0_RTI                        (4),
		.HBMC_CH0_CFG_HBMC_PC0_RTW                        (10),
		.HBMC_CH0_CFG_HBMC_PC0_RTRWTW_SBG                 (1),
		.HBMC_CH0_CFG_HBMC_PC1_FAW                        (3),
		.HBMC_CH0_CFG_HBMC_PC1_RTI                        (5),
		.HBMC_CH0_CFG_HBMC_PC1_RTW                        (10),
		.HBMC_CH0_CFG_HBMC_PC1_RTRWTW_SBG                 (1),
		.HBMC_CH0_CFG_AWFIFO_RSVD_ENTRY                   (24),
		.HBMC_CH0_CFG_ARFIFO_RSVD_ENTRY                   (24),
		.HBMC_CH1_HBM_DEVICE                              ("hbm_device_8gb_8hi"),
		.HBMC_CH1_HBM_TRRDL                               (3),
		.HBMC_CH1_HBM_TRCDRD                              (9),
		.HBMC_CH1_HBM_TRCDWR                              (6),
		.HBMC_CH1_HBM_TRTPL_BL4                           (5),
		.HBMC_CH1_HBM_TRTPS_BL4                           (4),
		.HBMC_CH1_HBM_TRP                                 (9),
		.HBMC_CH1_HBM_TCCDS_BL4                           (2),
		.HBMC_CH1_HBM_TCCDR                               (3),
		.HBMC_CH1_HBM_TWR                                 (10),
		.HBMC_CH1_HBM_TWTRL                               (6),
		.HBMC_CH1_HBM_TWTRS                               (3),
		.HBMC_CH1_HBM_TDQSS_MAX_PS                        (200),
		.HBMC_CH1_HBM_TDQSS_MIN_PS                        (200),
		.HBMC_CH1_HBM_TDQSCK_MAX_PS                       (3500),
		.HBMC_CH1_HBM_TDQSQ_MAX_PS                        (105),
		.HBMC_CH1_HBM_PARAM_TYPE                          ("hbm_param_min"),
		.HBMC_CH1_RFSH_POLICY                             ("rfsh_policy_flexible"),
		.HBMC_CH1_HBM_TREFI                               (2340),
		.HBMC_CH1_HBM_TCKSRE                              (6),
		.HBMC_CH1_HBM_TCKSRX                              (6),
		.HBMC_CH1_HBM_TXS                                 (162),
		.HBMC_CH1_HBM_TCKESR                              (6),
		.HBMC_CH1_HBM_TXP                                 (5),
		.HBMC_CH1_HBM_TPD                                 (5),
		.HBMC_CH1_CFG_HBMC_MODES                          ("prod"),
		.HBMC_CH1_CORE_CLOCK_MHZ                          (300),
		.HBMC_CH1_CORE_CLOCK_PS                           (1000),
		.HBMC_CH1_CFG_CHANNEL_EN                          ("enable"),
		.HBMC_CH1_CFG_TR_ORDER                            ("enable"),
		.HBMC_CH1_CFG_ADDR_ORDER                          ("bgrbc"),
		.HBMC_CH1_CFG_USER_RD_AP_POL                      ("rdap_hint"),
		.HBMC_CH1_CFG_USER_WR_AP_POL                      ("wrap_hint"),
		.HBMC_CH1_CFG_RID_DEPENDENCY_EN                   ("enable"),
		.HBMC_CH1_CFG_HBMC_TX_BYPASS                      ("disable"),
		.HBMC_CH1_CFG_HBMC_RX_BYPASS                      ("disable"),
		.HBMC_CH1_CFG_P2HPEMUEN                           (0),
		.HBMC_CH1_CFG_RMPTREN                             ("disable"),
		.HBMC_CH1_CFG_RMPTRENDLY00                        (1),
		.HBMC_CH1_CFG_RMPTRENDLY01                        (2),
		.HBMC_CH1_CFG_RMPTRENDLY02                        (3),
		.HBMC_CH1_CFG_RMPTRENDLY03                        (4),
		.HBMC_CH1_CFG_RMPTRENDLY04                        (5),
		.HBMC_CH1_HBM_TRAS                                (20),
		.HBMC_CH1_HBM_TRRDS                               (3),
		.HBMC_CH1_HBMC_OFFSET                             (1),
		.HBMC_CH1_HBMC_RATE_VALUE                         ("rate_half"),
		.HBMC_CH1_HBM_CLOCK_MHZ                           (600),
		.HBMC_CH1_HBM_CLOCK_PS                            (1666),
		.HBMC_CH1_RFSH_MODE                               ("rfsh_mode_ctrl_rfsh_all"),
		.HBMC_CH1_HBM_TRFC                                (210),
		.HBMC_CH1_DATA_WIDTH_MODE                         ("data_width_mode_sdw"),
		.HBMC_CH1_EXT_RDIE                                (2),
		.HBMC_CH1_TEMP000_THROTTLE_RATIO                  (0),
		.HBMC_CH1_TEMP001_THROTTLE_RATIO                  (0),
		.HBMC_CH1_TEMP010_THROTTLE_RATIO                  (0),
		.HBMC_CH1_TEMP011_THROTTLE_RATIO                  (0),
		.HBMC_CH1_TEMP100_THROTTLE_RATIO                  (0),
		.HBMC_CH1_TEMP101_THROTTLE_RATIO                  (0),
		.HBMC_CH1_TEMP110_THROTTLE_RATIO                  (0),
		.HBMC_CH1_TEMP111_THROTTLE_RATIO                  (0),
		.HBMC_CH1_CORE_CLK_MODE                           ("hr_asyn"),
		.HBMC_CH1_CFG_HBMC_BL                             (4),
		.HBMC_CH1_USER_STRB_EN                            ("enable"),
		.HBMC_CH1_CFG_TBHMCRSTMIN                         (0),
		.HBMC_CH1_CFG_RESET_COUNT                         (0),
		.HBMC_CH1_CFG_HBMC_PC0_WL                         (6),
		.HBMC_CH1_CFG_HBMC_PC0_RL                         (15),
		.HBMC_CH1_CFG_HBMC_PC1_WL                         (6),
		.HBMC_CH1_CFG_HBMC_PC1_RL                         (15),
		.HBMC_CH1_CFG_POSTCAL_STATE                       ("sr"),
		.HBMC_CH1_CFG_UFIC2PDLY                           (0),
		.HBMC_CH1_CFG_UFIP2CDLY                           (0),
		.HBMC_CH1_CFG_CB_RMW_RD_IDLE_WAIT_EN              ("disable"),
		.HBMC_CH1_CFG_CB_RMW_FIFO_EMPTY_WAIT_EN           ("disable"),
		.HBMC_CH1_CFG_SB_POST_UPDATE_CYCLE                (1),
		.HBMC_CH1_CFG_HBMC_PC0_SCR_SEEDSEL                (0),
		.HBMC_CH1_CFG_HBMC_PC0_SCR_EN                     ("enable"),
		.HBMC_CH1_CFG_HBMC_RFSH_PB_BURST_GAP              (1),
		.HBMC_CH1_CFG_HBMC_PC1_SCR_SEEDSEL                (0),
		.HBMC_CH1_CFG_HBMC_PC1_SCR_EN                     ("enable"),
		.HBMC_CH1_CFG_FLIP_MODE                           ("disable"),
		.HBMC_CH1_CFG_DENSITY                             (3),
		.HBMC_CH1_CFG_USER_DATA_WIDTH                     ("b256"),
		.HBMC_CH1_CFG_CB_BREADY_BYPASS_EN                 ("disable"),
		.HBMC_CH1_CFG_CB_RREADY_BYPASS_EN                 ("disable"),
		.HBMC_CH1_CFG_CB_RVALID_GATE_EN                   ("enable"),
		.HBMC_CH1_CFG_CB_BVALID_GATE_EN                   ("enable"),
		.HBMC_CH1_CFG_ADDRCHNLMUXEN                       ("disable"),
		.HBMC_CH1_CFG_AXI_CMD_DEMUX_EN                    ("disable"),
		.HBMC_CH1_CFG_PC0_MAJOR_MODE_UPDATE_CNT           ("disable"),
		.HBMC_CH1_CFG_PC1_MAJOR_MODE_UPDATE_CNT           ("disable"),
		.HBMC_CH1_CFG_RCQ_AGE_LIMIT                       (32),
		.HBMC_CH1_CFG_RDB_RSVD_ENTRY                      (0),
		.HBMC_CH1_CFG_RD_STRB_IDLE_THRESHOLD              (50),
		.HBMC_CH1_CFG_PC0_CMD2RDEN                        (12),
		.HBMC_CH1_CFG_PC1_CMD2RDEN                        (13),
		.HBMC_CH1_CFG_PC0_CMD2RDIE                        (10),
		.HBMC_CH1_CFG_PC1_CMD2RDIE                        (11),
		.HBMC_CH1_CFG_PC0_DATAOE_ON                       (2),
		.HBMC_CH1_CFG_PC1_DATAOE_ON                       (2),
		.HBMC_CH1_CFG_PC0_CMD2DATA                        (3),
		.HBMC_CH1_CFG_PC1_CMD2DATA                        (4),
		.HBMC_CH1_CFG_WDB_RSVD_ENTRY                      (32),
		.HBMC_CH1_CFG_AWDB_RSVD_ENTRY                     (32),
		.HBMC_CH1_CFG_WCQ_BURST_THRESHOLD                 (64),
		.HBMC_CH1_CFG_WCQ_LWM                             (8),
		.HBMC_CH1_CFG_WCQ_TIMEOUT_THRESHOLD               (64),
		.HBMC_CH1_CFG_PC0_MAJOR_MODE_UPDATE_CFG           ("disable"),
		.HBMC_CH1_CFG_PC1_MAJOR_MODE_UPDATE_CFG           ("disable"),
		.HBMC_CH1_CFG_PC0_CMD2WDQS                        (2),
		.HBMC_CH1_CFG_PC1_CMD2WDQS                        (3),
		.HBMC_CH1_CFG_PC0_CMD2DATAOE                      (3),
		.HBMC_CH1_CFG_PC1_CMD2DATAOE                      (4),
		.HBMC_CH1_CFG_CB_MAJOR_MODE_EN                    ("enable"),
		.HBMC_CH1_CFG_CB_STRICT_MAJOR_MODE_EN             ("enable"),
		.HBMC_CH1_CFG_RFSH_ALL_EN                         ("enable"),
		.HBMC_CH1_CFG_RFSH_PB_EN                          ("disable"),
		.HBMC_CH1_CFG_USER_RFSH_PB_EN                     ("enable"),
		.HBMC_CH1_CFG_RFSH_AB_TO_PB_EN                    ("enable"),
		.HBMC_CH1_CFG_CB_TEMP_RFSH_FILTER_EN              ("disable"),
		.HBMC_CH1_CFG_RFSH_POST_LOWER_LIMIT               (1),
		.HBMC_CH1_CFG_RFSH_PRE_UPPER_LIMIT                (1),
		.HBMC_CH1_CFG_RFSH_IDLE_THRESHOLD                 (20),
		.HBMC_CH1_CFG_TEMP000_NO_OF_RFSH_BEFORE_SELF_RFSH (1),
		.HBMC_CH1_CFG_TEMP001_NO_OF_RFSH_BEFORE_SELF_RFSH (1),
		.HBMC_CH1_CFG_TEMP011_NO_OF_RFSH_BEFORE_SELF_RFSH (1),
		.HBMC_CH1_CFG_TEMP010_NO_OF_RFSH_BEFORE_SELF_RFSH (2),
		.HBMC_CH1_CFG_TEMP110_NO_OF_RFSH_BEFORE_SELF_RFSH (4),
		.HBMC_CH1_CFG_TEMP111_NO_OF_RFSH_BEFORE_SELF_RFSH (1),
		.HBMC_CH1_CFG_TEMP101_NO_OF_RFSH_BEFORE_SELF_RFSH (1),
		.HBMC_CH1_CFG_TEMP100_NO_OF_RFSH_BEFORE_SELF_RFSH (1),
		.HBMC_CH1_CFG_TEMP_FILTER_EN                      ("enable"),
		.HBMC_CH1_CFG_CATTRIP_FILTER_EN                   ("enable"),
		.HBMC_CH1_CFG_CB_BYPASS_CATTRIP                   ("disable"),
		.HBMC_CH1_CFG_CB_TEMP_SELECT                      ("disable"),
		.HBMC_CH1_CFG_F2C_TEMP_UPDATE                     ("disable"),
		.HBMC_CH1_CFG_F2C_TEMP                            (3),
		.HBMC_CH1_CFG_ADDR_SCR                            ("none"),
		.HBMC_CH1_CFG_ADDR_SPRD                           ("disable"),
		.HBMC_CH1_CFG_CB_RD_COL_ARB_PRIORITY_EN           ("enable"),
		.HBMC_CH1_CFG_CB_WR_COL_ARB_PRIORITY_EN           ("enable"),
		.HBMC_CH1_CFG_CB_RD_ROW_ARB_PRIORITY_EN           ("enable"),
		.HBMC_CH1_CFG_CB_WR_ROW_ARB_PRIORITY_EN           ("enable"),
		.HBMC_CH1_CFG_CB_DEPENDENCY_MODE                  ("enable"),
		.HBMC_CH1_CFG_MECC_EN                             ("disable"),
		.HBMC_CH1_CFG_CA_PAR_EN                           ("enable"),
		.HBMC_CH1_CFG_WR_PAR_EN                           ("enable"),
		.HBMC_CH1_CFG_RD_PAR_EN                           ("enable"),
		.HBMC_CH1_CFG_WR_DM_EN                            ("disable"),
		.HBMC_CH1_CFG_RD_DM_EN                            ("disable"),
		.HBMC_CH1_CFG_POWER_DOWN_EN                       ("enable"),
		.HBMC_CH1_CFG_POWER_DOWN_CK_DIS_EN                ("disable"),
		.HBMC_CH1_CFG_AUTO_RD_POWER_DOWN_EXIT_EN          ("enable"),
		.HBMC_CH1_CFG_AUTO_WR_POWER_DOWN_EXIT_EN          ("enable"),
		.HBMC_CH1_CFG_AUTO_RD_SELF_RFSH_EXIT_EN           ("enable"),
		.HBMC_CH1_CFG_AUTO_WR_SELF_RFSH_EXIT_EN           ("enable"),
		.HBMC_CH1_CFG_SELF_RFSH_CK_DIS_EN                 ("enable"),
		.HBMC_CH1_CFG_SELF_RFSH_EN                        ("enable"),
		.HBMC_CH1_H0_FR_CLK_STCFG_EN                      ("disable"),
		.HBMC_CH1_CFG_SB_PRE_STALL_CYCLE                  (3),
		.HBMC_CH1_CFG_SB_POST_STALL_CYCLE                 (1),
		.HBMC_CH1_CFG_HBMC_CORECLK_PROG_DELAY1            (8191),
		.HBMC_CH1_CFG_HBMC_CORECLK_PROG_DELAY2            (0),
		.HBMC_CH1_CFG_HBMCPTRENSYNCSEL                    ("enable"),
		.HBMC_CH1_CFG_UB48MODE                            ("enable"),
		.HBMC_CH1_CFG_HBMCH2CPTRSTART                     (6),
		.HBMC_CH1_CFG_DWORD_LPBKEN                        ("disable"),
		.HBMC_CH1_CFG_AWORD_LPBEN                         ("disable"),
		.HBMC_CH1_CFG_DWORD_LPBKSEL                       ("disable"),
		.HBMC_CH1_CFG_AWORD_LPBKSEL                       (0),
		.HBMC_CH1_CFG_OBSGRPSEL                           (0),
		.HBMC_CH1_CFG_OBSSIGSEL                           (0),
		.HBMC_CH1_CFG_MEM_MCE                             ("disable"),
		.HBMC_CH1_CFG_MEM_WA                              (6),
		.HBMC_CH1_CFG_MEM_RMCE                            (1),
		.HBMC_CH1_CFG_MEM_WMCE                            (1),
		.HBMC_CH1_CFG_MEM_WPULSE                          (2),
		.HBMC_CH1_CFG_SRAM_ECC_ENABLE                     ("enable"),
		.HBMC_CH1_CFG_PC0_SRAM_INJD                       ("disable"),
		.HBMC_CH1_CFG_PC0_SRAM_INJS                       ("disable"),
		.HBMC_CH1_CFG_PC1_SRAM_INJD                       ("disable"),
		.HBMC_CH1_CFG_PC1_SRAM_INJS                       ("disable"),
		.HBMC_CH1_CFG_SRAM_SERRINTEN                      ("enable"),
		.HBMC_CH1_CFG_SRAM_SLVERR_DIS                     ("disable"),
		.HBMC_CH1_MMR_USER_TRIGGER                        ("disable"),
		.HBMC_CH1_MMR_USER_RDWR                           ("disable"),
		.HBMC_CH1_MMR_USER_BYTEENABLE                     (0),
		.HBMC_CH1_MMR_USER_ADDR                           (0),
		.HBMC_CH1_MMR_USER_WRDATA                         (0),
		.HBMC_CH1_MMR_SBOWN_REQ                           ("disable"),
		.HBMC_CH1_MMR_SBOWN_DELAY                         (100),
		.HBMC_CH1_CFG_SKETCH1                             (2),
		.HBMC_CH1_CFG_SKETCH2                             (0),
		.HBMC_CH1_CFG_TST_PATTERN                         (0),
		.HBMC_CH1_CFG_TST_START_ADDR                      (0),
		.HBMC_CH1_CFG_TST_BURST_LEN                       (0),
		.HBMC_CH1_CFG_TST_GEN_CMD                         (0),
		.HBMC_CH1_CFG_AXI_TRAFFIC_SEL                     ("disable"),
		.HBMC_CH1_CFG_TST_PC_SEL                          ("disable"),
		.HBMC_CH1_CFG_TST_TRIGGER                         ("disable"),
		.HBMC_CH1_CFG_TST_TIME_OUT                        (0),
		.HBMC_CH1_HBMC_RATE                               (2),
		.HBMC_CH1_HBM_TRFCSB                              (96),
		.HBMC_CH1_HBM_TRREFD                              (5),
		.HBMC_CH1_UFI_TRDEN                               (20),
		.HBMC_CH1_CFG_HBMC_PC0_WTP                        (8),
		.HBMC_CH1_CFG_HBMC_PC1_WTP                        (8),
		.HBMC_CH1_CFG_HBMC_PC0_ITP                        (14),
		.HBMC_CH1_CFG_HBMC_PC1_ITP                        (14),
		.HBMC_CH1_CFG_HBMC_PC0_RTP                        (2),
		.HBMC_CH1_CFG_HBMC_PC1_RTP                        (2),
		.HBMC_CH1_CFG_PAR_LAT                             (1),
		.HBMC_CH1_CFG_HBMC_PC0_FIW_SHORT                  (3),
		.HBMC_CH1_CFG_HBMC_PC0_ATI                        (9),
		.HBMC_CH1_CFG_HBMC_PC0_ITI                        (14),
		.HBMC_CH1_CFG_HBMC_PC0_ATA                        (14),
		.HBMC_CH1_CFG_HBMC_PC0_ITA                        (18),
		.HBMC_CH1_CFG_HBMC_PC0_ITA_DLY                    (4),
		.HBMC_CH1_CFG_HBMC_PC0_ATP                        (10),
		.HBMC_CH1_CFG_HBMC_PC0_ATR                        (5),
		.HBMC_CH1_CFG_HBMC_PC0_ITR                        (9),
		.HBMC_CH1_CFG_HBMC_PC0_ATW                        (5),
		.HBMC_CH1_CFG_HBMC_PC0_ITW                        (7),
		.HBMC_CH1_CFG_HBMC_PC0_PTA                        (3),
		.HBMC_CH1_CFG_HBMC_PC0_WTI                        (8),
		.HBMC_CH1_CFG_HBMC_PC0_RTA                        (6),
		.HBMC_CH1_CFG_HBMC_PC0_WTA                        (12),
		.HBMC_CH1_CFG_HBMC_PC0_ATA_DBG                    (1),
		.HBMC_CH1_CFG_HBMC_PC0_ATI_DBG                    (1),
		.HBMC_CH1_CFG_HBMC_PC0_ITA_DBG                    (5),
		.HBMC_CH1_CFG_HBMC_PC0_ITI_DBG                    (1),
		.HBMC_CH1_CFG_HBMC_PC0_RTRWTW_DBG                 (0),
		.HBMC_CH1_CFG_HBMC_PC0_WTR_DBG                    (5),
		.HBMC_CH1_CFG_HBMC_PC0_ATA_SBG                    (1),
		.HBMC_CH1_CFG_HBMC_PC0_ATI_SBG                    (1),
		.HBMC_CH1_CFG_HBMC_PC0_ITA_SBG                    (5),
		.HBMC_CH1_CFG_HBMC_PC0_ITI_SBG                    (1),
		.HBMC_CH1_CFG_HBMC_PC0_WTR_SBG                    (7),
		.HBMC_CH1_CFG_HBMC_PC0_RTR_DSID                   (1),
		.HBMC_CH1_CFG_HBMC_POWER_DOWN_TO_CK_DIS           (4),
		.HBMC_CH1_CFG_HBMC_CK_DIS_TO_POWER_DOWN           (4),
		.HBMC_CH1_CFG_HBMC_MIN_POWER_DOWN                 (4),
		.HBMC_CH1_CFG_HBMC_POWER_DOWN_TO_VALID            (4),
		.HBMC_CH1_CFG_HBMC_SELF_RFSH_TO_CK_DIS            (4),
		.HBMC_CH1_CFG_HBMC_CK_DIS_TO_SELF_RFSH            (4),
		.HBMC_CH1_CFG_HBMC_SELF_RFSH_TO_VALID             (82),
		.HBMC_CH1_CFG_HBMC_MIN_SELF_RFSH                  (4),
		.HBMC_CH1_CFG_HBMC_RFSH_AB_TO_VALID               (106),
		.HBMC_CH1_CFG_HBMC_RFSH_PB_TO_RFSH_PB             (4),
		.HBMC_CH1_CFG_HBMC_RFSH_PB_TO_VALID               (49),
		.HBMC_CH1_CFG_HBMC_TEMP000_RFSH_PERIOD            (4678),
		.HBMC_CH1_CFG_HBMC_TEMP001_RFSH_PERIOD            (2338),
		.HBMC_CH1_CFG_HBMC_TEMP011_RFSH_PERIOD            (1168),
		.HBMC_CH1_CFG_HBMC_TEMP010_RFSH_PERIOD            (583),
		.HBMC_CH1_CFG_HBMC_TEMP110_RFSH_PERIOD            (290),
		.HBMC_CH1_CFG_HBMC_TEMP111_RFSH_PERIOD            (1168),
		.HBMC_CH1_CFG_HBMC_TEMP101_RFSH_PERIOD            (1168),
		.HBMC_CH1_CFG_HBMC_TEMP100_RFSH_PERIOD            (1168),
		.HBMC_CH1_CFG_HBMC_RFSH_PB_TO_RFSH_PB_OFFSET      (2),
		.HBMC_CH1_CFG_HBMC_PCH_PB_TO_VALID                (6),
		.HBMC_CH1_CFG_HBMC_PCH_AB_TO_VALID                (6),
		.HBMC_CH1_CFG_HBMC_PC1_FIW_SHORT                  (3),
		.HBMC_CH1_CFG_HBMC_PC1_ATI                        (9),
		.HBMC_CH1_CFG_HBMC_PC1_ITI                        (14),
		.HBMC_CH1_CFG_HBMC_PC1_ATA                        (14),
		.HBMC_CH1_CFG_HBMC_PC1_ITA                        (18),
		.HBMC_CH1_CFG_HBMC_PC1_ITA_DLY                    (4),
		.HBMC_CH1_CFG_HBMC_PC1_ATP                        (10),
		.HBMC_CH1_CFG_HBMC_PC1_ATR                        (5),
		.HBMC_CH1_CFG_HBMC_PC1_ITR                        (8),
		.HBMC_CH1_CFG_HBMC_PC1_ATW                        (5),
		.HBMC_CH1_CFG_HBMC_PC1_ITW                        (7),
		.HBMC_CH1_CFG_HBMC_PC1_PTA                        (3),
		.HBMC_CH1_CFG_HBMC_PC1_WTI                        (8),
		.HBMC_CH1_CFG_HBMC_PC1_RTA                        (6),
		.HBMC_CH1_CFG_HBMC_PC1_WTA                        (13),
		.HBMC_CH1_CFG_HBMC_PC1_ATA_DBG                    (1),
		.HBMC_CH1_CFG_HBMC_PC1_ATI_DBG                    (1),
		.HBMC_CH1_CFG_HBMC_PC1_ITA_DBG                    (5),
		.HBMC_CH1_CFG_HBMC_PC1_ITI_DBG                    (1),
		.HBMC_CH1_CFG_HBMC_PC1_RTRWTW_DBG                 (0),
		.HBMC_CH1_CFG_HBMC_PC1_WTR_DBG                    (5),
		.HBMC_CH1_CFG_HBMC_PC1_ATA_SBG                    (1),
		.HBMC_CH1_CFG_HBMC_PC1_ATI_SBG                    (1),
		.HBMC_CH1_CFG_HBMC_PC1_ITA_SBG                    (5),
		.HBMC_CH1_CFG_HBMC_PC1_ITI_SBG                    (1),
		.HBMC_CH1_CFG_HBMC_PC1_WTR_SBG                    (7),
		.HBMC_CH1_CFG_HBMC_PC1_RTR_DSID                   (1),
		.HBMC_CH1_CFG_PSEUDO_BL8_EN                       ("enable"),
		.HBMC_CH1_CFG_CB_WREADY_GATE_EN                   ("disable"),
		.HBMC_CH1_CFG_PC0_RDEN_ON                         (5),
		.HBMC_CH1_CFG_PC1_RDEN_ON                         (5),
		.HBMC_CH1_CFG_PC0_RDIE_ON                         (9),
		.HBMC_CH1_CFG_PC1_RDIE_ON                         (9),
		.HBMC_CH1_CFG_PC0_CMD2RD                          (27),
		.HBMC_CH1_CFG_PC1_CMD2RD                          (28),
		.HBMC_CH1_CFG_PC0_CMD2RDPAR                       (28),
		.HBMC_CH1_CFG_PC1_CMD2RDPAR                       (29),
		.HBMC_CH1_CFG_PC0_WDQS_ON                         (4),
		.HBMC_CH1_CFG_PC1_WDQS_ON                         (4),
		.HBMC_CH1_CFG_WCQ_HWM                             (24),
		.HBMC_CH1_CFG_RFSH_POST_UPPER_LIMIT               (1),
		.HBMC_CH1_CFG_THROTTLE_EN                         ("disable"),
		.HBMC_CH1_CFG_TEMP000_ON_TIME                     (0),
		.HBMC_CH1_CFG_TEMP001_ON_TIME                     (0),
		.HBMC_CH1_CFG_TEMP010_ON_TIME                     (0),
		.HBMC_CH1_CFG_TEMP011_ON_TIME                     (0),
		.HBMC_CH1_CFG_TEMP100_ON_TIME                     (0),
		.HBMC_CH1_CFG_TEMP101_ON_TIME                     (0),
		.HBMC_CH1_CFG_TEMP110_ON_TIME                     (0),
		.HBMC_CH1_CFG_TEMP111_ON_TIME                     (0),
		.HBMC_CH1_CFG_TEMP000_OFF_TIME                    (255),
		.HBMC_CH1_CFG_TEMP001_OFF_TIME                    (255),
		.HBMC_CH1_CFG_TEMP010_OFF_TIME                    (255),
		.HBMC_CH1_CFG_TEMP011_OFF_TIME                    (255),
		.HBMC_CH1_CFG_TEMP100_OFF_TIME                    (255),
		.HBMC_CH1_CFG_TEMP101_OFF_TIME                    (255),
		.HBMC_CH1_CFG_TEMP110_OFF_TIME                    (255),
		.HBMC_CH1_CFG_TEMP111_OFF_TIME                    (255),
		.HBMC_CH1_CFG_RMW_EN                              ("enable"),
		.HBMC_CH1_CFG_POWER_DOWN_IDLE_THRESHOLD           (1),
		.HBMC_CH1_CFG_SB_PRE_UPDATE_CYCLE                 (8),
		.HBMC_CH1_CFG_HBMCC2HPTRDLY                       (0),
		.HBMC_CH1_HBM_TCCDL_BL4                           (4),
		.HBMC_CH1_HBM_TRTW                                (12),
		.HBMC_CH1_HBM_TFAW                                (12),
		.HBMC_CH1_HBM_TEAW                                (24),
		.HBMC_CH1_CFG_HBMC_PC0_FAW                        (3),
		.HBMC_CH1_CFG_HBMC_PC0_RTI                        (4),
		.HBMC_CH1_CFG_HBMC_PC0_RTW                        (10),
		.HBMC_CH1_CFG_HBMC_PC0_RTRWTW_SBG                 (1),
		.HBMC_CH1_CFG_HBMC_PC1_FAW                        (3),
		.HBMC_CH1_CFG_HBMC_PC1_RTI                        (5),
		.HBMC_CH1_CFG_HBMC_PC1_RTW                        (10),
		.HBMC_CH1_CFG_HBMC_PC1_RTRWTW_SBG                 (1),
		.HBMC_CH1_CFG_AWFIFO_RSVD_ENTRY                   (24),
		.HBMC_CH1_CFG_ARFIFO_RSVD_ENTRY                   (24),
		.HBMC_CH2_HBM_DEVICE                              ("hbm_device_8gb_8hi"),
		.HBMC_CH2_HBM_TRRDL                               (3),
		.HBMC_CH2_HBM_TRCDRD                              (9),
		.HBMC_CH2_HBM_TRCDWR                              (6),
		.HBMC_CH2_HBM_TRTPL_BL4                           (5),
		.HBMC_CH2_HBM_TRTPS_BL4                           (4),
		.HBMC_CH2_HBM_TRP                                 (9),
		.HBMC_CH2_HBM_TCCDS_BL4                           (2),
		.HBMC_CH2_HBM_TCCDR                               (3),
		.HBMC_CH2_HBM_TWR                                 (10),
		.HBMC_CH2_HBM_TWTRL                               (6),
		.HBMC_CH2_HBM_TWTRS                               (3),
		.HBMC_CH2_HBM_TDQSS_MAX_PS                        (200),
		.HBMC_CH2_HBM_TDQSS_MIN_PS                        (200),
		.HBMC_CH2_HBM_TDQSCK_MAX_PS                       (3500),
		.HBMC_CH2_HBM_TDQSQ_MAX_PS                        (105),
		.HBMC_CH2_HBM_PARAM_TYPE                          ("hbm_param_min"),
		.HBMC_CH2_RFSH_POLICY                             ("rfsh_policy_flexible"),
		.HBMC_CH2_HBM_TREFI                               (2340),
		.HBMC_CH2_HBM_TCKSRE                              (6),
		.HBMC_CH2_HBM_TCKSRX                              (6),
		.HBMC_CH2_HBM_TXS                                 (162),
		.HBMC_CH2_HBM_TCKESR                              (6),
		.HBMC_CH2_HBM_TXP                                 (5),
		.HBMC_CH2_HBM_TPD                                 (5),
		.HBMC_CH2_CFG_HBMC_MODES                          ("prod"),
		.HBMC_CH2_CORE_CLOCK_MHZ                          (300),
		.HBMC_CH2_CORE_CLOCK_PS                           (1000),
		.HBMC_CH2_CFG_CHANNEL_EN                          ("enable"),
		.HBMC_CH2_CFG_TR_ORDER                            ("enable"),
		.HBMC_CH2_CFG_ADDR_ORDER                          ("bgrbc"),
		.HBMC_CH2_CFG_USER_RD_AP_POL                      ("rdap_hint"),
		.HBMC_CH2_CFG_USER_WR_AP_POL                      ("wrap_hint"),
		.HBMC_CH2_CFG_RID_DEPENDENCY_EN                   ("enable"),
		.HBMC_CH2_CFG_HBMC_TX_BYPASS                      ("disable"),
		.HBMC_CH2_CFG_HBMC_RX_BYPASS                      ("disable"),
		.HBMC_CH2_CFG_P2HPEMUEN                           (0),
		.HBMC_CH2_CFG_RMPTREN                             ("disable"),
		.HBMC_CH2_CFG_RMPTRENDLY00                        (4),
		.HBMC_CH2_CFG_RMPTRENDLY01                        (3),
		.HBMC_CH2_CFG_RMPTRENDLY02                        (2),
		.HBMC_CH2_CFG_RMPTRENDLY03                        (1),
		.HBMC_CH2_CFG_RMPTRENDLY04                        (0),
		.HBMC_CH2_HBM_TRAS                                (20),
		.HBMC_CH2_HBM_TRRDS                               (3),
		.HBMC_CH2_HBMC_OFFSET                             (1),
		.HBMC_CH2_HBMC_RATE_VALUE                         ("rate_half"),
		.HBMC_CH2_HBM_CLOCK_MHZ                           (600),
		.HBMC_CH2_HBM_CLOCK_PS                            (1666),
		.HBMC_CH2_RFSH_MODE                               ("rfsh_mode_ctrl_rfsh_all"),
		.HBMC_CH2_HBM_TRFC                                (210),
		.HBMC_CH2_DATA_WIDTH_MODE                         ("data_width_mode_sdw"),
		.HBMC_CH2_EXT_RDIE                                (2),
		.HBMC_CH2_TEMP000_THROTTLE_RATIO                  (0),
		.HBMC_CH2_TEMP001_THROTTLE_RATIO                  (0),
		.HBMC_CH2_TEMP010_THROTTLE_RATIO                  (0),
		.HBMC_CH2_TEMP011_THROTTLE_RATIO                  (0),
		.HBMC_CH2_TEMP100_THROTTLE_RATIO                  (0),
		.HBMC_CH2_TEMP101_THROTTLE_RATIO                  (0),
		.HBMC_CH2_TEMP110_THROTTLE_RATIO                  (0),
		.HBMC_CH2_TEMP111_THROTTLE_RATIO                  (0),
		.HBMC_CH2_CORE_CLK_MODE                           ("hr_asyn"),
		.HBMC_CH2_CFG_HBMC_BL                             (4),
		.HBMC_CH2_USER_STRB_EN                            ("enable"),
		.HBMC_CH2_CFG_TBHMCRSTMIN                         (0),
		.HBMC_CH2_CFG_RESET_COUNT                         (0),
		.HBMC_CH2_CFG_HBMC_PC0_WL                         (6),
		.HBMC_CH2_CFG_HBMC_PC0_RL                         (15),
		.HBMC_CH2_CFG_HBMC_PC1_WL                         (6),
		.HBMC_CH2_CFG_HBMC_PC1_RL                         (15),
		.HBMC_CH2_CFG_POSTCAL_STATE                       ("sr"),
		.HBMC_CH2_CFG_UFIC2PDLY                           (0),
		.HBMC_CH2_CFG_UFIP2CDLY                           (0),
		.HBMC_CH2_CFG_CB_RMW_RD_IDLE_WAIT_EN              ("disable"),
		.HBMC_CH2_CFG_CB_RMW_FIFO_EMPTY_WAIT_EN           ("disable"),
		.HBMC_CH2_CFG_SB_POST_UPDATE_CYCLE                (1),
		.HBMC_CH2_CFG_HBMC_PC0_SCR_SEEDSEL                (0),
		.HBMC_CH2_CFG_HBMC_PC0_SCR_EN                     ("enable"),
		.HBMC_CH2_CFG_HBMC_RFSH_PB_BURST_GAP              (1),
		.HBMC_CH2_CFG_HBMC_PC1_SCR_SEEDSEL                (0),
		.HBMC_CH2_CFG_HBMC_PC1_SCR_EN                     ("enable"),
		.HBMC_CH2_CFG_FLIP_MODE                           ("disable"),
		.HBMC_CH2_CFG_DENSITY                             (3),
		.HBMC_CH2_CFG_USER_DATA_WIDTH                     ("b256"),
		.HBMC_CH2_CFG_CB_BREADY_BYPASS_EN                 ("disable"),
		.HBMC_CH2_CFG_CB_RREADY_BYPASS_EN                 ("disable"),
		.HBMC_CH2_CFG_CB_RVALID_GATE_EN                   ("enable"),
		.HBMC_CH2_CFG_CB_BVALID_GATE_EN                   ("enable"),
		.HBMC_CH2_CFG_ADDRCHNLMUXEN                       ("disable"),
		.HBMC_CH2_CFG_AXI_CMD_DEMUX_EN                    ("disable"),
		.HBMC_CH2_CFG_PC0_MAJOR_MODE_UPDATE_CNT           ("disable"),
		.HBMC_CH2_CFG_PC1_MAJOR_MODE_UPDATE_CNT           ("disable"),
		.HBMC_CH2_CFG_RCQ_AGE_LIMIT                       (32),
		.HBMC_CH2_CFG_RDB_RSVD_ENTRY                      (0),
		.HBMC_CH2_CFG_RD_STRB_IDLE_THRESHOLD              (50),
		.HBMC_CH2_CFG_PC0_CMD2RDEN                        (12),
		.HBMC_CH2_CFG_PC1_CMD2RDEN                        (13),
		.HBMC_CH2_CFG_PC0_CMD2RDIE                        (10),
		.HBMC_CH2_CFG_PC1_CMD2RDIE                        (11),
		.HBMC_CH2_CFG_PC0_DATAOE_ON                       (2),
		.HBMC_CH2_CFG_PC1_DATAOE_ON                       (2),
		.HBMC_CH2_CFG_PC0_CMD2DATA                        (3),
		.HBMC_CH2_CFG_PC1_CMD2DATA                        (4),
		.HBMC_CH2_CFG_WDB_RSVD_ENTRY                      (32),
		.HBMC_CH2_CFG_AWDB_RSVD_ENTRY                     (32),
		.HBMC_CH2_CFG_WCQ_BURST_THRESHOLD                 (64),
		.HBMC_CH2_CFG_WCQ_LWM                             (8),
		.HBMC_CH2_CFG_WCQ_TIMEOUT_THRESHOLD               (64),
		.HBMC_CH2_CFG_PC0_MAJOR_MODE_UPDATE_CFG           ("disable"),
		.HBMC_CH2_CFG_PC1_MAJOR_MODE_UPDATE_CFG           ("disable"),
		.HBMC_CH2_CFG_PC0_CMD2WDQS                        (2),
		.HBMC_CH2_CFG_PC1_CMD2WDQS                        (3),
		.HBMC_CH2_CFG_PC0_CMD2DATAOE                      (3),
		.HBMC_CH2_CFG_PC1_CMD2DATAOE                      (4),
		.HBMC_CH2_CFG_CB_MAJOR_MODE_EN                    ("enable"),
		.HBMC_CH2_CFG_CB_STRICT_MAJOR_MODE_EN             ("enable"),
		.HBMC_CH2_CFG_RFSH_ALL_EN                         ("enable"),
		.HBMC_CH2_CFG_RFSH_PB_EN                          ("disable"),
		.HBMC_CH2_CFG_USER_RFSH_PB_EN                     ("enable"),
		.HBMC_CH2_CFG_RFSH_AB_TO_PB_EN                    ("enable"),
		.HBMC_CH2_CFG_CB_TEMP_RFSH_FILTER_EN              ("disable"),
		.HBMC_CH2_CFG_RFSH_POST_LOWER_LIMIT               (1),
		.HBMC_CH2_CFG_RFSH_PRE_UPPER_LIMIT                (1),
		.HBMC_CH2_CFG_RFSH_IDLE_THRESHOLD                 (20),
		.HBMC_CH2_CFG_TEMP000_NO_OF_RFSH_BEFORE_SELF_RFSH (1),
		.HBMC_CH2_CFG_TEMP001_NO_OF_RFSH_BEFORE_SELF_RFSH (1),
		.HBMC_CH2_CFG_TEMP011_NO_OF_RFSH_BEFORE_SELF_RFSH (1),
		.HBMC_CH2_CFG_TEMP010_NO_OF_RFSH_BEFORE_SELF_RFSH (2),
		.HBMC_CH2_CFG_TEMP110_NO_OF_RFSH_BEFORE_SELF_RFSH (4),
		.HBMC_CH2_CFG_TEMP111_NO_OF_RFSH_BEFORE_SELF_RFSH (1),
		.HBMC_CH2_CFG_TEMP101_NO_OF_RFSH_BEFORE_SELF_RFSH (1),
		.HBMC_CH2_CFG_TEMP100_NO_OF_RFSH_BEFORE_SELF_RFSH (1),
		.HBMC_CH2_CFG_TEMP_FILTER_EN                      ("enable"),
		.HBMC_CH2_CFG_CATTRIP_FILTER_EN                   ("enable"),
		.HBMC_CH2_CFG_CB_BYPASS_CATTRIP                   ("disable"),
		.HBMC_CH2_CFG_CB_TEMP_SELECT                      ("disable"),
		.HBMC_CH2_CFG_F2C_TEMP_UPDATE                     ("disable"),
		.HBMC_CH2_CFG_F2C_TEMP                            (3),
		.HBMC_CH2_CFG_ADDR_SCR                            ("none"),
		.HBMC_CH2_CFG_ADDR_SPRD                           ("disable"),
		.HBMC_CH2_CFG_CB_RD_COL_ARB_PRIORITY_EN           ("enable"),
		.HBMC_CH2_CFG_CB_WR_COL_ARB_PRIORITY_EN           ("enable"),
		.HBMC_CH2_CFG_CB_RD_ROW_ARB_PRIORITY_EN           ("enable"),
		.HBMC_CH2_CFG_CB_WR_ROW_ARB_PRIORITY_EN           ("enable"),
		.HBMC_CH2_CFG_CB_DEPENDENCY_MODE                  ("enable"),
		.HBMC_CH2_CFG_MECC_EN                             ("disable"),
		.HBMC_CH2_CFG_CA_PAR_EN                           ("enable"),
		.HBMC_CH2_CFG_WR_PAR_EN                           ("enable"),
		.HBMC_CH2_CFG_RD_PAR_EN                           ("enable"),
		.HBMC_CH2_CFG_WR_DM_EN                            ("disable"),
		.HBMC_CH2_CFG_RD_DM_EN                            ("disable"),
		.HBMC_CH2_CFG_POWER_DOWN_EN                       ("enable"),
		.HBMC_CH2_CFG_POWER_DOWN_CK_DIS_EN                ("disable"),
		.HBMC_CH2_CFG_AUTO_RD_POWER_DOWN_EXIT_EN          ("enable"),
		.HBMC_CH2_CFG_AUTO_WR_POWER_DOWN_EXIT_EN          ("enable"),
		.HBMC_CH2_CFG_AUTO_RD_SELF_RFSH_EXIT_EN           ("enable"),
		.HBMC_CH2_CFG_AUTO_WR_SELF_RFSH_EXIT_EN           ("enable"),
		.HBMC_CH2_CFG_SELF_RFSH_CK_DIS_EN                 ("enable"),
		.HBMC_CH2_CFG_SELF_RFSH_EN                        ("enable"),
		.HBMC_CH2_H0_FR_CLK_STCFG_EN                      ("disable"),
		.HBMC_CH2_CFG_SB_PRE_STALL_CYCLE                  (3),
		.HBMC_CH2_CFG_SB_POST_STALL_CYCLE                 (1),
		.HBMC_CH2_CFG_HBMC_CORECLK_PROG_DELAY1            (4095),
		.HBMC_CH2_CFG_HBMC_CORECLK_PROG_DELAY2            (0),
		.HBMC_CH2_CFG_HBMCPTRENSYNCSEL                    ("enable"),
		.HBMC_CH2_CFG_UB48MODE                            ("enable"),
		.HBMC_CH2_CFG_HBMCH2CPTRSTART                     (6),
		.HBMC_CH2_CFG_DWORD_LPBKEN                        ("disable"),
		.HBMC_CH2_CFG_AWORD_LPBEN                         ("disable"),
		.HBMC_CH2_CFG_DWORD_LPBKSEL                       ("disable"),
		.HBMC_CH2_CFG_AWORD_LPBKSEL                       (0),
		.HBMC_CH2_CFG_OBSGRPSEL                           (0),
		.HBMC_CH2_CFG_OBSSIGSEL                           (0),
		.HBMC_CH2_CFG_MEM_MCE                             ("disable"),
		.HBMC_CH2_CFG_MEM_WA                              (6),
		.HBMC_CH2_CFG_MEM_RMCE                            (1),
		.HBMC_CH2_CFG_MEM_WMCE                            (1),
		.HBMC_CH2_CFG_MEM_WPULSE                          (2),
		.HBMC_CH2_CFG_SRAM_ECC_ENABLE                     ("enable"),
		.HBMC_CH2_CFG_PC0_SRAM_INJD                       ("disable"),
		.HBMC_CH2_CFG_PC0_SRAM_INJS                       ("disable"),
		.HBMC_CH2_CFG_PC1_SRAM_INJD                       ("disable"),
		.HBMC_CH2_CFG_PC1_SRAM_INJS                       ("disable"),
		.HBMC_CH2_CFG_SRAM_SERRINTEN                      ("enable"),
		.HBMC_CH2_CFG_SRAM_SLVERR_DIS                     ("disable"),
		.HBMC_CH2_MMR_USER_TRIGGER                        ("disable"),
		.HBMC_CH2_MMR_USER_RDWR                           ("disable"),
		.HBMC_CH2_MMR_USER_BYTEENABLE                     (0),
		.HBMC_CH2_MMR_USER_ADDR                           (0),
		.HBMC_CH2_MMR_USER_WRDATA                         (0),
		.HBMC_CH2_MMR_SBOWN_REQ                           ("disable"),
		.HBMC_CH2_MMR_SBOWN_DELAY                         (100),
		.HBMC_CH2_CFG_SKETCH1                             (2),
		.HBMC_CH2_CFG_SKETCH2                             (0),
		.HBMC_CH2_CFG_TST_PATTERN                         (0),
		.HBMC_CH2_CFG_TST_START_ADDR                      (0),
		.HBMC_CH2_CFG_TST_BURST_LEN                       (0),
		.HBMC_CH2_CFG_TST_GEN_CMD                         (0),
		.HBMC_CH2_CFG_AXI_TRAFFIC_SEL                     ("disable"),
		.HBMC_CH2_CFG_TST_PC_SEL                          ("disable"),
		.HBMC_CH2_CFG_TST_TRIGGER                         ("disable"),
		.HBMC_CH2_CFG_TST_TIME_OUT                        (0),
		.HBMC_CH2_HBMC_RATE                               (2),
		.HBMC_CH2_HBM_TRFCSB                              (96),
		.HBMC_CH2_HBM_TRREFD                              (5),
		.HBMC_CH2_UFI_TRDEN                               (20),
		.HBMC_CH2_CFG_HBMC_PC0_WTP                        (8),
		.HBMC_CH2_CFG_HBMC_PC1_WTP                        (8),
		.HBMC_CH2_CFG_HBMC_PC0_ITP                        (14),
		.HBMC_CH2_CFG_HBMC_PC1_ITP                        (14),
		.HBMC_CH2_CFG_HBMC_PC0_RTP                        (2),
		.HBMC_CH2_CFG_HBMC_PC1_RTP                        (2),
		.HBMC_CH2_CFG_PAR_LAT                             (1),
		.HBMC_CH2_CFG_HBMC_PC0_FIW_SHORT                  (3),
		.HBMC_CH2_CFG_HBMC_PC0_ATI                        (9),
		.HBMC_CH2_CFG_HBMC_PC0_ITI                        (14),
		.HBMC_CH2_CFG_HBMC_PC0_ATA                        (14),
		.HBMC_CH2_CFG_HBMC_PC0_ITA                        (18),
		.HBMC_CH2_CFG_HBMC_PC0_ITA_DLY                    (4),
		.HBMC_CH2_CFG_HBMC_PC0_ATP                        (10),
		.HBMC_CH2_CFG_HBMC_PC0_ATR                        (5),
		.HBMC_CH2_CFG_HBMC_PC0_ITR                        (9),
		.HBMC_CH2_CFG_HBMC_PC0_ATW                        (5),
		.HBMC_CH2_CFG_HBMC_PC0_ITW                        (7),
		.HBMC_CH2_CFG_HBMC_PC0_PTA                        (3),
		.HBMC_CH2_CFG_HBMC_PC0_WTI                        (8),
		.HBMC_CH2_CFG_HBMC_PC0_RTA                        (6),
		.HBMC_CH2_CFG_HBMC_PC0_WTA                        (12),
		.HBMC_CH2_CFG_HBMC_PC0_ATA_DBG                    (1),
		.HBMC_CH2_CFG_HBMC_PC0_ATI_DBG                    (1),
		.HBMC_CH2_CFG_HBMC_PC0_ITA_DBG                    (5),
		.HBMC_CH2_CFG_HBMC_PC0_ITI_DBG                    (1),
		.HBMC_CH2_CFG_HBMC_PC0_RTRWTW_DBG                 (0),
		.HBMC_CH2_CFG_HBMC_PC0_WTR_DBG                    (5),
		.HBMC_CH2_CFG_HBMC_PC0_ATA_SBG                    (1),
		.HBMC_CH2_CFG_HBMC_PC0_ATI_SBG                    (1),
		.HBMC_CH2_CFG_HBMC_PC0_ITA_SBG                    (5),
		.HBMC_CH2_CFG_HBMC_PC0_ITI_SBG                    (1),
		.HBMC_CH2_CFG_HBMC_PC0_WTR_SBG                    (7),
		.HBMC_CH2_CFG_HBMC_PC0_RTR_DSID                   (1),
		.HBMC_CH2_CFG_HBMC_POWER_DOWN_TO_CK_DIS           (4),
		.HBMC_CH2_CFG_HBMC_CK_DIS_TO_POWER_DOWN           (4),
		.HBMC_CH2_CFG_HBMC_MIN_POWER_DOWN                 (4),
		.HBMC_CH2_CFG_HBMC_POWER_DOWN_TO_VALID            (4),
		.HBMC_CH2_CFG_HBMC_SELF_RFSH_TO_CK_DIS            (4),
		.HBMC_CH2_CFG_HBMC_CK_DIS_TO_SELF_RFSH            (4),
		.HBMC_CH2_CFG_HBMC_SELF_RFSH_TO_VALID             (82),
		.HBMC_CH2_CFG_HBMC_MIN_SELF_RFSH                  (4),
		.HBMC_CH2_CFG_HBMC_RFSH_AB_TO_VALID               (106),
		.HBMC_CH2_CFG_HBMC_RFSH_PB_TO_RFSH_PB             (4),
		.HBMC_CH2_CFG_HBMC_RFSH_PB_TO_VALID               (49),
		.HBMC_CH2_CFG_HBMC_TEMP000_RFSH_PERIOD            (4678),
		.HBMC_CH2_CFG_HBMC_TEMP001_RFSH_PERIOD            (2338),
		.HBMC_CH2_CFG_HBMC_TEMP011_RFSH_PERIOD            (1168),
		.HBMC_CH2_CFG_HBMC_TEMP010_RFSH_PERIOD            (583),
		.HBMC_CH2_CFG_HBMC_TEMP110_RFSH_PERIOD            (290),
		.HBMC_CH2_CFG_HBMC_TEMP111_RFSH_PERIOD            (1168),
		.HBMC_CH2_CFG_HBMC_TEMP101_RFSH_PERIOD            (1168),
		.HBMC_CH2_CFG_HBMC_TEMP100_RFSH_PERIOD            (1168),
		.HBMC_CH2_CFG_HBMC_RFSH_PB_TO_RFSH_PB_OFFSET      (2),
		.HBMC_CH2_CFG_HBMC_PCH_PB_TO_VALID                (6),
		.HBMC_CH2_CFG_HBMC_PCH_AB_TO_VALID                (6),
		.HBMC_CH2_CFG_HBMC_PC1_FIW_SHORT                  (3),
		.HBMC_CH2_CFG_HBMC_PC1_ATI                        (9),
		.HBMC_CH2_CFG_HBMC_PC1_ITI                        (14),
		.HBMC_CH2_CFG_HBMC_PC1_ATA                        (14),
		.HBMC_CH2_CFG_HBMC_PC1_ITA                        (18),
		.HBMC_CH2_CFG_HBMC_PC1_ITA_DLY                    (4),
		.HBMC_CH2_CFG_HBMC_PC1_ATP                        (10),
		.HBMC_CH2_CFG_HBMC_PC1_ATR                        (5),
		.HBMC_CH2_CFG_HBMC_PC1_ITR                        (8),
		.HBMC_CH2_CFG_HBMC_PC1_ATW                        (5),
		.HBMC_CH2_CFG_HBMC_PC1_ITW                        (7),
		.HBMC_CH2_CFG_HBMC_PC1_PTA                        (3),
		.HBMC_CH2_CFG_HBMC_PC1_WTI                        (8),
		.HBMC_CH2_CFG_HBMC_PC1_RTA                        (6),
		.HBMC_CH2_CFG_HBMC_PC1_WTA                        (13),
		.HBMC_CH2_CFG_HBMC_PC1_ATA_DBG                    (1),
		.HBMC_CH2_CFG_HBMC_PC1_ATI_DBG                    (1),
		.HBMC_CH2_CFG_HBMC_PC1_ITA_DBG                    (5),
		.HBMC_CH2_CFG_HBMC_PC1_ITI_DBG                    (1),
		.HBMC_CH2_CFG_HBMC_PC1_RTRWTW_DBG                 (0),
		.HBMC_CH2_CFG_HBMC_PC1_WTR_DBG                    (5),
		.HBMC_CH2_CFG_HBMC_PC1_ATA_SBG                    (1),
		.HBMC_CH2_CFG_HBMC_PC1_ATI_SBG                    (1),
		.HBMC_CH2_CFG_HBMC_PC1_ITA_SBG                    (5),
		.HBMC_CH2_CFG_HBMC_PC1_ITI_SBG                    (1),
		.HBMC_CH2_CFG_HBMC_PC1_WTR_SBG                    (7),
		.HBMC_CH2_CFG_HBMC_PC1_RTR_DSID                   (1),
		.HBMC_CH2_CFG_PSEUDO_BL8_EN                       ("enable"),
		.HBMC_CH2_CFG_CB_WREADY_GATE_EN                   ("disable"),
		.HBMC_CH2_CFG_PC0_RDEN_ON                         (5),
		.HBMC_CH2_CFG_PC1_RDEN_ON                         (5),
		.HBMC_CH2_CFG_PC0_RDIE_ON                         (9),
		.HBMC_CH2_CFG_PC1_RDIE_ON                         (9),
		.HBMC_CH2_CFG_PC0_CMD2RD                          (27),
		.HBMC_CH2_CFG_PC1_CMD2RD                          (28),
		.HBMC_CH2_CFG_PC0_CMD2RDPAR                       (28),
		.HBMC_CH2_CFG_PC1_CMD2RDPAR                       (29),
		.HBMC_CH2_CFG_PC0_WDQS_ON                         (4),
		.HBMC_CH2_CFG_PC1_WDQS_ON                         (4),
		.HBMC_CH2_CFG_WCQ_HWM                             (24),
		.HBMC_CH2_CFG_RFSH_POST_UPPER_LIMIT               (1),
		.HBMC_CH2_CFG_THROTTLE_EN                         ("disable"),
		.HBMC_CH2_CFG_TEMP000_ON_TIME                     (0),
		.HBMC_CH2_CFG_TEMP001_ON_TIME                     (0),
		.HBMC_CH2_CFG_TEMP010_ON_TIME                     (0),
		.HBMC_CH2_CFG_TEMP011_ON_TIME                     (0),
		.HBMC_CH2_CFG_TEMP100_ON_TIME                     (0),
		.HBMC_CH2_CFG_TEMP101_ON_TIME                     (0),
		.HBMC_CH2_CFG_TEMP110_ON_TIME                     (0),
		.HBMC_CH2_CFG_TEMP111_ON_TIME                     (0),
		.HBMC_CH2_CFG_TEMP000_OFF_TIME                    (255),
		.HBMC_CH2_CFG_TEMP001_OFF_TIME                    (255),
		.HBMC_CH2_CFG_TEMP010_OFF_TIME                    (255),
		.HBMC_CH2_CFG_TEMP011_OFF_TIME                    (255),
		.HBMC_CH2_CFG_TEMP100_OFF_TIME                    (255),
		.HBMC_CH2_CFG_TEMP101_OFF_TIME                    (255),
		.HBMC_CH2_CFG_TEMP110_OFF_TIME                    (255),
		.HBMC_CH2_CFG_TEMP111_OFF_TIME                    (255),
		.HBMC_CH2_CFG_RMW_EN                              ("enable"),
		.HBMC_CH2_CFG_POWER_DOWN_IDLE_THRESHOLD           (1),
		.HBMC_CH2_CFG_SB_PRE_UPDATE_CYCLE                 (8),
		.HBMC_CH2_CFG_HBMCC2HPTRDLY                       (0),
		.HBMC_CH2_HBM_TCCDL_BL4                           (4),
		.HBMC_CH2_HBM_TRTW                                (12),
		.HBMC_CH2_HBM_TFAW                                (12),
		.HBMC_CH2_HBM_TEAW                                (24),
		.HBMC_CH2_CFG_HBMC_PC0_FAW                        (3),
		.HBMC_CH2_CFG_HBMC_PC0_RTI                        (4),
		.HBMC_CH2_CFG_HBMC_PC0_RTW                        (10),
		.HBMC_CH2_CFG_HBMC_PC0_RTRWTW_SBG                 (1),
		.HBMC_CH2_CFG_HBMC_PC1_FAW                        (3),
		.HBMC_CH2_CFG_HBMC_PC1_RTI                        (5),
		.HBMC_CH2_CFG_HBMC_PC1_RTW                        (10),
		.HBMC_CH2_CFG_HBMC_PC1_RTRWTW_SBG                 (1),
		.HBMC_CH2_CFG_AWFIFO_RSVD_ENTRY                   (24),
		.HBMC_CH2_CFG_ARFIFO_RSVD_ENTRY                   (24),
		.HBMC_CH3_HBM_DEVICE                              ("hbm_device_8gb_8hi"),
		.HBMC_CH3_HBM_TRRDL                               (3),
		.HBMC_CH3_HBM_TRCDRD                              (9),
		.HBMC_CH3_HBM_TRCDWR                              (6),
		.HBMC_CH3_HBM_TRTPL_BL4                           (5),
		.HBMC_CH3_HBM_TRTPS_BL4                           (4),
		.HBMC_CH3_HBM_TRP                                 (9),
		.HBMC_CH3_HBM_TCCDS_BL4                           (2),
		.HBMC_CH3_HBM_TCCDR                               (3),
		.HBMC_CH3_HBM_TWR                                 (10),
		.HBMC_CH3_HBM_TWTRL                               (6),
		.HBMC_CH3_HBM_TWTRS                               (3),
		.HBMC_CH3_HBM_TDQSS_MAX_PS                        (200),
		.HBMC_CH3_HBM_TDQSS_MIN_PS                        (200),
		.HBMC_CH3_HBM_TDQSCK_MAX_PS                       (3500),
		.HBMC_CH3_HBM_TDQSQ_MAX_PS                        (105),
		.HBMC_CH3_HBM_PARAM_TYPE                          ("hbm_param_min"),
		.HBMC_CH3_RFSH_POLICY                             ("rfsh_policy_flexible"),
		.HBMC_CH3_HBM_TREFI                               (2340),
		.HBMC_CH3_HBM_TCKSRE                              (6),
		.HBMC_CH3_HBM_TCKSRX                              (6),
		.HBMC_CH3_HBM_TXS                                 (162),
		.HBMC_CH3_HBM_TCKESR                              (6),
		.HBMC_CH3_HBM_TXP                                 (5),
		.HBMC_CH3_HBM_TPD                                 (5),
		.HBMC_CH3_CFG_HBMC_MODES                          ("prod"),
		.HBMC_CH3_CORE_CLOCK_MHZ                          (300),
		.HBMC_CH3_CORE_CLOCK_PS                           (1000),
		.HBMC_CH3_CFG_CHANNEL_EN                          ("enable"),
		.HBMC_CH3_CFG_TR_ORDER                            ("enable"),
		.HBMC_CH3_CFG_ADDR_ORDER                          ("bgrbc"),
		.HBMC_CH3_CFG_USER_RD_AP_POL                      ("rdap_hint"),
		.HBMC_CH3_CFG_USER_WR_AP_POL                      ("wrap_hint"),
		.HBMC_CH3_CFG_RID_DEPENDENCY_EN                   ("enable"),
		.HBMC_CH3_CFG_HBMC_TX_BYPASS                      ("disable"),
		.HBMC_CH3_CFG_HBMC_RX_BYPASS                      ("disable"),
		.HBMC_CH3_CFG_P2HPEMUEN                           (0),
		.HBMC_CH3_CFG_RMPTREN                             ("disable"),
		.HBMC_CH3_CFG_RMPTRENDLY00                        (4),
		.HBMC_CH3_CFG_RMPTRENDLY01                        (3),
		.HBMC_CH3_CFG_RMPTRENDLY02                        (2),
		.HBMC_CH3_CFG_RMPTRENDLY03                        (1),
		.HBMC_CH3_CFG_RMPTRENDLY04                        (0),
		.HBMC_CH3_HBM_TRAS                                (20),
		.HBMC_CH3_HBM_TRRDS                               (3),
		.HBMC_CH3_HBMC_OFFSET                             (1),
		.HBMC_CH3_HBMC_RATE_VALUE                         ("rate_half"),
		.HBMC_CH3_HBM_CLOCK_MHZ                           (600),
		.HBMC_CH3_HBM_CLOCK_PS                            (1666),
		.HBMC_CH3_RFSH_MODE                               ("rfsh_mode_ctrl_rfsh_all"),
		.HBMC_CH3_HBM_TRFC                                (210),
		.HBMC_CH3_DATA_WIDTH_MODE                         ("data_width_mode_sdw"),
		.HBMC_CH3_EXT_RDIE                                (2),
		.HBMC_CH3_TEMP000_THROTTLE_RATIO                  (0),
		.HBMC_CH3_TEMP001_THROTTLE_RATIO                  (0),
		.HBMC_CH3_TEMP010_THROTTLE_RATIO                  (0),
		.HBMC_CH3_TEMP011_THROTTLE_RATIO                  (0),
		.HBMC_CH3_TEMP100_THROTTLE_RATIO                  (0),
		.HBMC_CH3_TEMP101_THROTTLE_RATIO                  (0),
		.HBMC_CH3_TEMP110_THROTTLE_RATIO                  (0),
		.HBMC_CH3_TEMP111_THROTTLE_RATIO                  (0),
		.HBMC_CH3_CORE_CLK_MODE                           ("hr_asyn"),
		.HBMC_CH3_CFG_HBMC_BL                             (4),
		.HBMC_CH3_USER_STRB_EN                            ("enable"),
		.HBMC_CH3_CFG_TBHMCRSTMIN                         (0),
		.HBMC_CH3_CFG_RESET_COUNT                         (0),
		.HBMC_CH3_CFG_HBMC_PC0_WL                         (6),
		.HBMC_CH3_CFG_HBMC_PC0_RL                         (15),
		.HBMC_CH3_CFG_HBMC_PC1_WL                         (6),
		.HBMC_CH3_CFG_HBMC_PC1_RL                         (15),
		.HBMC_CH3_CFG_POSTCAL_STATE                       ("sr"),
		.HBMC_CH3_CFG_UFIC2PDLY                           (0),
		.HBMC_CH3_CFG_UFIP2CDLY                           (0),
		.HBMC_CH3_CFG_CB_RMW_RD_IDLE_WAIT_EN              ("disable"),
		.HBMC_CH3_CFG_CB_RMW_FIFO_EMPTY_WAIT_EN           ("disable"),
		.HBMC_CH3_CFG_SB_POST_UPDATE_CYCLE                (1),
		.HBMC_CH3_CFG_HBMC_PC0_SCR_SEEDSEL                (0),
		.HBMC_CH3_CFG_HBMC_PC0_SCR_EN                     ("enable"),
		.HBMC_CH3_CFG_HBMC_RFSH_PB_BURST_GAP              (1),
		.HBMC_CH3_CFG_HBMC_PC1_SCR_SEEDSEL                (0),
		.HBMC_CH3_CFG_HBMC_PC1_SCR_EN                     ("enable"),
		.HBMC_CH3_CFG_FLIP_MODE                           ("disable"),
		.HBMC_CH3_CFG_DENSITY                             (3),
		.HBMC_CH3_CFG_USER_DATA_WIDTH                     ("b256"),
		.HBMC_CH3_CFG_CB_BREADY_BYPASS_EN                 ("disable"),
		.HBMC_CH3_CFG_CB_RREADY_BYPASS_EN                 ("disable"),
		.HBMC_CH3_CFG_CB_RVALID_GATE_EN                   ("enable"),
		.HBMC_CH3_CFG_CB_BVALID_GATE_EN                   ("enable"),
		.HBMC_CH3_CFG_ADDRCHNLMUXEN                       ("disable"),
		.HBMC_CH3_CFG_AXI_CMD_DEMUX_EN                    ("disable"),
		.HBMC_CH3_CFG_PC0_MAJOR_MODE_UPDATE_CNT           ("disable"),
		.HBMC_CH3_CFG_PC1_MAJOR_MODE_UPDATE_CNT           ("disable"),
		.HBMC_CH3_CFG_RCQ_AGE_LIMIT                       (32),
		.HBMC_CH3_CFG_RDB_RSVD_ENTRY                      (0),
		.HBMC_CH3_CFG_RD_STRB_IDLE_THRESHOLD              (50),
		.HBMC_CH3_CFG_PC0_CMD2RDEN                        (12),
		.HBMC_CH3_CFG_PC1_CMD2RDEN                        (13),
		.HBMC_CH3_CFG_PC0_CMD2RDIE                        (10),
		.HBMC_CH3_CFG_PC1_CMD2RDIE                        (11),
		.HBMC_CH3_CFG_PC0_DATAOE_ON                       (2),
		.HBMC_CH3_CFG_PC1_DATAOE_ON                       (2),
		.HBMC_CH3_CFG_PC0_CMD2DATA                        (3),
		.HBMC_CH3_CFG_PC1_CMD2DATA                        (4),
		.HBMC_CH3_CFG_WDB_RSVD_ENTRY                      (32),
		.HBMC_CH3_CFG_AWDB_RSVD_ENTRY                     (32),
		.HBMC_CH3_CFG_WCQ_BURST_THRESHOLD                 (64),
		.HBMC_CH3_CFG_WCQ_LWM                             (8),
		.HBMC_CH3_CFG_WCQ_TIMEOUT_THRESHOLD               (64),
		.HBMC_CH3_CFG_PC0_MAJOR_MODE_UPDATE_CFG           ("disable"),
		.HBMC_CH3_CFG_PC1_MAJOR_MODE_UPDATE_CFG           ("disable"),
		.HBMC_CH3_CFG_PC0_CMD2WDQS                        (2),
		.HBMC_CH3_CFG_PC1_CMD2WDQS                        (3),
		.HBMC_CH3_CFG_PC0_CMD2DATAOE                      (3),
		.HBMC_CH3_CFG_PC1_CMD2DATAOE                      (4),
		.HBMC_CH3_CFG_CB_MAJOR_MODE_EN                    ("enable"),
		.HBMC_CH3_CFG_CB_STRICT_MAJOR_MODE_EN             ("enable"),
		.HBMC_CH3_CFG_RFSH_ALL_EN                         ("enable"),
		.HBMC_CH3_CFG_RFSH_PB_EN                          ("disable"),
		.HBMC_CH3_CFG_USER_RFSH_PB_EN                     ("enable"),
		.HBMC_CH3_CFG_RFSH_AB_TO_PB_EN                    ("enable"),
		.HBMC_CH3_CFG_CB_TEMP_RFSH_FILTER_EN              ("disable"),
		.HBMC_CH3_CFG_RFSH_POST_LOWER_LIMIT               (1),
		.HBMC_CH3_CFG_RFSH_PRE_UPPER_LIMIT                (1),
		.HBMC_CH3_CFG_RFSH_IDLE_THRESHOLD                 (20),
		.HBMC_CH3_CFG_TEMP000_NO_OF_RFSH_BEFORE_SELF_RFSH (1),
		.HBMC_CH3_CFG_TEMP001_NO_OF_RFSH_BEFORE_SELF_RFSH (1),
		.HBMC_CH3_CFG_TEMP011_NO_OF_RFSH_BEFORE_SELF_RFSH (1),
		.HBMC_CH3_CFG_TEMP010_NO_OF_RFSH_BEFORE_SELF_RFSH (2),
		.HBMC_CH3_CFG_TEMP110_NO_OF_RFSH_BEFORE_SELF_RFSH (4),
		.HBMC_CH3_CFG_TEMP111_NO_OF_RFSH_BEFORE_SELF_RFSH (1),
		.HBMC_CH3_CFG_TEMP101_NO_OF_RFSH_BEFORE_SELF_RFSH (1),
		.HBMC_CH3_CFG_TEMP100_NO_OF_RFSH_BEFORE_SELF_RFSH (1),
		.HBMC_CH3_CFG_TEMP_FILTER_EN                      ("enable"),
		.HBMC_CH3_CFG_CATTRIP_FILTER_EN                   ("enable"),
		.HBMC_CH3_CFG_CB_BYPASS_CATTRIP                   ("disable"),
		.HBMC_CH3_CFG_CB_TEMP_SELECT                      ("disable"),
		.HBMC_CH3_CFG_F2C_TEMP_UPDATE                     ("disable"),
		.HBMC_CH3_CFG_F2C_TEMP                            (3),
		.HBMC_CH3_CFG_ADDR_SCR                            ("none"),
		.HBMC_CH3_CFG_ADDR_SPRD                           ("disable"),
		.HBMC_CH3_CFG_CB_RD_COL_ARB_PRIORITY_EN           ("enable"),
		.HBMC_CH3_CFG_CB_WR_COL_ARB_PRIORITY_EN           ("enable"),
		.HBMC_CH3_CFG_CB_RD_ROW_ARB_PRIORITY_EN           ("enable"),
		.HBMC_CH3_CFG_CB_WR_ROW_ARB_PRIORITY_EN           ("enable"),
		.HBMC_CH3_CFG_CB_DEPENDENCY_MODE                  ("enable"),
		.HBMC_CH3_CFG_MECC_EN                             ("disable"),
		.HBMC_CH3_CFG_CA_PAR_EN                           ("enable"),
		.HBMC_CH3_CFG_WR_PAR_EN                           ("enable"),
		.HBMC_CH3_CFG_RD_PAR_EN                           ("enable"),
		.HBMC_CH3_CFG_WR_DM_EN                            ("disable"),
		.HBMC_CH3_CFG_RD_DM_EN                            ("disable"),
		.HBMC_CH3_CFG_POWER_DOWN_EN                       ("enable"),
		.HBMC_CH3_CFG_POWER_DOWN_CK_DIS_EN                ("disable"),
		.HBMC_CH3_CFG_AUTO_RD_POWER_DOWN_EXIT_EN          ("enable"),
		.HBMC_CH3_CFG_AUTO_WR_POWER_DOWN_EXIT_EN          ("enable"),
		.HBMC_CH3_CFG_AUTO_RD_SELF_RFSH_EXIT_EN           ("enable"),
		.HBMC_CH3_CFG_AUTO_WR_SELF_RFSH_EXIT_EN           ("enable"),
		.HBMC_CH3_CFG_SELF_RFSH_CK_DIS_EN                 ("enable"),
		.HBMC_CH3_CFG_SELF_RFSH_EN                        ("enable"),
		.HBMC_CH3_H0_FR_CLK_STCFG_EN                      ("disable"),
		.HBMC_CH3_CFG_SB_PRE_STALL_CYCLE                  (3),
		.HBMC_CH3_CFG_SB_POST_STALL_CYCLE                 (1),
		.HBMC_CH3_CFG_HBMC_CORECLK_PROG_DELAY1            (4095),
		.HBMC_CH3_CFG_HBMC_CORECLK_PROG_DELAY2            (0),
		.HBMC_CH3_CFG_HBMCPTRENSYNCSEL                    ("enable"),
		.HBMC_CH3_CFG_UB48MODE                            ("enable"),
		.HBMC_CH3_CFG_HBMCH2CPTRSTART                     (6),
		.HBMC_CH3_CFG_DWORD_LPBKEN                        ("disable"),
		.HBMC_CH3_CFG_AWORD_LPBEN                         ("disable"),
		.HBMC_CH3_CFG_DWORD_LPBKSEL                       ("disable"),
		.HBMC_CH3_CFG_AWORD_LPBKSEL                       (0),
		.HBMC_CH3_CFG_OBSGRPSEL                           (0),
		.HBMC_CH3_CFG_OBSSIGSEL                           (0),
		.HBMC_CH3_CFG_MEM_MCE                             ("disable"),
		.HBMC_CH3_CFG_MEM_WA                              (6),
		.HBMC_CH3_CFG_MEM_RMCE                            (1),
		.HBMC_CH3_CFG_MEM_WMCE                            (1),
		.HBMC_CH3_CFG_MEM_WPULSE                          (2),
		.HBMC_CH3_CFG_SRAM_ECC_ENABLE                     ("enable"),
		.HBMC_CH3_CFG_PC0_SRAM_INJD                       ("disable"),
		.HBMC_CH3_CFG_PC0_SRAM_INJS                       ("disable"),
		.HBMC_CH3_CFG_PC1_SRAM_INJD                       ("disable"),
		.HBMC_CH3_CFG_PC1_SRAM_INJS                       ("disable"),
		.HBMC_CH3_CFG_SRAM_SERRINTEN                      ("enable"),
		.HBMC_CH3_CFG_SRAM_SLVERR_DIS                     ("disable"),
		.HBMC_CH3_MMR_USER_TRIGGER                        ("disable"),
		.HBMC_CH3_MMR_USER_RDWR                           ("disable"),
		.HBMC_CH3_MMR_USER_BYTEENABLE                     (0),
		.HBMC_CH3_MMR_USER_ADDR                           (0),
		.HBMC_CH3_MMR_USER_WRDATA                         (0),
		.HBMC_CH3_MMR_SBOWN_REQ                           ("disable"),
		.HBMC_CH3_MMR_SBOWN_DELAY                         (100),
		.HBMC_CH3_CFG_SKETCH1                             (2),
		.HBMC_CH3_CFG_SKETCH2                             (0),
		.HBMC_CH3_CFG_TST_PATTERN                         (0),
		.HBMC_CH3_CFG_TST_START_ADDR                      (0),
		.HBMC_CH3_CFG_TST_BURST_LEN                       (0),
		.HBMC_CH3_CFG_TST_GEN_CMD                         (0),
		.HBMC_CH3_CFG_AXI_TRAFFIC_SEL                     ("disable"),
		.HBMC_CH3_CFG_TST_PC_SEL                          ("disable"),
		.HBMC_CH3_CFG_TST_TRIGGER                         ("disable"),
		.HBMC_CH3_CFG_TST_TIME_OUT                        (0),
		.HBMC_CH3_HBMC_RATE                               (2),
		.HBMC_CH3_HBM_TRFCSB                              (96),
		.HBMC_CH3_HBM_TRREFD                              (5),
		.HBMC_CH3_UFI_TRDEN                               (20),
		.HBMC_CH3_CFG_HBMC_PC0_WTP                        (8),
		.HBMC_CH3_CFG_HBMC_PC1_WTP                        (8),
		.HBMC_CH3_CFG_HBMC_PC0_ITP                        (14),
		.HBMC_CH3_CFG_HBMC_PC1_ITP                        (14),
		.HBMC_CH3_CFG_HBMC_PC0_RTP                        (2),
		.HBMC_CH3_CFG_HBMC_PC1_RTP                        (2),
		.HBMC_CH3_CFG_PAR_LAT                             (1),
		.HBMC_CH3_CFG_HBMC_PC0_FIW_SHORT                  (3),
		.HBMC_CH3_CFG_HBMC_PC0_ATI                        (9),
		.HBMC_CH3_CFG_HBMC_PC0_ITI                        (14),
		.HBMC_CH3_CFG_HBMC_PC0_ATA                        (14),
		.HBMC_CH3_CFG_HBMC_PC0_ITA                        (18),
		.HBMC_CH3_CFG_HBMC_PC0_ITA_DLY                    (4),
		.HBMC_CH3_CFG_HBMC_PC0_ATP                        (10),
		.HBMC_CH3_CFG_HBMC_PC0_ATR                        (5),
		.HBMC_CH3_CFG_HBMC_PC0_ITR                        (9),
		.HBMC_CH3_CFG_HBMC_PC0_ATW                        (5),
		.HBMC_CH3_CFG_HBMC_PC0_ITW                        (7),
		.HBMC_CH3_CFG_HBMC_PC0_PTA                        (3),
		.HBMC_CH3_CFG_HBMC_PC0_WTI                        (8),
		.HBMC_CH3_CFG_HBMC_PC0_RTA                        (6),
		.HBMC_CH3_CFG_HBMC_PC0_WTA                        (12),
		.HBMC_CH3_CFG_HBMC_PC0_ATA_DBG                    (1),
		.HBMC_CH3_CFG_HBMC_PC0_ATI_DBG                    (1),
		.HBMC_CH3_CFG_HBMC_PC0_ITA_DBG                    (5),
		.HBMC_CH3_CFG_HBMC_PC0_ITI_DBG                    (1),
		.HBMC_CH3_CFG_HBMC_PC0_RTRWTW_DBG                 (0),
		.HBMC_CH3_CFG_HBMC_PC0_WTR_DBG                    (5),
		.HBMC_CH3_CFG_HBMC_PC0_ATA_SBG                    (1),
		.HBMC_CH3_CFG_HBMC_PC0_ATI_SBG                    (1),
		.HBMC_CH3_CFG_HBMC_PC0_ITA_SBG                    (5),
		.HBMC_CH3_CFG_HBMC_PC0_ITI_SBG                    (1),
		.HBMC_CH3_CFG_HBMC_PC0_WTR_SBG                    (7),
		.HBMC_CH3_CFG_HBMC_PC0_RTR_DSID                   (1),
		.HBMC_CH3_CFG_HBMC_POWER_DOWN_TO_CK_DIS           (4),
		.HBMC_CH3_CFG_HBMC_CK_DIS_TO_POWER_DOWN           (4),
		.HBMC_CH3_CFG_HBMC_MIN_POWER_DOWN                 (4),
		.HBMC_CH3_CFG_HBMC_POWER_DOWN_TO_VALID            (4),
		.HBMC_CH3_CFG_HBMC_SELF_RFSH_TO_CK_DIS            (4),
		.HBMC_CH3_CFG_HBMC_CK_DIS_TO_SELF_RFSH            (4),
		.HBMC_CH3_CFG_HBMC_SELF_RFSH_TO_VALID             (82),
		.HBMC_CH3_CFG_HBMC_MIN_SELF_RFSH                  (4),
		.HBMC_CH3_CFG_HBMC_RFSH_AB_TO_VALID               (106),
		.HBMC_CH3_CFG_HBMC_RFSH_PB_TO_RFSH_PB             (4),
		.HBMC_CH3_CFG_HBMC_RFSH_PB_TO_VALID               (49),
		.HBMC_CH3_CFG_HBMC_TEMP000_RFSH_PERIOD            (4678),
		.HBMC_CH3_CFG_HBMC_TEMP001_RFSH_PERIOD            (2338),
		.HBMC_CH3_CFG_HBMC_TEMP011_RFSH_PERIOD            (1168),
		.HBMC_CH3_CFG_HBMC_TEMP010_RFSH_PERIOD            (583),
		.HBMC_CH3_CFG_HBMC_TEMP110_RFSH_PERIOD            (290),
		.HBMC_CH3_CFG_HBMC_TEMP111_RFSH_PERIOD            (1168),
		.HBMC_CH3_CFG_HBMC_TEMP101_RFSH_PERIOD            (1168),
		.HBMC_CH3_CFG_HBMC_TEMP100_RFSH_PERIOD            (1168),
		.HBMC_CH3_CFG_HBMC_RFSH_PB_TO_RFSH_PB_OFFSET      (2),
		.HBMC_CH3_CFG_HBMC_PCH_PB_TO_VALID                (6),
		.HBMC_CH3_CFG_HBMC_PCH_AB_TO_VALID                (6),
		.HBMC_CH3_CFG_HBMC_PC1_FIW_SHORT                  (3),
		.HBMC_CH3_CFG_HBMC_PC1_ATI                        (9),
		.HBMC_CH3_CFG_HBMC_PC1_ITI                        (14),
		.HBMC_CH3_CFG_HBMC_PC1_ATA                        (14),
		.HBMC_CH3_CFG_HBMC_PC1_ITA                        (18),
		.HBMC_CH3_CFG_HBMC_PC1_ITA_DLY                    (4),
		.HBMC_CH3_CFG_HBMC_PC1_ATP                        (10),
		.HBMC_CH3_CFG_HBMC_PC1_ATR                        (5),
		.HBMC_CH3_CFG_HBMC_PC1_ITR                        (8),
		.HBMC_CH3_CFG_HBMC_PC1_ATW                        (5),
		.HBMC_CH3_CFG_HBMC_PC1_ITW                        (7),
		.HBMC_CH3_CFG_HBMC_PC1_PTA                        (3),
		.HBMC_CH3_CFG_HBMC_PC1_WTI                        (8),
		.HBMC_CH3_CFG_HBMC_PC1_RTA                        (6),
		.HBMC_CH3_CFG_HBMC_PC1_WTA                        (13),
		.HBMC_CH3_CFG_HBMC_PC1_ATA_DBG                    (1),
		.HBMC_CH3_CFG_HBMC_PC1_ATI_DBG                    (1),
		.HBMC_CH3_CFG_HBMC_PC1_ITA_DBG                    (5),
		.HBMC_CH3_CFG_HBMC_PC1_ITI_DBG                    (1),
		.HBMC_CH3_CFG_HBMC_PC1_RTRWTW_DBG                 (0),
		.HBMC_CH3_CFG_HBMC_PC1_WTR_DBG                    (5),
		.HBMC_CH3_CFG_HBMC_PC1_ATA_SBG                    (1),
		.HBMC_CH3_CFG_HBMC_PC1_ATI_SBG                    (1),
		.HBMC_CH3_CFG_HBMC_PC1_ITA_SBG                    (5),
		.HBMC_CH3_CFG_HBMC_PC1_ITI_SBG                    (1),
		.HBMC_CH3_CFG_HBMC_PC1_WTR_SBG                    (7),
		.HBMC_CH3_CFG_HBMC_PC1_RTR_DSID                   (1),
		.HBMC_CH3_CFG_PSEUDO_BL8_EN                       ("enable"),
		.HBMC_CH3_CFG_CB_WREADY_GATE_EN                   ("disable"),
		.HBMC_CH3_CFG_PC0_RDEN_ON                         (5),
		.HBMC_CH3_CFG_PC1_RDEN_ON                         (5),
		.HBMC_CH3_CFG_PC0_RDIE_ON                         (9),
		.HBMC_CH3_CFG_PC1_RDIE_ON                         (9),
		.HBMC_CH3_CFG_PC0_CMD2RD                          (27),
		.HBMC_CH3_CFG_PC1_CMD2RD                          (28),
		.HBMC_CH3_CFG_PC0_CMD2RDPAR                       (28),
		.HBMC_CH3_CFG_PC1_CMD2RDPAR                       (29),
		.HBMC_CH3_CFG_PC0_WDQS_ON                         (4),
		.HBMC_CH3_CFG_PC1_WDQS_ON                         (4),
		.HBMC_CH3_CFG_WCQ_HWM                             (24),
		.HBMC_CH3_CFG_RFSH_POST_UPPER_LIMIT               (1),
		.HBMC_CH3_CFG_THROTTLE_EN                         ("disable"),
		.HBMC_CH3_CFG_TEMP000_ON_TIME                     (0),
		.HBMC_CH3_CFG_TEMP001_ON_TIME                     (0),
		.HBMC_CH3_CFG_TEMP010_ON_TIME                     (0),
		.HBMC_CH3_CFG_TEMP011_ON_TIME                     (0),
		.HBMC_CH3_CFG_TEMP100_ON_TIME                     (0),
		.HBMC_CH3_CFG_TEMP101_ON_TIME                     (0),
		.HBMC_CH3_CFG_TEMP110_ON_TIME                     (0),
		.HBMC_CH3_CFG_TEMP111_ON_TIME                     (0),
		.HBMC_CH3_CFG_TEMP000_OFF_TIME                    (255),
		.HBMC_CH3_CFG_TEMP001_OFF_TIME                    (255),
		.HBMC_CH3_CFG_TEMP010_OFF_TIME                    (255),
		.HBMC_CH3_CFG_TEMP011_OFF_TIME                    (255),
		.HBMC_CH3_CFG_TEMP100_OFF_TIME                    (255),
		.HBMC_CH3_CFG_TEMP101_OFF_TIME                    (255),
		.HBMC_CH3_CFG_TEMP110_OFF_TIME                    (255),
		.HBMC_CH3_CFG_TEMP111_OFF_TIME                    (255),
		.HBMC_CH3_CFG_RMW_EN                              ("enable"),
		.HBMC_CH3_CFG_POWER_DOWN_IDLE_THRESHOLD           (1),
		.HBMC_CH3_CFG_SB_PRE_UPDATE_CYCLE                 (8),
		.HBMC_CH3_CFG_HBMCC2HPTRDLY                       (0),
		.HBMC_CH3_HBM_TCCDL_BL4                           (4),
		.HBMC_CH3_HBM_TRTW                                (12),
		.HBMC_CH3_HBM_TFAW                                (12),
		.HBMC_CH3_HBM_TEAW                                (24),
		.HBMC_CH3_CFG_HBMC_PC0_FAW                        (3),
		.HBMC_CH3_CFG_HBMC_PC0_RTI                        (4),
		.HBMC_CH3_CFG_HBMC_PC0_RTW                        (10),
		.HBMC_CH3_CFG_HBMC_PC0_RTRWTW_SBG                 (1),
		.HBMC_CH3_CFG_HBMC_PC1_FAW                        (3),
		.HBMC_CH3_CFG_HBMC_PC1_RTI                        (5),
		.HBMC_CH3_CFG_HBMC_PC1_RTW                        (10),
		.HBMC_CH3_CFG_HBMC_PC1_RTRWTW_SBG                 (1),
		.HBMC_CH3_CFG_AWFIFO_RSVD_ENTRY                   (24),
		.HBMC_CH3_CFG_ARFIFO_RSVD_ENTRY                   (24),
		.HBMC_CH4_HBM_DEVICE                              ("hbm_device_8gb_8hi"),
		.HBMC_CH4_HBM_TRRDL                               (3),
		.HBMC_CH4_HBM_TRCDRD                              (9),
		.HBMC_CH4_HBM_TRCDWR                              (6),
		.HBMC_CH4_HBM_TRTPL_BL4                           (5),
		.HBMC_CH4_HBM_TRTPS_BL4                           (4),
		.HBMC_CH4_HBM_TRP                                 (9),
		.HBMC_CH4_HBM_TCCDS_BL4                           (2),
		.HBMC_CH4_HBM_TCCDR                               (3),
		.HBMC_CH4_HBM_TWR                                 (10),
		.HBMC_CH4_HBM_TWTRL                               (6),
		.HBMC_CH4_HBM_TWTRS                               (3),
		.HBMC_CH4_HBM_TDQSS_MAX_PS                        (200),
		.HBMC_CH4_HBM_TDQSS_MIN_PS                        (200),
		.HBMC_CH4_HBM_TDQSCK_MAX_PS                       (3500),
		.HBMC_CH4_HBM_TDQSQ_MAX_PS                        (105),
		.HBMC_CH4_HBM_PARAM_TYPE                          ("hbm_param_min"),
		.HBMC_CH4_RFSH_POLICY                             ("rfsh_policy_flexible"),
		.HBMC_CH4_HBM_TREFI                               (2340),
		.HBMC_CH4_HBM_TCKSRE                              (6),
		.HBMC_CH4_HBM_TCKSRX                              (6),
		.HBMC_CH4_HBM_TXS                                 (162),
		.HBMC_CH4_HBM_TCKESR                              (6),
		.HBMC_CH4_HBM_TXP                                 (5),
		.HBMC_CH4_HBM_TPD                                 (5),
		.HBMC_CH4_CFG_HBMC_MODES                          ("prod"),
		.HBMC_CH4_CORE_CLOCK_MHZ                          (300),
		.HBMC_CH4_CORE_CLOCK_PS                           (1000),
		.HBMC_CH4_CFG_CHANNEL_EN                          ("enable"),
		.HBMC_CH4_CFG_TR_ORDER                            ("enable"),
		.HBMC_CH4_CFG_ADDR_ORDER                          ("bgrbc"),
		.HBMC_CH4_CFG_USER_RD_AP_POL                      ("rdap_hint"),
		.HBMC_CH4_CFG_USER_WR_AP_POL                      ("wrap_hint"),
		.HBMC_CH4_CFG_RID_DEPENDENCY_EN                   ("enable"),
		.HBMC_CH4_CFG_HBMC_TX_BYPASS                      ("disable"),
		.HBMC_CH4_CFG_HBMC_RX_BYPASS                      ("disable"),
		.HBMC_CH4_CFG_P2HPEMUEN                           (2),
		.HBMC_CH4_CFG_RMPTREN                             ("disable"),
		.HBMC_CH4_CFG_RMPTRENDLY00                        (6),
		.HBMC_CH4_CFG_RMPTRENDLY01                        (7),
		.HBMC_CH4_CFG_RMPTRENDLY02                        (8),
		.HBMC_CH4_CFG_RMPTRENDLY03                        (9),
		.HBMC_CH4_CFG_RMPTRENDLY04                        (10),
		.HBMC_CH4_HBM_TRAS                                (20),
		.HBMC_CH4_HBM_TRRDS                               (3),
		.HBMC_CH4_HBMC_OFFSET                             (1),
		.HBMC_CH4_HBMC_RATE_VALUE                         ("rate_half"),
		.HBMC_CH4_HBM_CLOCK_MHZ                           (600),
		.HBMC_CH4_HBM_CLOCK_PS                            (1666),
		.HBMC_CH4_RFSH_MODE                               ("rfsh_mode_ctrl_rfsh_all"),
		.HBMC_CH4_HBM_TRFC                                (210),
		.HBMC_CH4_DATA_WIDTH_MODE                         ("data_width_mode_sdw"),
		.HBMC_CH4_EXT_RDIE                                (2),
		.HBMC_CH4_TEMP000_THROTTLE_RATIO                  (0),
		.HBMC_CH4_TEMP001_THROTTLE_RATIO                  (0),
		.HBMC_CH4_TEMP010_THROTTLE_RATIO                  (0),
		.HBMC_CH4_TEMP011_THROTTLE_RATIO                  (0),
		.HBMC_CH4_TEMP100_THROTTLE_RATIO                  (0),
		.HBMC_CH4_TEMP101_THROTTLE_RATIO                  (0),
		.HBMC_CH4_TEMP110_THROTTLE_RATIO                  (0),
		.HBMC_CH4_TEMP111_THROTTLE_RATIO                  (0),
		.HBMC_CH4_CORE_CLK_MODE                           ("hr_asyn"),
		.HBMC_CH4_CFG_HBMC_BL                             (4),
		.HBMC_CH4_USER_STRB_EN                            ("enable"),
		.HBMC_CH4_CFG_TBHMCRSTMIN                         (0),
		.HBMC_CH4_CFG_RESET_COUNT                         (0),
		.HBMC_CH4_CFG_HBMC_PC0_WL                         (6),
		.HBMC_CH4_CFG_HBMC_PC0_RL                         (15),
		.HBMC_CH4_CFG_HBMC_PC1_WL                         (6),
		.HBMC_CH4_CFG_HBMC_PC1_RL                         (15),
		.HBMC_CH4_CFG_POSTCAL_STATE                       ("sr"),
		.HBMC_CH4_CFG_UFIC2PDLY                           (0),
		.HBMC_CH4_CFG_UFIP2CDLY                           (0),
		.HBMC_CH4_CFG_CB_RMW_RD_IDLE_WAIT_EN              ("disable"),
		.HBMC_CH4_CFG_CB_RMW_FIFO_EMPTY_WAIT_EN           ("disable"),
		.HBMC_CH4_CFG_SB_POST_UPDATE_CYCLE                (1),
		.HBMC_CH4_CFG_HBMC_PC0_SCR_SEEDSEL                (0),
		.HBMC_CH4_CFG_HBMC_PC0_SCR_EN                     ("enable"),
		.HBMC_CH4_CFG_HBMC_RFSH_PB_BURST_GAP              (1),
		.HBMC_CH4_CFG_HBMC_PC1_SCR_SEEDSEL                (0),
		.HBMC_CH4_CFG_HBMC_PC1_SCR_EN                     ("enable"),
		.HBMC_CH4_CFG_FLIP_MODE                           ("disable"),
		.HBMC_CH4_CFG_DENSITY                             (3),
		.HBMC_CH4_CFG_USER_DATA_WIDTH                     ("b256"),
		.HBMC_CH4_CFG_CB_BREADY_BYPASS_EN                 ("disable"),
		.HBMC_CH4_CFG_CB_RREADY_BYPASS_EN                 ("disable"),
		.HBMC_CH4_CFG_CB_RVALID_GATE_EN                   ("enable"),
		.HBMC_CH4_CFG_CB_BVALID_GATE_EN                   ("enable"),
		.HBMC_CH4_CFG_ADDRCHNLMUXEN                       ("disable"),
		.HBMC_CH4_CFG_AXI_CMD_DEMUX_EN                    ("disable"),
		.HBMC_CH4_CFG_PC0_MAJOR_MODE_UPDATE_CNT           ("disable"),
		.HBMC_CH4_CFG_PC1_MAJOR_MODE_UPDATE_CNT           ("disable"),
		.HBMC_CH4_CFG_RCQ_AGE_LIMIT                       (32),
		.HBMC_CH4_CFG_RDB_RSVD_ENTRY                      (0),
		.HBMC_CH4_CFG_RD_STRB_IDLE_THRESHOLD              (50),
		.HBMC_CH4_CFG_PC0_CMD2RDEN                        (12),
		.HBMC_CH4_CFG_PC1_CMD2RDEN                        (13),
		.HBMC_CH4_CFG_PC0_CMD2RDIE                        (10),
		.HBMC_CH4_CFG_PC1_CMD2RDIE                        (11),
		.HBMC_CH4_CFG_PC0_DATAOE_ON                       (2),
		.HBMC_CH4_CFG_PC1_DATAOE_ON                       (2),
		.HBMC_CH4_CFG_PC0_CMD2DATA                        (3),
		.HBMC_CH4_CFG_PC1_CMD2DATA                        (4),
		.HBMC_CH4_CFG_WDB_RSVD_ENTRY                      (32),
		.HBMC_CH4_CFG_AWDB_RSVD_ENTRY                     (32),
		.HBMC_CH4_CFG_WCQ_BURST_THRESHOLD                 (64),
		.HBMC_CH4_CFG_WCQ_LWM                             (8),
		.HBMC_CH4_CFG_WCQ_TIMEOUT_THRESHOLD               (64),
		.HBMC_CH4_CFG_PC0_MAJOR_MODE_UPDATE_CFG           ("disable"),
		.HBMC_CH4_CFG_PC1_MAJOR_MODE_UPDATE_CFG           ("disable"),
		.HBMC_CH4_CFG_PC0_CMD2WDQS                        (2),
		.HBMC_CH4_CFG_PC1_CMD2WDQS                        (3),
		.HBMC_CH4_CFG_PC0_CMD2DATAOE                      (3),
		.HBMC_CH4_CFG_PC1_CMD2DATAOE                      (4),
		.HBMC_CH4_CFG_CB_MAJOR_MODE_EN                    ("enable"),
		.HBMC_CH4_CFG_CB_STRICT_MAJOR_MODE_EN             ("enable"),
		.HBMC_CH4_CFG_RFSH_ALL_EN                         ("enable"),
		.HBMC_CH4_CFG_RFSH_PB_EN                          ("disable"),
		.HBMC_CH4_CFG_USER_RFSH_PB_EN                     ("enable"),
		.HBMC_CH4_CFG_RFSH_AB_TO_PB_EN                    ("enable"),
		.HBMC_CH4_CFG_CB_TEMP_RFSH_FILTER_EN              ("disable"),
		.HBMC_CH4_CFG_RFSH_POST_LOWER_LIMIT               (1),
		.HBMC_CH4_CFG_RFSH_PRE_UPPER_LIMIT                (1),
		.HBMC_CH4_CFG_RFSH_IDLE_THRESHOLD                 (20),
		.HBMC_CH4_CFG_TEMP000_NO_OF_RFSH_BEFORE_SELF_RFSH (1),
		.HBMC_CH4_CFG_TEMP001_NO_OF_RFSH_BEFORE_SELF_RFSH (1),
		.HBMC_CH4_CFG_TEMP011_NO_OF_RFSH_BEFORE_SELF_RFSH (1),
		.HBMC_CH4_CFG_TEMP010_NO_OF_RFSH_BEFORE_SELF_RFSH (2),
		.HBMC_CH4_CFG_TEMP110_NO_OF_RFSH_BEFORE_SELF_RFSH (4),
		.HBMC_CH4_CFG_TEMP111_NO_OF_RFSH_BEFORE_SELF_RFSH (1),
		.HBMC_CH4_CFG_TEMP101_NO_OF_RFSH_BEFORE_SELF_RFSH (1),
		.HBMC_CH4_CFG_TEMP100_NO_OF_RFSH_BEFORE_SELF_RFSH (1),
		.HBMC_CH4_CFG_TEMP_FILTER_EN                      ("enable"),
		.HBMC_CH4_CFG_CATTRIP_FILTER_EN                   ("enable"),
		.HBMC_CH4_CFG_CB_BYPASS_CATTRIP                   ("disable"),
		.HBMC_CH4_CFG_CB_TEMP_SELECT                      ("disable"),
		.HBMC_CH4_CFG_F2C_TEMP_UPDATE                     ("disable"),
		.HBMC_CH4_CFG_F2C_TEMP                            (3),
		.HBMC_CH4_CFG_ADDR_SCR                            ("none"),
		.HBMC_CH4_CFG_ADDR_SPRD                           ("disable"),
		.HBMC_CH4_CFG_CB_RD_COL_ARB_PRIORITY_EN           ("enable"),
		.HBMC_CH4_CFG_CB_WR_COL_ARB_PRIORITY_EN           ("enable"),
		.HBMC_CH4_CFG_CB_RD_ROW_ARB_PRIORITY_EN           ("enable"),
		.HBMC_CH4_CFG_CB_WR_ROW_ARB_PRIORITY_EN           ("enable"),
		.HBMC_CH4_CFG_CB_DEPENDENCY_MODE                  ("enable"),
		.HBMC_CH4_CFG_MECC_EN                             ("disable"),
		.HBMC_CH4_CFG_CA_PAR_EN                           ("enable"),
		.HBMC_CH4_CFG_WR_PAR_EN                           ("enable"),
		.HBMC_CH4_CFG_RD_PAR_EN                           ("enable"),
		.HBMC_CH4_CFG_WR_DM_EN                            ("disable"),
		.HBMC_CH4_CFG_RD_DM_EN                            ("disable"),
		.HBMC_CH4_CFG_POWER_DOWN_EN                       ("enable"),
		.HBMC_CH4_CFG_POWER_DOWN_CK_DIS_EN                ("disable"),
		.HBMC_CH4_CFG_AUTO_RD_POWER_DOWN_EXIT_EN          ("enable"),
		.HBMC_CH4_CFG_AUTO_WR_POWER_DOWN_EXIT_EN          ("enable"),
		.HBMC_CH4_CFG_AUTO_RD_SELF_RFSH_EXIT_EN           ("enable"),
		.HBMC_CH4_CFG_AUTO_WR_SELF_RFSH_EXIT_EN           ("enable"),
		.HBMC_CH4_CFG_SELF_RFSH_CK_DIS_EN                 ("enable"),
		.HBMC_CH4_CFG_SELF_RFSH_EN                        ("enable"),
		.HBMC_CH4_H0_FR_CLK_STCFG_EN                      ("disable"),
		.HBMC_CH4_CFG_SB_PRE_STALL_CYCLE                  (3),
		.HBMC_CH4_CFG_SB_POST_STALL_CYCLE                 (1),
		.HBMC_CH4_CFG_HBMC_CORECLK_PROG_DELAY1            (255),
		.HBMC_CH4_CFG_HBMC_CORECLK_PROG_DELAY2            (0),
		.HBMC_CH4_CFG_HBMCPTRENSYNCSEL                    ("enable"),
		.HBMC_CH4_CFG_UB48MODE                            ("enable"),
		.HBMC_CH4_CFG_HBMCH2CPTRSTART                     (6),
		.HBMC_CH4_CFG_DWORD_LPBKEN                        ("disable"),
		.HBMC_CH4_CFG_AWORD_LPBEN                         ("disable"),
		.HBMC_CH4_CFG_DWORD_LPBKSEL                       ("disable"),
		.HBMC_CH4_CFG_AWORD_LPBKSEL                       (0),
		.HBMC_CH4_CFG_OBSGRPSEL                           (0),
		.HBMC_CH4_CFG_OBSSIGSEL                           (0),
		.HBMC_CH4_CFG_MEM_MCE                             ("disable"),
		.HBMC_CH4_CFG_MEM_WA                              (6),
		.HBMC_CH4_CFG_MEM_RMCE                            (1),
		.HBMC_CH4_CFG_MEM_WMCE                            (1),
		.HBMC_CH4_CFG_MEM_WPULSE                          (2),
		.HBMC_CH4_CFG_SRAM_ECC_ENABLE                     ("enable"),
		.HBMC_CH4_CFG_PC0_SRAM_INJD                       ("disable"),
		.HBMC_CH4_CFG_PC0_SRAM_INJS                       ("disable"),
		.HBMC_CH4_CFG_PC1_SRAM_INJD                       ("disable"),
		.HBMC_CH4_CFG_PC1_SRAM_INJS                       ("disable"),
		.HBMC_CH4_CFG_SRAM_SERRINTEN                      ("enable"),
		.HBMC_CH4_CFG_SRAM_SLVERR_DIS                     ("disable"),
		.HBMC_CH4_MMR_USER_TRIGGER                        ("disable"),
		.HBMC_CH4_MMR_USER_RDWR                           ("disable"),
		.HBMC_CH4_MMR_USER_BYTEENABLE                     (0),
		.HBMC_CH4_MMR_USER_ADDR                           (0),
		.HBMC_CH4_MMR_USER_WRDATA                         (0),
		.HBMC_CH4_MMR_SBOWN_REQ                           ("disable"),
		.HBMC_CH4_MMR_SBOWN_DELAY                         (100),
		.HBMC_CH4_CFG_SKETCH1                             (2),
		.HBMC_CH4_CFG_SKETCH2                             (0),
		.HBMC_CH4_CFG_TST_PATTERN                         (0),
		.HBMC_CH4_CFG_TST_START_ADDR                      (0),
		.HBMC_CH4_CFG_TST_BURST_LEN                       (0),
		.HBMC_CH4_CFG_TST_GEN_CMD                         (0),
		.HBMC_CH4_CFG_AXI_TRAFFIC_SEL                     ("disable"),
		.HBMC_CH4_CFG_TST_PC_SEL                          ("disable"),
		.HBMC_CH4_CFG_TST_TRIGGER                         ("disable"),
		.HBMC_CH4_CFG_TST_TIME_OUT                        (0),
		.HBMC_CH4_HBMC_RATE                               (2),
		.HBMC_CH4_HBM_TRFCSB                              (96),
		.HBMC_CH4_HBM_TRREFD                              (5),
		.HBMC_CH4_UFI_TRDEN                               (20),
		.HBMC_CH4_CFG_HBMC_PC0_WTP                        (8),
		.HBMC_CH4_CFG_HBMC_PC1_WTP                        (8),
		.HBMC_CH4_CFG_HBMC_PC0_ITP                        (14),
		.HBMC_CH4_CFG_HBMC_PC1_ITP                        (14),
		.HBMC_CH4_CFG_HBMC_PC0_RTP                        (2),
		.HBMC_CH4_CFG_HBMC_PC1_RTP                        (2),
		.HBMC_CH4_CFG_PAR_LAT                             (1),
		.HBMC_CH4_CFG_HBMC_PC0_FIW_SHORT                  (3),
		.HBMC_CH4_CFG_HBMC_PC0_ATI                        (9),
		.HBMC_CH4_CFG_HBMC_PC0_ITI                        (14),
		.HBMC_CH4_CFG_HBMC_PC0_ATA                        (14),
		.HBMC_CH4_CFG_HBMC_PC0_ITA                        (18),
		.HBMC_CH4_CFG_HBMC_PC0_ITA_DLY                    (4),
		.HBMC_CH4_CFG_HBMC_PC0_ATP                        (10),
		.HBMC_CH4_CFG_HBMC_PC0_ATR                        (5),
		.HBMC_CH4_CFG_HBMC_PC0_ITR                        (9),
		.HBMC_CH4_CFG_HBMC_PC0_ATW                        (5),
		.HBMC_CH4_CFG_HBMC_PC0_ITW                        (7),
		.HBMC_CH4_CFG_HBMC_PC0_PTA                        (3),
		.HBMC_CH4_CFG_HBMC_PC0_WTI                        (8),
		.HBMC_CH4_CFG_HBMC_PC0_RTA                        (6),
		.HBMC_CH4_CFG_HBMC_PC0_WTA                        (12),
		.HBMC_CH4_CFG_HBMC_PC0_ATA_DBG                    (1),
		.HBMC_CH4_CFG_HBMC_PC0_ATI_DBG                    (1),
		.HBMC_CH4_CFG_HBMC_PC0_ITA_DBG                    (5),
		.HBMC_CH4_CFG_HBMC_PC0_ITI_DBG                    (1),
		.HBMC_CH4_CFG_HBMC_PC0_RTRWTW_DBG                 (0),
		.HBMC_CH4_CFG_HBMC_PC0_WTR_DBG                    (5),
		.HBMC_CH4_CFG_HBMC_PC0_ATA_SBG                    (1),
		.HBMC_CH4_CFG_HBMC_PC0_ATI_SBG                    (1),
		.HBMC_CH4_CFG_HBMC_PC0_ITA_SBG                    (5),
		.HBMC_CH4_CFG_HBMC_PC0_ITI_SBG                    (1),
		.HBMC_CH4_CFG_HBMC_PC0_WTR_SBG                    (7),
		.HBMC_CH4_CFG_HBMC_PC0_RTR_DSID                   (1),
		.HBMC_CH4_CFG_HBMC_POWER_DOWN_TO_CK_DIS           (4),
		.HBMC_CH4_CFG_HBMC_CK_DIS_TO_POWER_DOWN           (4),
		.HBMC_CH4_CFG_HBMC_MIN_POWER_DOWN                 (4),
		.HBMC_CH4_CFG_HBMC_POWER_DOWN_TO_VALID            (4),
		.HBMC_CH4_CFG_HBMC_SELF_RFSH_TO_CK_DIS            (4),
		.HBMC_CH4_CFG_HBMC_CK_DIS_TO_SELF_RFSH            (4),
		.HBMC_CH4_CFG_HBMC_SELF_RFSH_TO_VALID             (82),
		.HBMC_CH4_CFG_HBMC_MIN_SELF_RFSH                  (4),
		.HBMC_CH4_CFG_HBMC_RFSH_AB_TO_VALID               (106),
		.HBMC_CH4_CFG_HBMC_RFSH_PB_TO_RFSH_PB             (4),
		.HBMC_CH4_CFG_HBMC_RFSH_PB_TO_VALID               (49),
		.HBMC_CH4_CFG_HBMC_TEMP000_RFSH_PERIOD            (4678),
		.HBMC_CH4_CFG_HBMC_TEMP001_RFSH_PERIOD            (2338),
		.HBMC_CH4_CFG_HBMC_TEMP011_RFSH_PERIOD            (1168),
		.HBMC_CH4_CFG_HBMC_TEMP010_RFSH_PERIOD            (583),
		.HBMC_CH4_CFG_HBMC_TEMP110_RFSH_PERIOD            (290),
		.HBMC_CH4_CFG_HBMC_TEMP111_RFSH_PERIOD            (1168),
		.HBMC_CH4_CFG_HBMC_TEMP101_RFSH_PERIOD            (1168),
		.HBMC_CH4_CFG_HBMC_TEMP100_RFSH_PERIOD            (1168),
		.HBMC_CH4_CFG_HBMC_RFSH_PB_TO_RFSH_PB_OFFSET      (2),
		.HBMC_CH4_CFG_HBMC_PCH_PB_TO_VALID                (6),
		.HBMC_CH4_CFG_HBMC_PCH_AB_TO_VALID                (6),
		.HBMC_CH4_CFG_HBMC_PC1_FIW_SHORT                  (3),
		.HBMC_CH4_CFG_HBMC_PC1_ATI                        (9),
		.HBMC_CH4_CFG_HBMC_PC1_ITI                        (14),
		.HBMC_CH4_CFG_HBMC_PC1_ATA                        (14),
		.HBMC_CH4_CFG_HBMC_PC1_ITA                        (18),
		.HBMC_CH4_CFG_HBMC_PC1_ITA_DLY                    (4),
		.HBMC_CH4_CFG_HBMC_PC1_ATP                        (10),
		.HBMC_CH4_CFG_HBMC_PC1_ATR                        (5),
		.HBMC_CH4_CFG_HBMC_PC1_ITR                        (8),
		.HBMC_CH4_CFG_HBMC_PC1_ATW                        (5),
		.HBMC_CH4_CFG_HBMC_PC1_ITW                        (7),
		.HBMC_CH4_CFG_HBMC_PC1_PTA                        (3),
		.HBMC_CH4_CFG_HBMC_PC1_WTI                        (8),
		.HBMC_CH4_CFG_HBMC_PC1_RTA                        (6),
		.HBMC_CH4_CFG_HBMC_PC1_WTA                        (13),
		.HBMC_CH4_CFG_HBMC_PC1_ATA_DBG                    (1),
		.HBMC_CH4_CFG_HBMC_PC1_ATI_DBG                    (1),
		.HBMC_CH4_CFG_HBMC_PC1_ITA_DBG                    (5),
		.HBMC_CH4_CFG_HBMC_PC1_ITI_DBG                    (1),
		.HBMC_CH4_CFG_HBMC_PC1_RTRWTW_DBG                 (0),
		.HBMC_CH4_CFG_HBMC_PC1_WTR_DBG                    (5),
		.HBMC_CH4_CFG_HBMC_PC1_ATA_SBG                    (1),
		.HBMC_CH4_CFG_HBMC_PC1_ATI_SBG                    (1),
		.HBMC_CH4_CFG_HBMC_PC1_ITA_SBG                    (5),
		.HBMC_CH4_CFG_HBMC_PC1_ITI_SBG                    (1),
		.HBMC_CH4_CFG_HBMC_PC1_WTR_SBG                    (7),
		.HBMC_CH4_CFG_HBMC_PC1_RTR_DSID                   (1),
		.HBMC_CH4_CFG_PSEUDO_BL8_EN                       ("enable"),
		.HBMC_CH4_CFG_CB_WREADY_GATE_EN                   ("disable"),
		.HBMC_CH4_CFG_PC0_RDEN_ON                         (5),
		.HBMC_CH4_CFG_PC1_RDEN_ON                         (5),
		.HBMC_CH4_CFG_PC0_RDIE_ON                         (9),
		.HBMC_CH4_CFG_PC1_RDIE_ON                         (9),
		.HBMC_CH4_CFG_PC0_CMD2RD                          (27),
		.HBMC_CH4_CFG_PC1_CMD2RD                          (28),
		.HBMC_CH4_CFG_PC0_CMD2RDPAR                       (28),
		.HBMC_CH4_CFG_PC1_CMD2RDPAR                       (29),
		.HBMC_CH4_CFG_PC0_WDQS_ON                         (4),
		.HBMC_CH4_CFG_PC1_WDQS_ON                         (4),
		.HBMC_CH4_CFG_WCQ_HWM                             (24),
		.HBMC_CH4_CFG_RFSH_POST_UPPER_LIMIT               (1),
		.HBMC_CH4_CFG_THROTTLE_EN                         ("disable"),
		.HBMC_CH4_CFG_TEMP000_ON_TIME                     (0),
		.HBMC_CH4_CFG_TEMP001_ON_TIME                     (0),
		.HBMC_CH4_CFG_TEMP010_ON_TIME                     (0),
		.HBMC_CH4_CFG_TEMP011_ON_TIME                     (0),
		.HBMC_CH4_CFG_TEMP100_ON_TIME                     (0),
		.HBMC_CH4_CFG_TEMP101_ON_TIME                     (0),
		.HBMC_CH4_CFG_TEMP110_ON_TIME                     (0),
		.HBMC_CH4_CFG_TEMP111_ON_TIME                     (0),
		.HBMC_CH4_CFG_TEMP000_OFF_TIME                    (255),
		.HBMC_CH4_CFG_TEMP001_OFF_TIME                    (255),
		.HBMC_CH4_CFG_TEMP010_OFF_TIME                    (255),
		.HBMC_CH4_CFG_TEMP011_OFF_TIME                    (255),
		.HBMC_CH4_CFG_TEMP100_OFF_TIME                    (255),
		.HBMC_CH4_CFG_TEMP101_OFF_TIME                    (255),
		.HBMC_CH4_CFG_TEMP110_OFF_TIME                    (255),
		.HBMC_CH4_CFG_TEMP111_OFF_TIME                    (255),
		.HBMC_CH4_CFG_RMW_EN                              ("enable"),
		.HBMC_CH4_CFG_POWER_DOWN_IDLE_THRESHOLD           (1),
		.HBMC_CH4_CFG_SB_PRE_UPDATE_CYCLE                 (8),
		.HBMC_CH4_CFG_HBMCC2HPTRDLY                       (0),
		.HBMC_CH4_HBM_TCCDL_BL4                           (4),
		.HBMC_CH4_HBM_TRTW                                (12),
		.HBMC_CH4_HBM_TFAW                                (12),
		.HBMC_CH4_HBM_TEAW                                (24),
		.HBMC_CH4_CFG_HBMC_PC0_FAW                        (3),
		.HBMC_CH4_CFG_HBMC_PC0_RTI                        (4),
		.HBMC_CH4_CFG_HBMC_PC0_RTW                        (10),
		.HBMC_CH4_CFG_HBMC_PC0_RTRWTW_SBG                 (1),
		.HBMC_CH4_CFG_HBMC_PC1_FAW                        (3),
		.HBMC_CH4_CFG_HBMC_PC1_RTI                        (5),
		.HBMC_CH4_CFG_HBMC_PC1_RTW                        (10),
		.HBMC_CH4_CFG_HBMC_PC1_RTRWTW_SBG                 (1),
		.HBMC_CH4_CFG_AWFIFO_RSVD_ENTRY                   (24),
		.HBMC_CH4_CFG_ARFIFO_RSVD_ENTRY                   (24),
		.HBMC_CH5_HBM_DEVICE                              ("hbm_device_8gb_8hi"),
		.HBMC_CH5_HBM_TRRDL                               (3),
		.HBMC_CH5_HBM_TRCDRD                              (9),
		.HBMC_CH5_HBM_TRCDWR                              (6),
		.HBMC_CH5_HBM_TRTPL_BL4                           (5),
		.HBMC_CH5_HBM_TRTPS_BL4                           (4),
		.HBMC_CH5_HBM_TRP                                 (9),
		.HBMC_CH5_HBM_TCCDS_BL4                           (2),
		.HBMC_CH5_HBM_TCCDR                               (3),
		.HBMC_CH5_HBM_TWR                                 (10),
		.HBMC_CH5_HBM_TWTRL                               (6),
		.HBMC_CH5_HBM_TWTRS                               (3),
		.HBMC_CH5_HBM_TDQSS_MAX_PS                        (200),
		.HBMC_CH5_HBM_TDQSS_MIN_PS                        (200),
		.HBMC_CH5_HBM_TDQSCK_MAX_PS                       (3500),
		.HBMC_CH5_HBM_TDQSQ_MAX_PS                        (105),
		.HBMC_CH5_HBM_PARAM_TYPE                          ("hbm_param_min"),
		.HBMC_CH5_RFSH_POLICY                             ("rfsh_policy_flexible"),
		.HBMC_CH5_HBM_TREFI                               (2340),
		.HBMC_CH5_HBM_TCKSRE                              (6),
		.HBMC_CH5_HBM_TCKSRX                              (6),
		.HBMC_CH5_HBM_TXS                                 (162),
		.HBMC_CH5_HBM_TCKESR                              (6),
		.HBMC_CH5_HBM_TXP                                 (5),
		.HBMC_CH5_HBM_TPD                                 (5),
		.HBMC_CH5_CFG_HBMC_MODES                          ("prod"),
		.HBMC_CH5_CORE_CLOCK_MHZ                          (300),
		.HBMC_CH5_CORE_CLOCK_PS                           (1000),
		.HBMC_CH5_CFG_CHANNEL_EN                          ("enable"),
		.HBMC_CH5_CFG_TR_ORDER                            ("enable"),
		.HBMC_CH5_CFG_ADDR_ORDER                          ("bgrbc"),
		.HBMC_CH5_CFG_USER_RD_AP_POL                      ("rdap_hint"),
		.HBMC_CH5_CFG_USER_WR_AP_POL                      ("wrap_hint"),
		.HBMC_CH5_CFG_RID_DEPENDENCY_EN                   ("enable"),
		.HBMC_CH5_CFG_HBMC_TX_BYPASS                      ("disable"),
		.HBMC_CH5_CFG_HBMC_RX_BYPASS                      ("disable"),
		.HBMC_CH5_CFG_P2HPEMUEN                           (2),
		.HBMC_CH5_CFG_RMPTREN                             ("disable"),
		.HBMC_CH5_CFG_RMPTRENDLY00                        (6),
		.HBMC_CH5_CFG_RMPTRENDLY01                        (7),
		.HBMC_CH5_CFG_RMPTRENDLY02                        (8),
		.HBMC_CH5_CFG_RMPTRENDLY03                        (9),
		.HBMC_CH5_CFG_RMPTRENDLY04                        (10),
		.HBMC_CH5_HBM_TRAS                                (20),
		.HBMC_CH5_HBM_TRRDS                               (3),
		.HBMC_CH5_HBMC_OFFSET                             (1),
		.HBMC_CH5_HBMC_RATE_VALUE                         ("rate_half"),
		.HBMC_CH5_HBM_CLOCK_MHZ                           (600),
		.HBMC_CH5_HBM_CLOCK_PS                            (1666),
		.HBMC_CH5_RFSH_MODE                               ("rfsh_mode_ctrl_rfsh_all"),
		.HBMC_CH5_HBM_TRFC                                (210),
		.HBMC_CH5_DATA_WIDTH_MODE                         ("data_width_mode_sdw"),
		.HBMC_CH5_EXT_RDIE                                (2),
		.HBMC_CH5_TEMP000_THROTTLE_RATIO                  (0),
		.HBMC_CH5_TEMP001_THROTTLE_RATIO                  (0),
		.HBMC_CH5_TEMP010_THROTTLE_RATIO                  (0),
		.HBMC_CH5_TEMP011_THROTTLE_RATIO                  (0),
		.HBMC_CH5_TEMP100_THROTTLE_RATIO                  (0),
		.HBMC_CH5_TEMP101_THROTTLE_RATIO                  (0),
		.HBMC_CH5_TEMP110_THROTTLE_RATIO                  (0),
		.HBMC_CH5_TEMP111_THROTTLE_RATIO                  (0),
		.HBMC_CH5_CORE_CLK_MODE                           ("hr_asyn"),
		.HBMC_CH5_CFG_HBMC_BL                             (4),
		.HBMC_CH5_USER_STRB_EN                            ("enable"),
		.HBMC_CH5_CFG_TBHMCRSTMIN                         (0),
		.HBMC_CH5_CFG_RESET_COUNT                         (0),
		.HBMC_CH5_CFG_HBMC_PC0_WL                         (6),
		.HBMC_CH5_CFG_HBMC_PC0_RL                         (15),
		.HBMC_CH5_CFG_HBMC_PC1_WL                         (6),
		.HBMC_CH5_CFG_HBMC_PC1_RL                         (15),
		.HBMC_CH5_CFG_POSTCAL_STATE                       ("sr"),
		.HBMC_CH5_CFG_UFIC2PDLY                           (0),
		.HBMC_CH5_CFG_UFIP2CDLY                           (0),
		.HBMC_CH5_CFG_CB_RMW_RD_IDLE_WAIT_EN              ("disable"),
		.HBMC_CH5_CFG_CB_RMW_FIFO_EMPTY_WAIT_EN           ("disable"),
		.HBMC_CH5_CFG_SB_POST_UPDATE_CYCLE                (1),
		.HBMC_CH5_CFG_HBMC_PC0_SCR_SEEDSEL                (0),
		.HBMC_CH5_CFG_HBMC_PC0_SCR_EN                     ("enable"),
		.HBMC_CH5_CFG_HBMC_RFSH_PB_BURST_GAP              (1),
		.HBMC_CH5_CFG_HBMC_PC1_SCR_SEEDSEL                (0),
		.HBMC_CH5_CFG_HBMC_PC1_SCR_EN                     ("enable"),
		.HBMC_CH5_CFG_FLIP_MODE                           ("disable"),
		.HBMC_CH5_CFG_DENSITY                             (3),
		.HBMC_CH5_CFG_USER_DATA_WIDTH                     ("b256"),
		.HBMC_CH5_CFG_CB_BREADY_BYPASS_EN                 ("disable"),
		.HBMC_CH5_CFG_CB_RREADY_BYPASS_EN                 ("disable"),
		.HBMC_CH5_CFG_CB_RVALID_GATE_EN                   ("enable"),
		.HBMC_CH5_CFG_CB_BVALID_GATE_EN                   ("enable"),
		.HBMC_CH5_CFG_ADDRCHNLMUXEN                       ("disable"),
		.HBMC_CH5_CFG_AXI_CMD_DEMUX_EN                    ("disable"),
		.HBMC_CH5_CFG_PC0_MAJOR_MODE_UPDATE_CNT           ("disable"),
		.HBMC_CH5_CFG_PC1_MAJOR_MODE_UPDATE_CNT           ("disable"),
		.HBMC_CH5_CFG_RCQ_AGE_LIMIT                       (32),
		.HBMC_CH5_CFG_RDB_RSVD_ENTRY                      (0),
		.HBMC_CH5_CFG_RD_STRB_IDLE_THRESHOLD              (50),
		.HBMC_CH5_CFG_PC0_CMD2RDEN                        (12),
		.HBMC_CH5_CFG_PC1_CMD2RDEN                        (13),
		.HBMC_CH5_CFG_PC0_CMD2RDIE                        (10),
		.HBMC_CH5_CFG_PC1_CMD2RDIE                        (11),
		.HBMC_CH5_CFG_PC0_DATAOE_ON                       (2),
		.HBMC_CH5_CFG_PC1_DATAOE_ON                       (2),
		.HBMC_CH5_CFG_PC0_CMD2DATA                        (3),
		.HBMC_CH5_CFG_PC1_CMD2DATA                        (4),
		.HBMC_CH5_CFG_WDB_RSVD_ENTRY                      (32),
		.HBMC_CH5_CFG_AWDB_RSVD_ENTRY                     (32),
		.HBMC_CH5_CFG_WCQ_BURST_THRESHOLD                 (64),
		.HBMC_CH5_CFG_WCQ_LWM                             (8),
		.HBMC_CH5_CFG_WCQ_TIMEOUT_THRESHOLD               (64),
		.HBMC_CH5_CFG_PC0_MAJOR_MODE_UPDATE_CFG           ("disable"),
		.HBMC_CH5_CFG_PC1_MAJOR_MODE_UPDATE_CFG           ("disable"),
		.HBMC_CH5_CFG_PC0_CMD2WDQS                        (2),
		.HBMC_CH5_CFG_PC1_CMD2WDQS                        (3),
		.HBMC_CH5_CFG_PC0_CMD2DATAOE                      (3),
		.HBMC_CH5_CFG_PC1_CMD2DATAOE                      (4),
		.HBMC_CH5_CFG_CB_MAJOR_MODE_EN                    ("enable"),
		.HBMC_CH5_CFG_CB_STRICT_MAJOR_MODE_EN             ("enable"),
		.HBMC_CH5_CFG_RFSH_ALL_EN                         ("enable"),
		.HBMC_CH5_CFG_RFSH_PB_EN                          ("disable"),
		.HBMC_CH5_CFG_USER_RFSH_PB_EN                     ("enable"),
		.HBMC_CH5_CFG_RFSH_AB_TO_PB_EN                    ("enable"),
		.HBMC_CH5_CFG_CB_TEMP_RFSH_FILTER_EN              ("disable"),
		.HBMC_CH5_CFG_RFSH_POST_LOWER_LIMIT               (1),
		.HBMC_CH5_CFG_RFSH_PRE_UPPER_LIMIT                (1),
		.HBMC_CH5_CFG_RFSH_IDLE_THRESHOLD                 (20),
		.HBMC_CH5_CFG_TEMP000_NO_OF_RFSH_BEFORE_SELF_RFSH (1),
		.HBMC_CH5_CFG_TEMP001_NO_OF_RFSH_BEFORE_SELF_RFSH (1),
		.HBMC_CH5_CFG_TEMP011_NO_OF_RFSH_BEFORE_SELF_RFSH (1),
		.HBMC_CH5_CFG_TEMP010_NO_OF_RFSH_BEFORE_SELF_RFSH (2),
		.HBMC_CH5_CFG_TEMP110_NO_OF_RFSH_BEFORE_SELF_RFSH (4),
		.HBMC_CH5_CFG_TEMP111_NO_OF_RFSH_BEFORE_SELF_RFSH (1),
		.HBMC_CH5_CFG_TEMP101_NO_OF_RFSH_BEFORE_SELF_RFSH (1),
		.HBMC_CH5_CFG_TEMP100_NO_OF_RFSH_BEFORE_SELF_RFSH (1),
		.HBMC_CH5_CFG_TEMP_FILTER_EN                      ("enable"),
		.HBMC_CH5_CFG_CATTRIP_FILTER_EN                   ("enable"),
		.HBMC_CH5_CFG_CB_BYPASS_CATTRIP                   ("disable"),
		.HBMC_CH5_CFG_CB_TEMP_SELECT                      ("disable"),
		.HBMC_CH5_CFG_F2C_TEMP_UPDATE                     ("disable"),
		.HBMC_CH5_CFG_F2C_TEMP                            (3),
		.HBMC_CH5_CFG_ADDR_SCR                            ("none"),
		.HBMC_CH5_CFG_ADDR_SPRD                           ("disable"),
		.HBMC_CH5_CFG_CB_RD_COL_ARB_PRIORITY_EN           ("enable"),
		.HBMC_CH5_CFG_CB_WR_COL_ARB_PRIORITY_EN           ("enable"),
		.HBMC_CH5_CFG_CB_RD_ROW_ARB_PRIORITY_EN           ("enable"),
		.HBMC_CH5_CFG_CB_WR_ROW_ARB_PRIORITY_EN           ("enable"),
		.HBMC_CH5_CFG_CB_DEPENDENCY_MODE                  ("enable"),
		.HBMC_CH5_CFG_MECC_EN                             ("disable"),
		.HBMC_CH5_CFG_CA_PAR_EN                           ("enable"),
		.HBMC_CH5_CFG_WR_PAR_EN                           ("enable"),
		.HBMC_CH5_CFG_RD_PAR_EN                           ("enable"),
		.HBMC_CH5_CFG_WR_DM_EN                            ("disable"),
		.HBMC_CH5_CFG_RD_DM_EN                            ("disable"),
		.HBMC_CH5_CFG_POWER_DOWN_EN                       ("enable"),
		.HBMC_CH5_CFG_POWER_DOWN_CK_DIS_EN                ("disable"),
		.HBMC_CH5_CFG_AUTO_RD_POWER_DOWN_EXIT_EN          ("enable"),
		.HBMC_CH5_CFG_AUTO_WR_POWER_DOWN_EXIT_EN          ("enable"),
		.HBMC_CH5_CFG_AUTO_RD_SELF_RFSH_EXIT_EN           ("enable"),
		.HBMC_CH5_CFG_AUTO_WR_SELF_RFSH_EXIT_EN           ("enable"),
		.HBMC_CH5_CFG_SELF_RFSH_CK_DIS_EN                 ("enable"),
		.HBMC_CH5_CFG_SELF_RFSH_EN                        ("enable"),
		.HBMC_CH5_H0_FR_CLK_STCFG_EN                      ("disable"),
		.HBMC_CH5_CFG_SB_PRE_STALL_CYCLE                  (3),
		.HBMC_CH5_CFG_SB_POST_STALL_CYCLE                 (1),
		.HBMC_CH5_CFG_HBMC_CORECLK_PROG_DELAY1            (255),
		.HBMC_CH5_CFG_HBMC_CORECLK_PROG_DELAY2            (0),
		.HBMC_CH5_CFG_HBMCPTRENSYNCSEL                    ("enable"),
		.HBMC_CH5_CFG_UB48MODE                            ("enable"),
		.HBMC_CH5_CFG_HBMCH2CPTRSTART                     (6),
		.HBMC_CH5_CFG_DWORD_LPBKEN                        ("disable"),
		.HBMC_CH5_CFG_AWORD_LPBEN                         ("disable"),
		.HBMC_CH5_CFG_DWORD_LPBKSEL                       ("disable"),
		.HBMC_CH5_CFG_AWORD_LPBKSEL                       (0),
		.HBMC_CH5_CFG_OBSGRPSEL                           (0),
		.HBMC_CH5_CFG_OBSSIGSEL                           (0),
		.HBMC_CH5_CFG_MEM_MCE                             ("disable"),
		.HBMC_CH5_CFG_MEM_WA                              (6),
		.HBMC_CH5_CFG_MEM_RMCE                            (1),
		.HBMC_CH5_CFG_MEM_WMCE                            (1),
		.HBMC_CH5_CFG_MEM_WPULSE                          (2),
		.HBMC_CH5_CFG_SRAM_ECC_ENABLE                     ("enable"),
		.HBMC_CH5_CFG_PC0_SRAM_INJD                       ("disable"),
		.HBMC_CH5_CFG_PC0_SRAM_INJS                       ("disable"),
		.HBMC_CH5_CFG_PC1_SRAM_INJD                       ("disable"),
		.HBMC_CH5_CFG_PC1_SRAM_INJS                       ("disable"),
		.HBMC_CH5_CFG_SRAM_SERRINTEN                      ("enable"),
		.HBMC_CH5_CFG_SRAM_SLVERR_DIS                     ("disable"),
		.HBMC_CH5_MMR_USER_TRIGGER                        ("disable"),
		.HBMC_CH5_MMR_USER_RDWR                           ("disable"),
		.HBMC_CH5_MMR_USER_BYTEENABLE                     (0),
		.HBMC_CH5_MMR_USER_ADDR                           (0),
		.HBMC_CH5_MMR_USER_WRDATA                         (0),
		.HBMC_CH5_MMR_SBOWN_REQ                           ("disable"),
		.HBMC_CH5_MMR_SBOWN_DELAY                         (100),
		.HBMC_CH5_CFG_SKETCH1                             (2),
		.HBMC_CH5_CFG_SKETCH2                             (0),
		.HBMC_CH5_CFG_TST_PATTERN                         (0),
		.HBMC_CH5_CFG_TST_START_ADDR                      (0),
		.HBMC_CH5_CFG_TST_BURST_LEN                       (0),
		.HBMC_CH5_CFG_TST_GEN_CMD                         (0),
		.HBMC_CH5_CFG_AXI_TRAFFIC_SEL                     ("disable"),
		.HBMC_CH5_CFG_TST_PC_SEL                          ("disable"),
		.HBMC_CH5_CFG_TST_TRIGGER                         ("disable"),
		.HBMC_CH5_CFG_TST_TIME_OUT                        (0),
		.HBMC_CH5_HBMC_RATE                               (2),
		.HBMC_CH5_HBM_TRFCSB                              (96),
		.HBMC_CH5_HBM_TRREFD                              (5),
		.HBMC_CH5_UFI_TRDEN                               (20),
		.HBMC_CH5_CFG_HBMC_PC0_WTP                        (8),
		.HBMC_CH5_CFG_HBMC_PC1_WTP                        (8),
		.HBMC_CH5_CFG_HBMC_PC0_ITP                        (14),
		.HBMC_CH5_CFG_HBMC_PC1_ITP                        (14),
		.HBMC_CH5_CFG_HBMC_PC0_RTP                        (2),
		.HBMC_CH5_CFG_HBMC_PC1_RTP                        (2),
		.HBMC_CH5_CFG_PAR_LAT                             (1),
		.HBMC_CH5_CFG_HBMC_PC0_FIW_SHORT                  (3),
		.HBMC_CH5_CFG_HBMC_PC0_ATI                        (9),
		.HBMC_CH5_CFG_HBMC_PC0_ITI                        (14),
		.HBMC_CH5_CFG_HBMC_PC0_ATA                        (14),
		.HBMC_CH5_CFG_HBMC_PC0_ITA                        (18),
		.HBMC_CH5_CFG_HBMC_PC0_ITA_DLY                    (4),
		.HBMC_CH5_CFG_HBMC_PC0_ATP                        (10),
		.HBMC_CH5_CFG_HBMC_PC0_ATR                        (5),
		.HBMC_CH5_CFG_HBMC_PC0_ITR                        (9),
		.HBMC_CH5_CFG_HBMC_PC0_ATW                        (5),
		.HBMC_CH5_CFG_HBMC_PC0_ITW                        (7),
		.HBMC_CH5_CFG_HBMC_PC0_PTA                        (3),
		.HBMC_CH5_CFG_HBMC_PC0_WTI                        (8),
		.HBMC_CH5_CFG_HBMC_PC0_RTA                        (6),
		.HBMC_CH5_CFG_HBMC_PC0_WTA                        (12),
		.HBMC_CH5_CFG_HBMC_PC0_ATA_DBG                    (1),
		.HBMC_CH5_CFG_HBMC_PC0_ATI_DBG                    (1),
		.HBMC_CH5_CFG_HBMC_PC0_ITA_DBG                    (5),
		.HBMC_CH5_CFG_HBMC_PC0_ITI_DBG                    (1),
		.HBMC_CH5_CFG_HBMC_PC0_RTRWTW_DBG                 (0),
		.HBMC_CH5_CFG_HBMC_PC0_WTR_DBG                    (5),
		.HBMC_CH5_CFG_HBMC_PC0_ATA_SBG                    (1),
		.HBMC_CH5_CFG_HBMC_PC0_ATI_SBG                    (1),
		.HBMC_CH5_CFG_HBMC_PC0_ITA_SBG                    (5),
		.HBMC_CH5_CFG_HBMC_PC0_ITI_SBG                    (1),
		.HBMC_CH5_CFG_HBMC_PC0_WTR_SBG                    (7),
		.HBMC_CH5_CFG_HBMC_PC0_RTR_DSID                   (1),
		.HBMC_CH5_CFG_HBMC_POWER_DOWN_TO_CK_DIS           (4),
		.HBMC_CH5_CFG_HBMC_CK_DIS_TO_POWER_DOWN           (4),
		.HBMC_CH5_CFG_HBMC_MIN_POWER_DOWN                 (4),
		.HBMC_CH5_CFG_HBMC_POWER_DOWN_TO_VALID            (4),
		.HBMC_CH5_CFG_HBMC_SELF_RFSH_TO_CK_DIS            (4),
		.HBMC_CH5_CFG_HBMC_CK_DIS_TO_SELF_RFSH            (4),
		.HBMC_CH5_CFG_HBMC_SELF_RFSH_TO_VALID             (82),
		.HBMC_CH5_CFG_HBMC_MIN_SELF_RFSH                  (4),
		.HBMC_CH5_CFG_HBMC_RFSH_AB_TO_VALID               (106),
		.HBMC_CH5_CFG_HBMC_RFSH_PB_TO_RFSH_PB             (4),
		.HBMC_CH5_CFG_HBMC_RFSH_PB_TO_VALID               (49),
		.HBMC_CH5_CFG_HBMC_TEMP000_RFSH_PERIOD            (4678),
		.HBMC_CH5_CFG_HBMC_TEMP001_RFSH_PERIOD            (2338),
		.HBMC_CH5_CFG_HBMC_TEMP011_RFSH_PERIOD            (1168),
		.HBMC_CH5_CFG_HBMC_TEMP010_RFSH_PERIOD            (583),
		.HBMC_CH5_CFG_HBMC_TEMP110_RFSH_PERIOD            (290),
		.HBMC_CH5_CFG_HBMC_TEMP111_RFSH_PERIOD            (1168),
		.HBMC_CH5_CFG_HBMC_TEMP101_RFSH_PERIOD            (1168),
		.HBMC_CH5_CFG_HBMC_TEMP100_RFSH_PERIOD            (1168),
		.HBMC_CH5_CFG_HBMC_RFSH_PB_TO_RFSH_PB_OFFSET      (2),
		.HBMC_CH5_CFG_HBMC_PCH_PB_TO_VALID                (6),
		.HBMC_CH5_CFG_HBMC_PCH_AB_TO_VALID                (6),
		.HBMC_CH5_CFG_HBMC_PC1_FIW_SHORT                  (3),
		.HBMC_CH5_CFG_HBMC_PC1_ATI                        (9),
		.HBMC_CH5_CFG_HBMC_PC1_ITI                        (14),
		.HBMC_CH5_CFG_HBMC_PC1_ATA                        (14),
		.HBMC_CH5_CFG_HBMC_PC1_ITA                        (18),
		.HBMC_CH5_CFG_HBMC_PC1_ITA_DLY                    (4),
		.HBMC_CH5_CFG_HBMC_PC1_ATP                        (10),
		.HBMC_CH5_CFG_HBMC_PC1_ATR                        (5),
		.HBMC_CH5_CFG_HBMC_PC1_ITR                        (8),
		.HBMC_CH5_CFG_HBMC_PC1_ATW                        (5),
		.HBMC_CH5_CFG_HBMC_PC1_ITW                        (7),
		.HBMC_CH5_CFG_HBMC_PC1_PTA                        (3),
		.HBMC_CH5_CFG_HBMC_PC1_WTI                        (8),
		.HBMC_CH5_CFG_HBMC_PC1_RTA                        (6),
		.HBMC_CH5_CFG_HBMC_PC1_WTA                        (13),
		.HBMC_CH5_CFG_HBMC_PC1_ATA_DBG                    (1),
		.HBMC_CH5_CFG_HBMC_PC1_ATI_DBG                    (1),
		.HBMC_CH5_CFG_HBMC_PC1_ITA_DBG                    (5),
		.HBMC_CH5_CFG_HBMC_PC1_ITI_DBG                    (1),
		.HBMC_CH5_CFG_HBMC_PC1_RTRWTW_DBG                 (0),
		.HBMC_CH5_CFG_HBMC_PC1_WTR_DBG                    (5),
		.HBMC_CH5_CFG_HBMC_PC1_ATA_SBG                    (1),
		.HBMC_CH5_CFG_HBMC_PC1_ATI_SBG                    (1),
		.HBMC_CH5_CFG_HBMC_PC1_ITA_SBG                    (5),
		.HBMC_CH5_CFG_HBMC_PC1_ITI_SBG                    (1),
		.HBMC_CH5_CFG_HBMC_PC1_WTR_SBG                    (7),
		.HBMC_CH5_CFG_HBMC_PC1_RTR_DSID                   (1),
		.HBMC_CH5_CFG_PSEUDO_BL8_EN                       ("enable"),
		.HBMC_CH5_CFG_CB_WREADY_GATE_EN                   ("disable"),
		.HBMC_CH5_CFG_PC0_RDEN_ON                         (5),
		.HBMC_CH5_CFG_PC1_RDEN_ON                         (5),
		.HBMC_CH5_CFG_PC0_RDIE_ON                         (9),
		.HBMC_CH5_CFG_PC1_RDIE_ON                         (9),
		.HBMC_CH5_CFG_PC0_CMD2RD                          (27),
		.HBMC_CH5_CFG_PC1_CMD2RD                          (28),
		.HBMC_CH5_CFG_PC0_CMD2RDPAR                       (28),
		.HBMC_CH5_CFG_PC1_CMD2RDPAR                       (29),
		.HBMC_CH5_CFG_PC0_WDQS_ON                         (4),
		.HBMC_CH5_CFG_PC1_WDQS_ON                         (4),
		.HBMC_CH5_CFG_WCQ_HWM                             (24),
		.HBMC_CH5_CFG_RFSH_POST_UPPER_LIMIT               (1),
		.HBMC_CH5_CFG_THROTTLE_EN                         ("disable"),
		.HBMC_CH5_CFG_TEMP000_ON_TIME                     (0),
		.HBMC_CH5_CFG_TEMP001_ON_TIME                     (0),
		.HBMC_CH5_CFG_TEMP010_ON_TIME                     (0),
		.HBMC_CH5_CFG_TEMP011_ON_TIME                     (0),
		.HBMC_CH5_CFG_TEMP100_ON_TIME                     (0),
		.HBMC_CH5_CFG_TEMP101_ON_TIME                     (0),
		.HBMC_CH5_CFG_TEMP110_ON_TIME                     (0),
		.HBMC_CH5_CFG_TEMP111_ON_TIME                     (0),
		.HBMC_CH5_CFG_TEMP000_OFF_TIME                    (255),
		.HBMC_CH5_CFG_TEMP001_OFF_TIME                    (255),
		.HBMC_CH5_CFG_TEMP010_OFF_TIME                    (255),
		.HBMC_CH5_CFG_TEMP011_OFF_TIME                    (255),
		.HBMC_CH5_CFG_TEMP100_OFF_TIME                    (255),
		.HBMC_CH5_CFG_TEMP101_OFF_TIME                    (255),
		.HBMC_CH5_CFG_TEMP110_OFF_TIME                    (255),
		.HBMC_CH5_CFG_TEMP111_OFF_TIME                    (255),
		.HBMC_CH5_CFG_RMW_EN                              ("enable"),
		.HBMC_CH5_CFG_POWER_DOWN_IDLE_THRESHOLD           (1),
		.HBMC_CH5_CFG_SB_PRE_UPDATE_CYCLE                 (8),
		.HBMC_CH5_CFG_HBMCC2HPTRDLY                       (0),
		.HBMC_CH5_HBM_TCCDL_BL4                           (4),
		.HBMC_CH5_HBM_TRTW                                (12),
		.HBMC_CH5_HBM_TFAW                                (12),
		.HBMC_CH5_HBM_TEAW                                (24),
		.HBMC_CH5_CFG_HBMC_PC0_FAW                        (3),
		.HBMC_CH5_CFG_HBMC_PC0_RTI                        (4),
		.HBMC_CH5_CFG_HBMC_PC0_RTW                        (10),
		.HBMC_CH5_CFG_HBMC_PC0_RTRWTW_SBG                 (1),
		.HBMC_CH5_CFG_HBMC_PC1_FAW                        (3),
		.HBMC_CH5_CFG_HBMC_PC1_RTI                        (5),
		.HBMC_CH5_CFG_HBMC_PC1_RTW                        (10),
		.HBMC_CH5_CFG_HBMC_PC1_RTRWTW_SBG                 (1),
		.HBMC_CH5_CFG_AWFIFO_RSVD_ENTRY                   (24),
		.HBMC_CH5_CFG_ARFIFO_RSVD_ENTRY                   (24),
		.HBMC_CH6_HBM_DEVICE                              ("hbm_device_8gb_8hi"),
		.HBMC_CH6_HBM_TRRDL                               (3),
		.HBMC_CH6_HBM_TRCDRD                              (9),
		.HBMC_CH6_HBM_TRCDWR                              (6),
		.HBMC_CH6_HBM_TRTPL_BL4                           (5),
		.HBMC_CH6_HBM_TRTPS_BL4                           (4),
		.HBMC_CH6_HBM_TRP                                 (9),
		.HBMC_CH6_HBM_TCCDS_BL4                           (2),
		.HBMC_CH6_HBM_TCCDR                               (3),
		.HBMC_CH6_HBM_TWR                                 (10),
		.HBMC_CH6_HBM_TWTRL                               (6),
		.HBMC_CH6_HBM_TWTRS                               (3),
		.HBMC_CH6_HBM_TDQSS_MAX_PS                        (200),
		.HBMC_CH6_HBM_TDQSS_MIN_PS                        (200),
		.HBMC_CH6_HBM_TDQSCK_MAX_PS                       (3500),
		.HBMC_CH6_HBM_TDQSQ_MAX_PS                        (105),
		.HBMC_CH6_HBM_PARAM_TYPE                          ("hbm_param_min"),
		.HBMC_CH6_RFSH_POLICY                             ("rfsh_policy_flexible"),
		.HBMC_CH6_HBM_TREFI                               (2340),
		.HBMC_CH6_HBM_TCKSRE                              (6),
		.HBMC_CH6_HBM_TCKSRX                              (6),
		.HBMC_CH6_HBM_TXS                                 (162),
		.HBMC_CH6_HBM_TCKESR                              (6),
		.HBMC_CH6_HBM_TXP                                 (5),
		.HBMC_CH6_HBM_TPD                                 (5),
		.HBMC_CH6_CFG_HBMC_MODES                          ("prod"),
		.HBMC_CH6_CORE_CLOCK_MHZ                          (300),
		.HBMC_CH6_CORE_CLOCK_PS                           (1000),
		.HBMC_CH6_CFG_CHANNEL_EN                          ("enable"),
		.HBMC_CH6_CFG_TR_ORDER                            ("enable"),
		.HBMC_CH6_CFG_ADDR_ORDER                          ("bgrbc"),
		.HBMC_CH6_CFG_USER_RD_AP_POL                      ("rdap_hint"),
		.HBMC_CH6_CFG_USER_WR_AP_POL                      ("wrap_hint"),
		.HBMC_CH6_CFG_RID_DEPENDENCY_EN                   ("enable"),
		.HBMC_CH6_CFG_HBMC_TX_BYPASS                      ("disable"),
		.HBMC_CH6_CFG_HBMC_RX_BYPASS                      ("disable"),
		.HBMC_CH6_CFG_P2HPEMUEN                           (2),
		.HBMC_CH6_CFG_RMPTREN                             ("disable"),
		.HBMC_CH6_CFG_RMPTRENDLY00                        (9),
		.HBMC_CH6_CFG_RMPTRENDLY01                        (8),
		.HBMC_CH6_CFG_RMPTRENDLY02                        (7),
		.HBMC_CH6_CFG_RMPTRENDLY03                        (6),
		.HBMC_CH6_CFG_RMPTRENDLY04                        (5),
		.HBMC_CH6_HBM_TRAS                                (20),
		.HBMC_CH6_HBM_TRRDS                               (3),
		.HBMC_CH6_HBMC_OFFSET                             (1),
		.HBMC_CH6_HBMC_RATE_VALUE                         ("rate_half"),
		.HBMC_CH6_HBM_CLOCK_MHZ                           (600),
		.HBMC_CH6_HBM_CLOCK_PS                            (1666),
		.HBMC_CH6_RFSH_MODE                               ("rfsh_mode_ctrl_rfsh_all"),
		.HBMC_CH6_HBM_TRFC                                (210),
		.HBMC_CH6_DATA_WIDTH_MODE                         ("data_width_mode_sdw"),
		.HBMC_CH6_EXT_RDIE                                (2),
		.HBMC_CH6_TEMP000_THROTTLE_RATIO                  (0),
		.HBMC_CH6_TEMP001_THROTTLE_RATIO                  (0),
		.HBMC_CH6_TEMP010_THROTTLE_RATIO                  (0),
		.HBMC_CH6_TEMP011_THROTTLE_RATIO                  (0),
		.HBMC_CH6_TEMP100_THROTTLE_RATIO                  (0),
		.HBMC_CH6_TEMP101_THROTTLE_RATIO                  (0),
		.HBMC_CH6_TEMP110_THROTTLE_RATIO                  (0),
		.HBMC_CH6_TEMP111_THROTTLE_RATIO                  (0),
		.HBMC_CH6_CORE_CLK_MODE                           ("hr_asyn"),
		.HBMC_CH6_CFG_HBMC_BL                             (4),
		.HBMC_CH6_USER_STRB_EN                            ("enable"),
		.HBMC_CH6_CFG_TBHMCRSTMIN                         (0),
		.HBMC_CH6_CFG_RESET_COUNT                         (0),
		.HBMC_CH6_CFG_HBMC_PC0_WL                         (6),
		.HBMC_CH6_CFG_HBMC_PC0_RL                         (15),
		.HBMC_CH6_CFG_HBMC_PC1_WL                         (6),
		.HBMC_CH6_CFG_HBMC_PC1_RL                         (15),
		.HBMC_CH6_CFG_POSTCAL_STATE                       ("sr"),
		.HBMC_CH6_CFG_UFIC2PDLY                           (0),
		.HBMC_CH6_CFG_UFIP2CDLY                           (0),
		.HBMC_CH6_CFG_CB_RMW_RD_IDLE_WAIT_EN              ("disable"),
		.HBMC_CH6_CFG_CB_RMW_FIFO_EMPTY_WAIT_EN           ("disable"),
		.HBMC_CH6_CFG_SB_POST_UPDATE_CYCLE                (1),
		.HBMC_CH6_CFG_HBMC_PC0_SCR_SEEDSEL                (0),
		.HBMC_CH6_CFG_HBMC_PC0_SCR_EN                     ("enable"),
		.HBMC_CH6_CFG_HBMC_RFSH_PB_BURST_GAP              (1),
		.HBMC_CH6_CFG_HBMC_PC1_SCR_SEEDSEL                (0),
		.HBMC_CH6_CFG_HBMC_PC1_SCR_EN                     ("enable"),
		.HBMC_CH6_CFG_FLIP_MODE                           ("disable"),
		.HBMC_CH6_CFG_DENSITY                             (3),
		.HBMC_CH6_CFG_USER_DATA_WIDTH                     ("b256"),
		.HBMC_CH6_CFG_CB_BREADY_BYPASS_EN                 ("disable"),
		.HBMC_CH6_CFG_CB_RREADY_BYPASS_EN                 ("disable"),
		.HBMC_CH6_CFG_CB_RVALID_GATE_EN                   ("enable"),
		.HBMC_CH6_CFG_CB_BVALID_GATE_EN                   ("enable"),
		.HBMC_CH6_CFG_ADDRCHNLMUXEN                       ("disable"),
		.HBMC_CH6_CFG_AXI_CMD_DEMUX_EN                    ("disable"),
		.HBMC_CH6_CFG_PC0_MAJOR_MODE_UPDATE_CNT           ("disable"),
		.HBMC_CH6_CFG_PC1_MAJOR_MODE_UPDATE_CNT           ("disable"),
		.HBMC_CH6_CFG_RCQ_AGE_LIMIT                       (32),
		.HBMC_CH6_CFG_RDB_RSVD_ENTRY                      (0),
		.HBMC_CH6_CFG_RD_STRB_IDLE_THRESHOLD              (50),
		.HBMC_CH6_CFG_PC0_CMD2RDEN                        (12),
		.HBMC_CH6_CFG_PC1_CMD2RDEN                        (13),
		.HBMC_CH6_CFG_PC0_CMD2RDIE                        (10),
		.HBMC_CH6_CFG_PC1_CMD2RDIE                        (11),
		.HBMC_CH6_CFG_PC0_DATAOE_ON                       (2),
		.HBMC_CH6_CFG_PC1_DATAOE_ON                       (2),
		.HBMC_CH6_CFG_PC0_CMD2DATA                        (3),
		.HBMC_CH6_CFG_PC1_CMD2DATA                        (4),
		.HBMC_CH6_CFG_WDB_RSVD_ENTRY                      (32),
		.HBMC_CH6_CFG_AWDB_RSVD_ENTRY                     (32),
		.HBMC_CH6_CFG_WCQ_BURST_THRESHOLD                 (64),
		.HBMC_CH6_CFG_WCQ_LWM                             (8),
		.HBMC_CH6_CFG_WCQ_TIMEOUT_THRESHOLD               (64),
		.HBMC_CH6_CFG_PC0_MAJOR_MODE_UPDATE_CFG           ("disable"),
		.HBMC_CH6_CFG_PC1_MAJOR_MODE_UPDATE_CFG           ("disable"),
		.HBMC_CH6_CFG_PC0_CMD2WDQS                        (2),
		.HBMC_CH6_CFG_PC1_CMD2WDQS                        (3),
		.HBMC_CH6_CFG_PC0_CMD2DATAOE                      (3),
		.HBMC_CH6_CFG_PC1_CMD2DATAOE                      (4),
		.HBMC_CH6_CFG_CB_MAJOR_MODE_EN                    ("enable"),
		.HBMC_CH6_CFG_CB_STRICT_MAJOR_MODE_EN             ("enable"),
		.HBMC_CH6_CFG_RFSH_ALL_EN                         ("enable"),
		.HBMC_CH6_CFG_RFSH_PB_EN                          ("disable"),
		.HBMC_CH6_CFG_USER_RFSH_PB_EN                     ("enable"),
		.HBMC_CH6_CFG_RFSH_AB_TO_PB_EN                    ("enable"),
		.HBMC_CH6_CFG_CB_TEMP_RFSH_FILTER_EN              ("disable"),
		.HBMC_CH6_CFG_RFSH_POST_LOWER_LIMIT               (1),
		.HBMC_CH6_CFG_RFSH_PRE_UPPER_LIMIT                (1),
		.HBMC_CH6_CFG_RFSH_IDLE_THRESHOLD                 (20),
		.HBMC_CH6_CFG_TEMP000_NO_OF_RFSH_BEFORE_SELF_RFSH (1),
		.HBMC_CH6_CFG_TEMP001_NO_OF_RFSH_BEFORE_SELF_RFSH (1),
		.HBMC_CH6_CFG_TEMP011_NO_OF_RFSH_BEFORE_SELF_RFSH (1),
		.HBMC_CH6_CFG_TEMP010_NO_OF_RFSH_BEFORE_SELF_RFSH (2),
		.HBMC_CH6_CFG_TEMP110_NO_OF_RFSH_BEFORE_SELF_RFSH (4),
		.HBMC_CH6_CFG_TEMP111_NO_OF_RFSH_BEFORE_SELF_RFSH (1),
		.HBMC_CH6_CFG_TEMP101_NO_OF_RFSH_BEFORE_SELF_RFSH (1),
		.HBMC_CH6_CFG_TEMP100_NO_OF_RFSH_BEFORE_SELF_RFSH (1),
		.HBMC_CH6_CFG_TEMP_FILTER_EN                      ("enable"),
		.HBMC_CH6_CFG_CATTRIP_FILTER_EN                   ("enable"),
		.HBMC_CH6_CFG_CB_BYPASS_CATTRIP                   ("disable"),
		.HBMC_CH6_CFG_CB_TEMP_SELECT                      ("disable"),
		.HBMC_CH6_CFG_F2C_TEMP_UPDATE                     ("disable"),
		.HBMC_CH6_CFG_F2C_TEMP                            (3),
		.HBMC_CH6_CFG_ADDR_SCR                            ("none"),
		.HBMC_CH6_CFG_ADDR_SPRD                           ("disable"),
		.HBMC_CH6_CFG_CB_RD_COL_ARB_PRIORITY_EN           ("enable"),
		.HBMC_CH6_CFG_CB_WR_COL_ARB_PRIORITY_EN           ("enable"),
		.HBMC_CH6_CFG_CB_RD_ROW_ARB_PRIORITY_EN           ("enable"),
		.HBMC_CH6_CFG_CB_WR_ROW_ARB_PRIORITY_EN           ("enable"),
		.HBMC_CH6_CFG_CB_DEPENDENCY_MODE                  ("enable"),
		.HBMC_CH6_CFG_MECC_EN                             ("disable"),
		.HBMC_CH6_CFG_CA_PAR_EN                           ("enable"),
		.HBMC_CH6_CFG_WR_PAR_EN                           ("enable"),
		.HBMC_CH6_CFG_RD_PAR_EN                           ("enable"),
		.HBMC_CH6_CFG_WR_DM_EN                            ("disable"),
		.HBMC_CH6_CFG_RD_DM_EN                            ("disable"),
		.HBMC_CH6_CFG_POWER_DOWN_EN                       ("enable"),
		.HBMC_CH6_CFG_POWER_DOWN_CK_DIS_EN                ("disable"),
		.HBMC_CH6_CFG_AUTO_RD_POWER_DOWN_EXIT_EN          ("enable"),
		.HBMC_CH6_CFG_AUTO_WR_POWER_DOWN_EXIT_EN          ("enable"),
		.HBMC_CH6_CFG_AUTO_RD_SELF_RFSH_EXIT_EN           ("enable"),
		.HBMC_CH6_CFG_AUTO_WR_SELF_RFSH_EXIT_EN           ("enable"),
		.HBMC_CH6_CFG_SELF_RFSH_CK_DIS_EN                 ("enable"),
		.HBMC_CH6_CFG_SELF_RFSH_EN                        ("enable"),
		.HBMC_CH6_H0_FR_CLK_STCFG_EN                      ("disable"),
		.HBMC_CH6_CFG_SB_PRE_STALL_CYCLE                  (3),
		.HBMC_CH6_CFG_SB_POST_STALL_CYCLE                 (1),
		.HBMC_CH6_CFG_HBMC_CORECLK_PROG_DELAY1            (63),
		.HBMC_CH6_CFG_HBMC_CORECLK_PROG_DELAY2            (0),
		.HBMC_CH6_CFG_HBMCPTRENSYNCSEL                    ("enable"),
		.HBMC_CH6_CFG_UB48MODE                            ("enable"),
		.HBMC_CH6_CFG_HBMCH2CPTRSTART                     (6),
		.HBMC_CH6_CFG_DWORD_LPBKEN                        ("disable"),
		.HBMC_CH6_CFG_AWORD_LPBEN                         ("disable"),
		.HBMC_CH6_CFG_DWORD_LPBKSEL                       ("disable"),
		.HBMC_CH6_CFG_AWORD_LPBKSEL                       (0),
		.HBMC_CH6_CFG_OBSGRPSEL                           (0),
		.HBMC_CH6_CFG_OBSSIGSEL                           (0),
		.HBMC_CH6_CFG_MEM_MCE                             ("disable"),
		.HBMC_CH6_CFG_MEM_WA                              (6),
		.HBMC_CH6_CFG_MEM_RMCE                            (1),
		.HBMC_CH6_CFG_MEM_WMCE                            (1),
		.HBMC_CH6_CFG_MEM_WPULSE                          (2),
		.HBMC_CH6_CFG_SRAM_ECC_ENABLE                     ("enable"),
		.HBMC_CH6_CFG_PC0_SRAM_INJD                       ("disable"),
		.HBMC_CH6_CFG_PC0_SRAM_INJS                       ("disable"),
		.HBMC_CH6_CFG_PC1_SRAM_INJD                       ("disable"),
		.HBMC_CH6_CFG_PC1_SRAM_INJS                       ("disable"),
		.HBMC_CH6_CFG_SRAM_SERRINTEN                      ("enable"),
		.HBMC_CH6_CFG_SRAM_SLVERR_DIS                     ("disable"),
		.HBMC_CH6_MMR_USER_TRIGGER                        ("disable"),
		.HBMC_CH6_MMR_USER_RDWR                           ("disable"),
		.HBMC_CH6_MMR_USER_BYTEENABLE                     (0),
		.HBMC_CH6_MMR_USER_ADDR                           (0),
		.HBMC_CH6_MMR_USER_WRDATA                         (0),
		.HBMC_CH6_MMR_SBOWN_REQ                           ("disable"),
		.HBMC_CH6_MMR_SBOWN_DELAY                         (100),
		.HBMC_CH6_CFG_SKETCH1                             (2),
		.HBMC_CH6_CFG_SKETCH2                             (0),
		.HBMC_CH6_CFG_TST_PATTERN                         (0),
		.HBMC_CH6_CFG_TST_START_ADDR                      (0),
		.HBMC_CH6_CFG_TST_BURST_LEN                       (0),
		.HBMC_CH6_CFG_TST_GEN_CMD                         (0),
		.HBMC_CH6_CFG_AXI_TRAFFIC_SEL                     ("disable"),
		.HBMC_CH6_CFG_TST_PC_SEL                          ("disable"),
		.HBMC_CH6_CFG_TST_TRIGGER                         ("disable"),
		.HBMC_CH6_CFG_TST_TIME_OUT                        (0),
		.HBMC_CH6_HBMC_RATE                               (2),
		.HBMC_CH6_HBM_TRFCSB                              (96),
		.HBMC_CH6_HBM_TRREFD                              (5),
		.HBMC_CH6_UFI_TRDEN                               (20),
		.HBMC_CH6_CFG_HBMC_PC0_WTP                        (8),
		.HBMC_CH6_CFG_HBMC_PC1_WTP                        (8),
		.HBMC_CH6_CFG_HBMC_PC0_ITP                        (14),
		.HBMC_CH6_CFG_HBMC_PC1_ITP                        (14),
		.HBMC_CH6_CFG_HBMC_PC0_RTP                        (2),
		.HBMC_CH6_CFG_HBMC_PC1_RTP                        (2),
		.HBMC_CH6_CFG_PAR_LAT                             (1),
		.HBMC_CH6_CFG_HBMC_PC0_FIW_SHORT                  (3),
		.HBMC_CH6_CFG_HBMC_PC0_ATI                        (9),
		.HBMC_CH6_CFG_HBMC_PC0_ITI                        (14),
		.HBMC_CH6_CFG_HBMC_PC0_ATA                        (14),
		.HBMC_CH6_CFG_HBMC_PC0_ITA                        (18),
		.HBMC_CH6_CFG_HBMC_PC0_ITA_DLY                    (4),
		.HBMC_CH6_CFG_HBMC_PC0_ATP                        (10),
		.HBMC_CH6_CFG_HBMC_PC0_ATR                        (5),
		.HBMC_CH6_CFG_HBMC_PC0_ITR                        (9),
		.HBMC_CH6_CFG_HBMC_PC0_ATW                        (5),
		.HBMC_CH6_CFG_HBMC_PC0_ITW                        (7),
		.HBMC_CH6_CFG_HBMC_PC0_PTA                        (3),
		.HBMC_CH6_CFG_HBMC_PC0_WTI                        (8),
		.HBMC_CH6_CFG_HBMC_PC0_RTA                        (6),
		.HBMC_CH6_CFG_HBMC_PC0_WTA                        (12),
		.HBMC_CH6_CFG_HBMC_PC0_ATA_DBG                    (1),
		.HBMC_CH6_CFG_HBMC_PC0_ATI_DBG                    (1),
		.HBMC_CH6_CFG_HBMC_PC0_ITA_DBG                    (5),
		.HBMC_CH6_CFG_HBMC_PC0_ITI_DBG                    (1),
		.HBMC_CH6_CFG_HBMC_PC0_RTRWTW_DBG                 (0),
		.HBMC_CH6_CFG_HBMC_PC0_WTR_DBG                    (5),
		.HBMC_CH6_CFG_HBMC_PC0_ATA_SBG                    (1),
		.HBMC_CH6_CFG_HBMC_PC0_ATI_SBG                    (1),
		.HBMC_CH6_CFG_HBMC_PC0_ITA_SBG                    (5),
		.HBMC_CH6_CFG_HBMC_PC0_ITI_SBG                    (1),
		.HBMC_CH6_CFG_HBMC_PC0_WTR_SBG                    (7),
		.HBMC_CH6_CFG_HBMC_PC0_RTR_DSID                   (1),
		.HBMC_CH6_CFG_HBMC_POWER_DOWN_TO_CK_DIS           (4),
		.HBMC_CH6_CFG_HBMC_CK_DIS_TO_POWER_DOWN           (4),
		.HBMC_CH6_CFG_HBMC_MIN_POWER_DOWN                 (4),
		.HBMC_CH6_CFG_HBMC_POWER_DOWN_TO_VALID            (4),
		.HBMC_CH6_CFG_HBMC_SELF_RFSH_TO_CK_DIS            (4),
		.HBMC_CH6_CFG_HBMC_CK_DIS_TO_SELF_RFSH            (4),
		.HBMC_CH6_CFG_HBMC_SELF_RFSH_TO_VALID             (82),
		.HBMC_CH6_CFG_HBMC_MIN_SELF_RFSH                  (4),
		.HBMC_CH6_CFG_HBMC_RFSH_AB_TO_VALID               (106),
		.HBMC_CH6_CFG_HBMC_RFSH_PB_TO_RFSH_PB             (4),
		.HBMC_CH6_CFG_HBMC_RFSH_PB_TO_VALID               (49),
		.HBMC_CH6_CFG_HBMC_TEMP000_RFSH_PERIOD            (4678),
		.HBMC_CH6_CFG_HBMC_TEMP001_RFSH_PERIOD            (2338),
		.HBMC_CH6_CFG_HBMC_TEMP011_RFSH_PERIOD            (1168),
		.HBMC_CH6_CFG_HBMC_TEMP010_RFSH_PERIOD            (583),
		.HBMC_CH6_CFG_HBMC_TEMP110_RFSH_PERIOD            (290),
		.HBMC_CH6_CFG_HBMC_TEMP111_RFSH_PERIOD            (1168),
		.HBMC_CH6_CFG_HBMC_TEMP101_RFSH_PERIOD            (1168),
		.HBMC_CH6_CFG_HBMC_TEMP100_RFSH_PERIOD            (1168),
		.HBMC_CH6_CFG_HBMC_RFSH_PB_TO_RFSH_PB_OFFSET      (2),
		.HBMC_CH6_CFG_HBMC_PCH_PB_TO_VALID                (6),
		.HBMC_CH6_CFG_HBMC_PCH_AB_TO_VALID                (6),
		.HBMC_CH6_CFG_HBMC_PC1_FIW_SHORT                  (3),
		.HBMC_CH6_CFG_HBMC_PC1_ATI                        (9),
		.HBMC_CH6_CFG_HBMC_PC1_ITI                        (14),
		.HBMC_CH6_CFG_HBMC_PC1_ATA                        (14),
		.HBMC_CH6_CFG_HBMC_PC1_ITA                        (18),
		.HBMC_CH6_CFG_HBMC_PC1_ITA_DLY                    (4),
		.HBMC_CH6_CFG_HBMC_PC1_ATP                        (10),
		.HBMC_CH6_CFG_HBMC_PC1_ATR                        (5),
		.HBMC_CH6_CFG_HBMC_PC1_ITR                        (8),
		.HBMC_CH6_CFG_HBMC_PC1_ATW                        (5),
		.HBMC_CH6_CFG_HBMC_PC1_ITW                        (7),
		.HBMC_CH6_CFG_HBMC_PC1_PTA                        (3),
		.HBMC_CH6_CFG_HBMC_PC1_WTI                        (8),
		.HBMC_CH6_CFG_HBMC_PC1_RTA                        (6),
		.HBMC_CH6_CFG_HBMC_PC1_WTA                        (13),
		.HBMC_CH6_CFG_HBMC_PC1_ATA_DBG                    (1),
		.HBMC_CH6_CFG_HBMC_PC1_ATI_DBG                    (1),
		.HBMC_CH6_CFG_HBMC_PC1_ITA_DBG                    (5),
		.HBMC_CH6_CFG_HBMC_PC1_ITI_DBG                    (1),
		.HBMC_CH6_CFG_HBMC_PC1_RTRWTW_DBG                 (0),
		.HBMC_CH6_CFG_HBMC_PC1_WTR_DBG                    (5),
		.HBMC_CH6_CFG_HBMC_PC1_ATA_SBG                    (1),
		.HBMC_CH6_CFG_HBMC_PC1_ATI_SBG                    (1),
		.HBMC_CH6_CFG_HBMC_PC1_ITA_SBG                    (5),
		.HBMC_CH6_CFG_HBMC_PC1_ITI_SBG                    (1),
		.HBMC_CH6_CFG_HBMC_PC1_WTR_SBG                    (7),
		.HBMC_CH6_CFG_HBMC_PC1_RTR_DSID                   (1),
		.HBMC_CH6_CFG_PSEUDO_BL8_EN                       ("enable"),
		.HBMC_CH6_CFG_CB_WREADY_GATE_EN                   ("disable"),
		.HBMC_CH6_CFG_PC0_RDEN_ON                         (5),
		.HBMC_CH6_CFG_PC1_RDEN_ON                         (5),
		.HBMC_CH6_CFG_PC0_RDIE_ON                         (9),
		.HBMC_CH6_CFG_PC1_RDIE_ON                         (9),
		.HBMC_CH6_CFG_PC0_CMD2RD                          (27),
		.HBMC_CH6_CFG_PC1_CMD2RD                          (28),
		.HBMC_CH6_CFG_PC0_CMD2RDPAR                       (28),
		.HBMC_CH6_CFG_PC1_CMD2RDPAR                       (29),
		.HBMC_CH6_CFG_PC0_WDQS_ON                         (4),
		.HBMC_CH6_CFG_PC1_WDQS_ON                         (4),
		.HBMC_CH6_CFG_WCQ_HWM                             (24),
		.HBMC_CH6_CFG_RFSH_POST_UPPER_LIMIT               (1),
		.HBMC_CH6_CFG_THROTTLE_EN                         ("disable"),
		.HBMC_CH6_CFG_TEMP000_ON_TIME                     (0),
		.HBMC_CH6_CFG_TEMP001_ON_TIME                     (0),
		.HBMC_CH6_CFG_TEMP010_ON_TIME                     (0),
		.HBMC_CH6_CFG_TEMP011_ON_TIME                     (0),
		.HBMC_CH6_CFG_TEMP100_ON_TIME                     (0),
		.HBMC_CH6_CFG_TEMP101_ON_TIME                     (0),
		.HBMC_CH6_CFG_TEMP110_ON_TIME                     (0),
		.HBMC_CH6_CFG_TEMP111_ON_TIME                     (0),
		.HBMC_CH6_CFG_TEMP000_OFF_TIME                    (255),
		.HBMC_CH6_CFG_TEMP001_OFF_TIME                    (255),
		.HBMC_CH6_CFG_TEMP010_OFF_TIME                    (255),
		.HBMC_CH6_CFG_TEMP011_OFF_TIME                    (255),
		.HBMC_CH6_CFG_TEMP100_OFF_TIME                    (255),
		.HBMC_CH6_CFG_TEMP101_OFF_TIME                    (255),
		.HBMC_CH6_CFG_TEMP110_OFF_TIME                    (255),
		.HBMC_CH6_CFG_TEMP111_OFF_TIME                    (255),
		.HBMC_CH6_CFG_RMW_EN                              ("enable"),
		.HBMC_CH6_CFG_POWER_DOWN_IDLE_THRESHOLD           (1),
		.HBMC_CH6_CFG_SB_PRE_UPDATE_CYCLE                 (8),
		.HBMC_CH6_CFG_HBMCC2HPTRDLY                       (0),
		.HBMC_CH6_HBM_TCCDL_BL4                           (4),
		.HBMC_CH6_HBM_TRTW                                (12),
		.HBMC_CH6_HBM_TFAW                                (12),
		.HBMC_CH6_HBM_TEAW                                (24),
		.HBMC_CH6_CFG_HBMC_PC0_FAW                        (3),
		.HBMC_CH6_CFG_HBMC_PC0_RTI                        (4),
		.HBMC_CH6_CFG_HBMC_PC0_RTW                        (10),
		.HBMC_CH6_CFG_HBMC_PC0_RTRWTW_SBG                 (1),
		.HBMC_CH6_CFG_HBMC_PC1_FAW                        (3),
		.HBMC_CH6_CFG_HBMC_PC1_RTI                        (5),
		.HBMC_CH6_CFG_HBMC_PC1_RTW                        (10),
		.HBMC_CH6_CFG_HBMC_PC1_RTRWTW_SBG                 (1),
		.HBMC_CH6_CFG_AWFIFO_RSVD_ENTRY                   (24),
		.HBMC_CH6_CFG_ARFIFO_RSVD_ENTRY                   (24),
		.HBMC_CH7_HBM_DEVICE                              ("hbm_device_8gb_8hi"),
		.HBMC_CH7_HBM_TRRDL                               (3),
		.HBMC_CH7_HBM_TRCDRD                              (9),
		.HBMC_CH7_HBM_TRCDWR                              (6),
		.HBMC_CH7_HBM_TRTPL_BL4                           (5),
		.HBMC_CH7_HBM_TRTPS_BL4                           (4),
		.HBMC_CH7_HBM_TRP                                 (9),
		.HBMC_CH7_HBM_TCCDS_BL4                           (2),
		.HBMC_CH7_HBM_TCCDR                               (3),
		.HBMC_CH7_HBM_TWR                                 (10),
		.HBMC_CH7_HBM_TWTRL                               (6),
		.HBMC_CH7_HBM_TWTRS                               (3),
		.HBMC_CH7_HBM_TDQSS_MAX_PS                        (200),
		.HBMC_CH7_HBM_TDQSS_MIN_PS                        (200),
		.HBMC_CH7_HBM_TDQSCK_MAX_PS                       (3500),
		.HBMC_CH7_HBM_TDQSQ_MAX_PS                        (105),
		.HBMC_CH7_HBM_PARAM_TYPE                          ("hbm_param_min"),
		.HBMC_CH7_RFSH_POLICY                             ("rfsh_policy_flexible"),
		.HBMC_CH7_HBM_TREFI                               (2340),
		.HBMC_CH7_HBM_TCKSRE                              (6),
		.HBMC_CH7_HBM_TCKSRX                              (6),
		.HBMC_CH7_HBM_TXS                                 (162),
		.HBMC_CH7_HBM_TCKESR                              (6),
		.HBMC_CH7_HBM_TXP                                 (5),
		.HBMC_CH7_HBM_TPD                                 (5),
		.HBMC_CH7_CFG_HBMC_MODES                          ("prod"),
		.HBMC_CH7_CORE_CLOCK_MHZ                          (300),
		.HBMC_CH7_CORE_CLOCK_PS                           (1000),
		.HBMC_CH7_CFG_CHANNEL_EN                          ("enable"),
		.HBMC_CH7_CFG_TR_ORDER                            ("enable"),
		.HBMC_CH7_CFG_ADDR_ORDER                          ("bgrbc"),
		.HBMC_CH7_CFG_USER_RD_AP_POL                      ("rdap_hint"),
		.HBMC_CH7_CFG_USER_WR_AP_POL                      ("wrap_hint"),
		.HBMC_CH7_CFG_RID_DEPENDENCY_EN                   ("enable"),
		.HBMC_CH7_CFG_HBMC_TX_BYPASS                      ("disable"),
		.HBMC_CH7_CFG_HBMC_RX_BYPASS                      ("disable"),
		.HBMC_CH7_CFG_P2HPEMUEN                           (2),
		.HBMC_CH7_CFG_RMPTREN                             ("disable"),
		.HBMC_CH7_CFG_RMPTRENDLY00                        (9),
		.HBMC_CH7_CFG_RMPTRENDLY01                        (8),
		.HBMC_CH7_CFG_RMPTRENDLY02                        (7),
		.HBMC_CH7_CFG_RMPTRENDLY03                        (6),
		.HBMC_CH7_CFG_RMPTRENDLY04                        (5),
		.HBMC_CH7_HBM_TRAS                                (20),
		.HBMC_CH7_HBM_TRRDS                               (3),
		.HBMC_CH7_HBMC_OFFSET                             (1),
		.HBMC_CH7_HBMC_RATE_VALUE                         ("rate_half"),
		.HBMC_CH7_HBM_CLOCK_MHZ                           (600),
		.HBMC_CH7_HBM_CLOCK_PS                            (1666),
		.HBMC_CH7_RFSH_MODE                               ("rfsh_mode_ctrl_rfsh_all"),
		.HBMC_CH7_HBM_TRFC                                (210),
		.HBMC_CH7_DATA_WIDTH_MODE                         ("data_width_mode_sdw"),
		.HBMC_CH7_EXT_RDIE                                (2),
		.HBMC_CH7_TEMP000_THROTTLE_RATIO                  (0),
		.HBMC_CH7_TEMP001_THROTTLE_RATIO                  (0),
		.HBMC_CH7_TEMP010_THROTTLE_RATIO                  (0),
		.HBMC_CH7_TEMP011_THROTTLE_RATIO                  (0),
		.HBMC_CH7_TEMP100_THROTTLE_RATIO                  (0),
		.HBMC_CH7_TEMP101_THROTTLE_RATIO                  (0),
		.HBMC_CH7_TEMP110_THROTTLE_RATIO                  (0),
		.HBMC_CH7_TEMP111_THROTTLE_RATIO                  (0),
		.HBMC_CH7_CORE_CLK_MODE                           ("hr_asyn"),
		.HBMC_CH7_CFG_HBMC_BL                             (4),
		.HBMC_CH7_USER_STRB_EN                            ("enable"),
		.HBMC_CH7_CFG_TBHMCRSTMIN                         (0),
		.HBMC_CH7_CFG_RESET_COUNT                         (0),
		.HBMC_CH7_CFG_HBMC_PC0_WL                         (6),
		.HBMC_CH7_CFG_HBMC_PC0_RL                         (15),
		.HBMC_CH7_CFG_HBMC_PC1_WL                         (6),
		.HBMC_CH7_CFG_HBMC_PC1_RL                         (15),
		.HBMC_CH7_CFG_POSTCAL_STATE                       ("sr"),
		.HBMC_CH7_CFG_UFIC2PDLY                           (0),
		.HBMC_CH7_CFG_UFIP2CDLY                           (0),
		.HBMC_CH7_CFG_CB_RMW_RD_IDLE_WAIT_EN              ("disable"),
		.HBMC_CH7_CFG_CB_RMW_FIFO_EMPTY_WAIT_EN           ("disable"),
		.HBMC_CH7_CFG_SB_POST_UPDATE_CYCLE                (1),
		.HBMC_CH7_CFG_HBMC_PC0_SCR_SEEDSEL                (0),
		.HBMC_CH7_CFG_HBMC_PC0_SCR_EN                     ("enable"),
		.HBMC_CH7_CFG_HBMC_RFSH_PB_BURST_GAP              (1),
		.HBMC_CH7_CFG_HBMC_PC1_SCR_SEEDSEL                (0),
		.HBMC_CH7_CFG_HBMC_PC1_SCR_EN                     ("enable"),
		.HBMC_CH7_CFG_FLIP_MODE                           ("disable"),
		.HBMC_CH7_CFG_DENSITY                             (3),
		.HBMC_CH7_CFG_USER_DATA_WIDTH                     ("b256"),
		.HBMC_CH7_CFG_CB_BREADY_BYPASS_EN                 ("disable"),
		.HBMC_CH7_CFG_CB_RREADY_BYPASS_EN                 ("disable"),
		.HBMC_CH7_CFG_CB_RVALID_GATE_EN                   ("enable"),
		.HBMC_CH7_CFG_CB_BVALID_GATE_EN                   ("enable"),
		.HBMC_CH7_CFG_ADDRCHNLMUXEN                       ("disable"),
		.HBMC_CH7_CFG_AXI_CMD_DEMUX_EN                    ("disable"),
		.HBMC_CH7_CFG_PC0_MAJOR_MODE_UPDATE_CNT           ("disable"),
		.HBMC_CH7_CFG_PC1_MAJOR_MODE_UPDATE_CNT           ("disable"),
		.HBMC_CH7_CFG_RCQ_AGE_LIMIT                       (32),
		.HBMC_CH7_CFG_RDB_RSVD_ENTRY                      (0),
		.HBMC_CH7_CFG_RD_STRB_IDLE_THRESHOLD              (50),
		.HBMC_CH7_CFG_PC0_CMD2RDEN                        (12),
		.HBMC_CH7_CFG_PC1_CMD2RDEN                        (13),
		.HBMC_CH7_CFG_PC0_CMD2RDIE                        (10),
		.HBMC_CH7_CFG_PC1_CMD2RDIE                        (11),
		.HBMC_CH7_CFG_PC0_DATAOE_ON                       (2),
		.HBMC_CH7_CFG_PC1_DATAOE_ON                       (2),
		.HBMC_CH7_CFG_PC0_CMD2DATA                        (3),
		.HBMC_CH7_CFG_PC1_CMD2DATA                        (4),
		.HBMC_CH7_CFG_WDB_RSVD_ENTRY                      (32),
		.HBMC_CH7_CFG_AWDB_RSVD_ENTRY                     (32),
		.HBMC_CH7_CFG_WCQ_BURST_THRESHOLD                 (64),
		.HBMC_CH7_CFG_WCQ_LWM                             (8),
		.HBMC_CH7_CFG_WCQ_TIMEOUT_THRESHOLD               (64),
		.HBMC_CH7_CFG_PC0_MAJOR_MODE_UPDATE_CFG           ("disable"),
		.HBMC_CH7_CFG_PC1_MAJOR_MODE_UPDATE_CFG           ("disable"),
		.HBMC_CH7_CFG_PC0_CMD2WDQS                        (2),
		.HBMC_CH7_CFG_PC1_CMD2WDQS                        (3),
		.HBMC_CH7_CFG_PC0_CMD2DATAOE                      (3),
		.HBMC_CH7_CFG_PC1_CMD2DATAOE                      (4),
		.HBMC_CH7_CFG_CB_MAJOR_MODE_EN                    ("enable"),
		.HBMC_CH7_CFG_CB_STRICT_MAJOR_MODE_EN             ("enable"),
		.HBMC_CH7_CFG_RFSH_ALL_EN                         ("enable"),
		.HBMC_CH7_CFG_RFSH_PB_EN                          ("disable"),
		.HBMC_CH7_CFG_USER_RFSH_PB_EN                     ("enable"),
		.HBMC_CH7_CFG_RFSH_AB_TO_PB_EN                    ("enable"),
		.HBMC_CH7_CFG_CB_TEMP_RFSH_FILTER_EN              ("disable"),
		.HBMC_CH7_CFG_RFSH_POST_LOWER_LIMIT               (1),
		.HBMC_CH7_CFG_RFSH_PRE_UPPER_LIMIT                (1),
		.HBMC_CH7_CFG_RFSH_IDLE_THRESHOLD                 (20),
		.HBMC_CH7_CFG_TEMP000_NO_OF_RFSH_BEFORE_SELF_RFSH (1),
		.HBMC_CH7_CFG_TEMP001_NO_OF_RFSH_BEFORE_SELF_RFSH (1),
		.HBMC_CH7_CFG_TEMP011_NO_OF_RFSH_BEFORE_SELF_RFSH (1),
		.HBMC_CH7_CFG_TEMP010_NO_OF_RFSH_BEFORE_SELF_RFSH (2),
		.HBMC_CH7_CFG_TEMP110_NO_OF_RFSH_BEFORE_SELF_RFSH (4),
		.HBMC_CH7_CFG_TEMP111_NO_OF_RFSH_BEFORE_SELF_RFSH (1),
		.HBMC_CH7_CFG_TEMP101_NO_OF_RFSH_BEFORE_SELF_RFSH (1),
		.HBMC_CH7_CFG_TEMP100_NO_OF_RFSH_BEFORE_SELF_RFSH (1),
		.HBMC_CH7_CFG_TEMP_FILTER_EN                      ("enable"),
		.HBMC_CH7_CFG_CATTRIP_FILTER_EN                   ("enable"),
		.HBMC_CH7_CFG_CB_BYPASS_CATTRIP                   ("disable"),
		.HBMC_CH7_CFG_CB_TEMP_SELECT                      ("disable"),
		.HBMC_CH7_CFG_F2C_TEMP_UPDATE                     ("disable"),
		.HBMC_CH7_CFG_F2C_TEMP                            (3),
		.HBMC_CH7_CFG_ADDR_SCR                            ("none"),
		.HBMC_CH7_CFG_ADDR_SPRD                           ("disable"),
		.HBMC_CH7_CFG_CB_RD_COL_ARB_PRIORITY_EN           ("enable"),
		.HBMC_CH7_CFG_CB_WR_COL_ARB_PRIORITY_EN           ("enable"),
		.HBMC_CH7_CFG_CB_RD_ROW_ARB_PRIORITY_EN           ("enable"),
		.HBMC_CH7_CFG_CB_WR_ROW_ARB_PRIORITY_EN           ("enable"),
		.HBMC_CH7_CFG_CB_DEPENDENCY_MODE                  ("enable"),
		.HBMC_CH7_CFG_MECC_EN                             ("disable"),
		.HBMC_CH7_CFG_CA_PAR_EN                           ("enable"),
		.HBMC_CH7_CFG_WR_PAR_EN                           ("enable"),
		.HBMC_CH7_CFG_RD_PAR_EN                           ("enable"),
		.HBMC_CH7_CFG_WR_DM_EN                            ("disable"),
		.HBMC_CH7_CFG_RD_DM_EN                            ("disable"),
		.HBMC_CH7_CFG_POWER_DOWN_EN                       ("enable"),
		.HBMC_CH7_CFG_POWER_DOWN_CK_DIS_EN                ("disable"),
		.HBMC_CH7_CFG_AUTO_RD_POWER_DOWN_EXIT_EN          ("enable"),
		.HBMC_CH7_CFG_AUTO_WR_POWER_DOWN_EXIT_EN          ("enable"),
		.HBMC_CH7_CFG_AUTO_RD_SELF_RFSH_EXIT_EN           ("enable"),
		.HBMC_CH7_CFG_AUTO_WR_SELF_RFSH_EXIT_EN           ("enable"),
		.HBMC_CH7_CFG_SELF_RFSH_CK_DIS_EN                 ("enable"),
		.HBMC_CH7_CFG_SELF_RFSH_EN                        ("enable"),
		.HBMC_CH7_H0_FR_CLK_STCFG_EN                      ("disable"),
		.HBMC_CH7_CFG_SB_PRE_STALL_CYCLE                  (3),
		.HBMC_CH7_CFG_SB_POST_STALL_CYCLE                 (1),
		.HBMC_CH7_CFG_HBMC_CORECLK_PROG_DELAY1            (63),
		.HBMC_CH7_CFG_HBMC_CORECLK_PROG_DELAY2            (0),
		.HBMC_CH7_CFG_HBMCPTRENSYNCSEL                    ("enable"),
		.HBMC_CH7_CFG_UB48MODE                            ("enable"),
		.HBMC_CH7_CFG_HBMCH2CPTRSTART                     (6),
		.HBMC_CH7_CFG_DWORD_LPBKEN                        ("disable"),
		.HBMC_CH7_CFG_AWORD_LPBEN                         ("disable"),
		.HBMC_CH7_CFG_DWORD_LPBKSEL                       ("disable"),
		.HBMC_CH7_CFG_AWORD_LPBKSEL                       (0),
		.HBMC_CH7_CFG_OBSGRPSEL                           (0),
		.HBMC_CH7_CFG_OBSSIGSEL                           (0),
		.HBMC_CH7_CFG_MEM_MCE                             ("disable"),
		.HBMC_CH7_CFG_MEM_WA                              (6),
		.HBMC_CH7_CFG_MEM_RMCE                            (1),
		.HBMC_CH7_CFG_MEM_WMCE                            (1),
		.HBMC_CH7_CFG_MEM_WPULSE                          (2),
		.HBMC_CH7_CFG_SRAM_ECC_ENABLE                     ("enable"),
		.HBMC_CH7_CFG_PC0_SRAM_INJD                       ("disable"),
		.HBMC_CH7_CFG_PC0_SRAM_INJS                       ("disable"),
		.HBMC_CH7_CFG_PC1_SRAM_INJD                       ("disable"),
		.HBMC_CH7_CFG_PC1_SRAM_INJS                       ("disable"),
		.HBMC_CH7_CFG_SRAM_SERRINTEN                      ("enable"),
		.HBMC_CH7_CFG_SRAM_SLVERR_DIS                     ("disable"),
		.HBMC_CH7_MMR_USER_TRIGGER                        ("disable"),
		.HBMC_CH7_MMR_USER_RDWR                           ("disable"),
		.HBMC_CH7_MMR_USER_BYTEENABLE                     (0),
		.HBMC_CH7_MMR_USER_ADDR                           (0),
		.HBMC_CH7_MMR_USER_WRDATA                         (0),
		.HBMC_CH7_MMR_SBOWN_REQ                           ("disable"),
		.HBMC_CH7_MMR_SBOWN_DELAY                         (100),
		.HBMC_CH7_CFG_SKETCH1                             (2),
		.HBMC_CH7_CFG_SKETCH2                             (0),
		.HBMC_CH7_CFG_TST_PATTERN                         (0),
		.HBMC_CH7_CFG_TST_START_ADDR                      (0),
		.HBMC_CH7_CFG_TST_BURST_LEN                       (0),
		.HBMC_CH7_CFG_TST_GEN_CMD                         (0),
		.HBMC_CH7_CFG_AXI_TRAFFIC_SEL                     ("disable"),
		.HBMC_CH7_CFG_TST_PC_SEL                          ("disable"),
		.HBMC_CH7_CFG_TST_TRIGGER                         ("disable"),
		.HBMC_CH7_CFG_TST_TIME_OUT                        (0),
		.HBMC_CH7_HBMC_RATE                               (2),
		.HBMC_CH7_HBM_TRFCSB                              (96),
		.HBMC_CH7_HBM_TRREFD                              (5),
		.HBMC_CH7_UFI_TRDEN                               (20),
		.HBMC_CH7_CFG_HBMC_PC0_WTP                        (8),
		.HBMC_CH7_CFG_HBMC_PC1_WTP                        (8),
		.HBMC_CH7_CFG_HBMC_PC0_ITP                        (14),
		.HBMC_CH7_CFG_HBMC_PC1_ITP                        (14),
		.HBMC_CH7_CFG_HBMC_PC0_RTP                        (2),
		.HBMC_CH7_CFG_HBMC_PC1_RTP                        (2),
		.HBMC_CH7_CFG_PAR_LAT                             (1),
		.HBMC_CH7_CFG_HBMC_PC0_FIW_SHORT                  (3),
		.HBMC_CH7_CFG_HBMC_PC0_ATI                        (9),
		.HBMC_CH7_CFG_HBMC_PC0_ITI                        (14),
		.HBMC_CH7_CFG_HBMC_PC0_ATA                        (14),
		.HBMC_CH7_CFG_HBMC_PC0_ITA                        (18),
		.HBMC_CH7_CFG_HBMC_PC0_ITA_DLY                    (4),
		.HBMC_CH7_CFG_HBMC_PC0_ATP                        (10),
		.HBMC_CH7_CFG_HBMC_PC0_ATR                        (5),
		.HBMC_CH7_CFG_HBMC_PC0_ITR                        (9),
		.HBMC_CH7_CFG_HBMC_PC0_ATW                        (5),
		.HBMC_CH7_CFG_HBMC_PC0_ITW                        (7),
		.HBMC_CH7_CFG_HBMC_PC0_PTA                        (3),
		.HBMC_CH7_CFG_HBMC_PC0_WTI                        (8),
		.HBMC_CH7_CFG_HBMC_PC0_RTA                        (6),
		.HBMC_CH7_CFG_HBMC_PC0_WTA                        (12),
		.HBMC_CH7_CFG_HBMC_PC0_ATA_DBG                    (1),
		.HBMC_CH7_CFG_HBMC_PC0_ATI_DBG                    (1),
		.HBMC_CH7_CFG_HBMC_PC0_ITA_DBG                    (5),
		.HBMC_CH7_CFG_HBMC_PC0_ITI_DBG                    (1),
		.HBMC_CH7_CFG_HBMC_PC0_RTRWTW_DBG                 (0),
		.HBMC_CH7_CFG_HBMC_PC0_WTR_DBG                    (5),
		.HBMC_CH7_CFG_HBMC_PC0_ATA_SBG                    (1),
		.HBMC_CH7_CFG_HBMC_PC0_ATI_SBG                    (1),
		.HBMC_CH7_CFG_HBMC_PC0_ITA_SBG                    (5),
		.HBMC_CH7_CFG_HBMC_PC0_ITI_SBG                    (1),
		.HBMC_CH7_CFG_HBMC_PC0_WTR_SBG                    (7),
		.HBMC_CH7_CFG_HBMC_PC0_RTR_DSID                   (1),
		.HBMC_CH7_CFG_HBMC_POWER_DOWN_TO_CK_DIS           (4),
		.HBMC_CH7_CFG_HBMC_CK_DIS_TO_POWER_DOWN           (4),
		.HBMC_CH7_CFG_HBMC_MIN_POWER_DOWN                 (4),
		.HBMC_CH7_CFG_HBMC_POWER_DOWN_TO_VALID            (4),
		.HBMC_CH7_CFG_HBMC_SELF_RFSH_TO_CK_DIS            (4),
		.HBMC_CH7_CFG_HBMC_CK_DIS_TO_SELF_RFSH            (4),
		.HBMC_CH7_CFG_HBMC_SELF_RFSH_TO_VALID             (82),
		.HBMC_CH7_CFG_HBMC_MIN_SELF_RFSH                  (4),
		.HBMC_CH7_CFG_HBMC_RFSH_AB_TO_VALID               (106),
		.HBMC_CH7_CFG_HBMC_RFSH_PB_TO_RFSH_PB             (4),
		.HBMC_CH7_CFG_HBMC_RFSH_PB_TO_VALID               (49),
		.HBMC_CH7_CFG_HBMC_TEMP000_RFSH_PERIOD            (4678),
		.HBMC_CH7_CFG_HBMC_TEMP001_RFSH_PERIOD            (2338),
		.HBMC_CH7_CFG_HBMC_TEMP011_RFSH_PERIOD            (1168),
		.HBMC_CH7_CFG_HBMC_TEMP010_RFSH_PERIOD            (583),
		.HBMC_CH7_CFG_HBMC_TEMP110_RFSH_PERIOD            (290),
		.HBMC_CH7_CFG_HBMC_TEMP111_RFSH_PERIOD            (1168),
		.HBMC_CH7_CFG_HBMC_TEMP101_RFSH_PERIOD            (1168),
		.HBMC_CH7_CFG_HBMC_TEMP100_RFSH_PERIOD            (1168),
		.HBMC_CH7_CFG_HBMC_RFSH_PB_TO_RFSH_PB_OFFSET      (2),
		.HBMC_CH7_CFG_HBMC_PCH_PB_TO_VALID                (6),
		.HBMC_CH7_CFG_HBMC_PCH_AB_TO_VALID                (6),
		.HBMC_CH7_CFG_HBMC_PC1_FIW_SHORT                  (3),
		.HBMC_CH7_CFG_HBMC_PC1_ATI                        (9),
		.HBMC_CH7_CFG_HBMC_PC1_ITI                        (14),
		.HBMC_CH7_CFG_HBMC_PC1_ATA                        (14),
		.HBMC_CH7_CFG_HBMC_PC1_ITA                        (18),
		.HBMC_CH7_CFG_HBMC_PC1_ITA_DLY                    (4),
		.HBMC_CH7_CFG_HBMC_PC1_ATP                        (10),
		.HBMC_CH7_CFG_HBMC_PC1_ATR                        (5),
		.HBMC_CH7_CFG_HBMC_PC1_ITR                        (8),
		.HBMC_CH7_CFG_HBMC_PC1_ATW                        (5),
		.HBMC_CH7_CFG_HBMC_PC1_ITW                        (7),
		.HBMC_CH7_CFG_HBMC_PC1_PTA                        (3),
		.HBMC_CH7_CFG_HBMC_PC1_WTI                        (8),
		.HBMC_CH7_CFG_HBMC_PC1_RTA                        (6),
		.HBMC_CH7_CFG_HBMC_PC1_WTA                        (13),
		.HBMC_CH7_CFG_HBMC_PC1_ATA_DBG                    (1),
		.HBMC_CH7_CFG_HBMC_PC1_ATI_DBG                    (1),
		.HBMC_CH7_CFG_HBMC_PC1_ITA_DBG                    (5),
		.HBMC_CH7_CFG_HBMC_PC1_ITI_DBG                    (1),
		.HBMC_CH7_CFG_HBMC_PC1_RTRWTW_DBG                 (0),
		.HBMC_CH7_CFG_HBMC_PC1_WTR_DBG                    (5),
		.HBMC_CH7_CFG_HBMC_PC1_ATA_SBG                    (1),
		.HBMC_CH7_CFG_HBMC_PC1_ATI_SBG                    (1),
		.HBMC_CH7_CFG_HBMC_PC1_ITA_SBG                    (5),
		.HBMC_CH7_CFG_HBMC_PC1_ITI_SBG                    (1),
		.HBMC_CH7_CFG_HBMC_PC1_WTR_SBG                    (7),
		.HBMC_CH7_CFG_HBMC_PC1_RTR_DSID                   (1),
		.HBMC_CH7_CFG_PSEUDO_BL8_EN                       ("enable"),
		.HBMC_CH7_CFG_CB_WREADY_GATE_EN                   ("disable"),
		.HBMC_CH7_CFG_PC0_RDEN_ON                         (5),
		.HBMC_CH7_CFG_PC1_RDEN_ON                         (5),
		.HBMC_CH7_CFG_PC0_RDIE_ON                         (9),
		.HBMC_CH7_CFG_PC1_RDIE_ON                         (9),
		.HBMC_CH7_CFG_PC0_CMD2RD                          (27),
		.HBMC_CH7_CFG_PC1_CMD2RD                          (28),
		.HBMC_CH7_CFG_PC0_CMD2RDPAR                       (28),
		.HBMC_CH7_CFG_PC1_CMD2RDPAR                       (29),
		.HBMC_CH7_CFG_PC0_WDQS_ON                         (4),
		.HBMC_CH7_CFG_PC1_WDQS_ON                         (4),
		.HBMC_CH7_CFG_WCQ_HWM                             (24),
		.HBMC_CH7_CFG_RFSH_POST_UPPER_LIMIT               (1),
		.HBMC_CH7_CFG_THROTTLE_EN                         ("disable"),
		.HBMC_CH7_CFG_TEMP000_ON_TIME                     (0),
		.HBMC_CH7_CFG_TEMP001_ON_TIME                     (0),
		.HBMC_CH7_CFG_TEMP010_ON_TIME                     (0),
		.HBMC_CH7_CFG_TEMP011_ON_TIME                     (0),
		.HBMC_CH7_CFG_TEMP100_ON_TIME                     (0),
		.HBMC_CH7_CFG_TEMP101_ON_TIME                     (0),
		.HBMC_CH7_CFG_TEMP110_ON_TIME                     (0),
		.HBMC_CH7_CFG_TEMP111_ON_TIME                     (0),
		.HBMC_CH7_CFG_TEMP000_OFF_TIME                    (255),
		.HBMC_CH7_CFG_TEMP001_OFF_TIME                    (255),
		.HBMC_CH7_CFG_TEMP010_OFF_TIME                    (255),
		.HBMC_CH7_CFG_TEMP011_OFF_TIME                    (255),
		.HBMC_CH7_CFG_TEMP100_OFF_TIME                    (255),
		.HBMC_CH7_CFG_TEMP101_OFF_TIME                    (255),
		.HBMC_CH7_CFG_TEMP110_OFF_TIME                    (255),
		.HBMC_CH7_CFG_TEMP111_OFF_TIME                    (255),
		.HBMC_CH7_CFG_RMW_EN                              ("enable"),
		.HBMC_CH7_CFG_POWER_DOWN_IDLE_THRESHOLD           (1),
		.HBMC_CH7_CFG_SB_PRE_UPDATE_CYCLE                 (8),
		.HBMC_CH7_CFG_HBMCC2HPTRDLY                       (0),
		.HBMC_CH7_HBM_TCCDL_BL4                           (4),
		.HBMC_CH7_HBM_TRTW                                (12),
		.HBMC_CH7_HBM_TFAW                                (12),
		.HBMC_CH7_HBM_TEAW                                (24),
		.HBMC_CH7_CFG_HBMC_PC0_FAW                        (3),
		.HBMC_CH7_CFG_HBMC_PC0_RTI                        (4),
		.HBMC_CH7_CFG_HBMC_PC0_RTW                        (10),
		.HBMC_CH7_CFG_HBMC_PC0_RTRWTW_SBG                 (1),
		.HBMC_CH7_CFG_HBMC_PC1_FAW                        (3),
		.HBMC_CH7_CFG_HBMC_PC1_RTI                        (5),
		.HBMC_CH7_CFG_HBMC_PC1_RTW                        (10),
		.HBMC_CH7_CFG_HBMC_PC1_RTRWTW_SBG                 (1),
		.HBMC_CH7_CFG_AWFIFO_RSVD_ENTRY                   (24),
		.HBMC_CH7_CFG_ARFIFO_RSVD_ENTRY                   (24)
	) uib (
		.pll_ref_clk                    (pll_ref_clk),                                                                          //   input,    width = 1,         pll_ref_clk.clk
		.ext_core_clk                   (ext_core_clk),                                                                         //   input,    width = 1,        ext_core_clk.clk
		.ext_core_clk_locked            (ext_core_clk_locked),                                                                  //   input,    width = 1, ext_core_clk_locked.export
		.wmcrst_n_in                    (wmcrst_n_in),                                                                          //   input,    width = 1,         wmcrst_n_in.reset_n
		.hbm_only_reset_in              (hbm_only_reset_in),                                                                    //   input,    width = 1,   hbm_only_reset_in.reset
		.wmc_clk                        (uib_wmc_clk_clk),                                                                      //  output,    width = 1,             wmc_clk.clk
		.phy_clk                        (uib_phy_clk_clk),                                                                      //  output,    width = 1,             phy_clk.clk
		.wmcrst_n                       (uib_wmcrst_n_reset),                                                                   //  output,    width = 1,            wmcrst_n.reset_n
		.local_cal_success              (local_cal_success),                                                                    //  output,    width = 1,              status.local_cal_success
		.local_cal_fail                 (local_cal_fail),                                                                       //  output,    width = 1,                    .local_cal_fail
		.cal_sts                        (),                                                                                     //  output,    width = 1,             cal_sts.cal_sts
		.cal_in_prog                    (uib_cal_in_prog_cal_in_prog),                                                          //  output,    width = 1,         cal_in_prog.cal_in_prog
		.axifencereq                    (uib_axifencereq_axifencereq),                                                          //  output,    width = 1,         axifencereq.axifencereq
		.cal_lat                        (cal_lat),                                                                              //  output,    width = 3,             cal_lat.cal_lat
		.sdout0_0_0                     (axi_ufi_adpt_0_ub48_group_0_0_sdout0),                                                 //   input,   width = 80,      ub48_group_0_0.sdout0
		.sdout0_en_0_0                  (axi_ufi_adpt_0_ub48_group_0_0_sdout0_en),                                              //   input,    width = 2,                    .sdout0_en
		.sdin0_0_0                      (uib_ub48_group_0_0_sdin0),                                                             //  output,   width = 80,                    .sdin0
		.sdin0_en_0_0                   (axi_ufi_adpt_0_ub48_group_0_0_sdin0_en),                                               //   input,    width = 2,                    .sdin0_en
		.ddout0_0_0                     (axi_ufi_adpt_0_ub48_group_0_0_ddout0),                                                 //   input,    width = 8,                    .ddout0
		.ddout0_en_0_0                  (axi_ufi_adpt_0_ub48_group_0_0_ddout0_en),                                              //   input,    width = 2,                    .ddout0_en
		.ddin0_0_0                      (uib_ub48_group_0_0_ddin0),                                                             //  output,    width = 8,                    .ddin0
		.ddin0_en_0_0                   (axi_ufi_adpt_0_ub48_group_0_0_ddin0_en),                                               //   input,    width = 2,                    .ddin0_en
		.ddout1_0_0                     (axi_ufi_adpt_0_ub48_group_0_0_ddout1),                                                 //   input,    width = 8,                    .ddout1
		.ddout1_en_0_0                  (axi_ufi_adpt_0_ub48_group_0_0_ddout1_en),                                              //   input,    width = 2,                    .ddout1_en
		.ddin1_0_0                      (uib_ub48_group_0_0_ddin1),                                                             //  output,    width = 8,                    .ddin1
		.ddin1_en_0_0                   (axi_ufi_adpt_0_ub48_group_0_0_ddin1_en),                                               //   input,    width = 2,                    .ddin1_en
		.sdout0_0_1                     (axi_ufi_adpt_0_ub48_group_0_1_sdout0),                                                 //   input,   width = 80,      ub48_group_0_1.sdout0
		.sdout0_en_0_1                  (axi_ufi_adpt_0_ub48_group_0_1_sdout0_en),                                              //   input,    width = 2,                    .sdout0_en
		.sdin0_0_1                      (uib_ub48_group_0_1_sdin0),                                                             //  output,   width = 80,                    .sdin0
		.sdin0_en_0_1                   (axi_ufi_adpt_0_ub48_group_0_1_sdin0_en),                                               //   input,    width = 2,                    .sdin0_en
		.ddout0_0_1                     (axi_ufi_adpt_0_ub48_group_0_1_ddout0),                                                 //   input,    width = 8,                    .ddout0
		.ddout0_en_0_1                  (axi_ufi_adpt_0_ub48_group_0_1_ddout0_en),                                              //   input,    width = 2,                    .ddout0_en
		.ddin0_0_1                      (uib_ub48_group_0_1_ddin0),                                                             //  output,    width = 8,                    .ddin0
		.ddin0_en_0_1                   (axi_ufi_adpt_0_ub48_group_0_1_ddin0_en),                                               //   input,    width = 2,                    .ddin0_en
		.ddout1_0_1                     (axi_ufi_adpt_0_ub48_group_0_1_ddout1),                                                 //   input,    width = 8,                    .ddout1
		.ddout1_en_0_1                  (axi_ufi_adpt_0_ub48_group_0_1_ddout1_en),                                              //   input,    width = 2,                    .ddout1_en
		.ddin1_0_1                      (uib_ub48_group_0_1_ddin1),                                                             //  output,    width = 8,                    .ddin1
		.ddin1_en_0_1                   (axi_ufi_adpt_0_ub48_group_0_1_ddin1_en),                                               //   input,    width = 2,                    .ddin1_en
		.sdout0_1_0                     (axi_ufi_adpt_0_ub48_group_1_0_sdout0),                                                 //   input,   width = 80,      ub48_group_1_0.sdout0
		.sdout0_en_1_0                  (axi_ufi_adpt_0_ub48_group_1_0_sdout0_en),                                              //   input,    width = 2,                    .sdout0_en
		.sdin0_1_0                      (uib_ub48_group_1_0_sdin0),                                                             //  output,   width = 80,                    .sdin0
		.sdin0_en_1_0                   (axi_ufi_adpt_0_ub48_group_1_0_sdin0_en),                                               //   input,    width = 2,                    .sdin0_en
		.ddout0_1_0                     (axi_ufi_adpt_0_ub48_group_1_0_ddout0),                                                 //   input,    width = 8,                    .ddout0
		.ddout0_en_1_0                  (axi_ufi_adpt_0_ub48_group_1_0_ddout0_en),                                              //   input,    width = 2,                    .ddout0_en
		.ddin0_1_0                      (uib_ub48_group_1_0_ddin0),                                                             //  output,    width = 8,                    .ddin0
		.ddin0_en_1_0                   (axi_ufi_adpt_0_ub48_group_1_0_ddin0_en),                                               //   input,    width = 2,                    .ddin0_en
		.ddout1_1_0                     (axi_ufi_adpt_0_ub48_group_1_0_ddout1),                                                 //   input,    width = 8,                    .ddout1
		.ddout1_en_1_0                  (axi_ufi_adpt_0_ub48_group_1_0_ddout1_en),                                              //   input,    width = 2,                    .ddout1_en
		.ddin1_1_0                      (uib_ub48_group_1_0_ddin1),                                                             //  output,    width = 8,                    .ddin1
		.ddin1_en_1_0                   (axi_ufi_adpt_0_ub48_group_1_0_ddin1_en),                                               //   input,    width = 2,                    .ddin1_en
		.sdout0_1_1                     (axi_ufi_adpt_0_ub48_group_1_1_sdout0),                                                 //   input,   width = 80,      ub48_group_1_1.sdout0
		.sdout0_en_1_1                  (axi_ufi_adpt_0_ub48_group_1_1_sdout0_en),                                              //   input,    width = 2,                    .sdout0_en
		.sdin0_1_1                      (uib_ub48_group_1_1_sdin0),                                                             //  output,   width = 80,                    .sdin0
		.sdin0_en_1_1                   (axi_ufi_adpt_0_ub48_group_1_1_sdin0_en),                                               //   input,    width = 2,                    .sdin0_en
		.ddout0_1_1                     (axi_ufi_adpt_0_ub48_group_1_1_ddout0),                                                 //   input,    width = 8,                    .ddout0
		.ddout0_en_1_1                  (axi_ufi_adpt_0_ub48_group_1_1_ddout0_en),                                              //   input,    width = 2,                    .ddout0_en
		.ddin0_1_1                      (uib_ub48_group_1_1_ddin0),                                                             //  output,    width = 8,                    .ddin0
		.ddin0_en_1_1                   (axi_ufi_adpt_0_ub48_group_1_1_ddin0_en),                                               //   input,    width = 2,                    .ddin0_en
		.ddout1_1_1                     (axi_ufi_adpt_0_ub48_group_1_1_ddout1),                                                 //   input,    width = 8,                    .ddout1
		.ddout1_en_1_1                  (axi_ufi_adpt_0_ub48_group_1_1_ddout1_en),                                              //   input,    width = 2,                    .ddout1_en
		.ddin1_1_1                      (uib_ub48_group_1_1_ddin1),                                                             //  output,    width = 8,                    .ddin1
		.ddin1_en_1_1                   (axi_ufi_adpt_0_ub48_group_1_1_ddin1_en),                                               //   input,    width = 2,                    .ddin1_en
		.sdout0_4_0                     (axi_ufi_adpt_0_ub48_group_4_0_sdout0),                                                 //   input,   width = 80,      ub48_group_4_0.sdout0
		.sdout0_en_4_0                  (axi_ufi_adpt_0_ub48_group_4_0_sdout0_en),                                              //   input,    width = 2,                    .sdout0_en
		.sdin0_4_0                      (uib_ub48_group_4_0_sdin0),                                                             //  output,   width = 80,                    .sdin0
		.sdin0_en_4_0                   (axi_ufi_adpt_0_ub48_group_4_0_sdin0_en),                                               //   input,    width = 2,                    .sdin0_en
		.ddout0_4_0                     (axi_ufi_adpt_0_ub48_group_4_0_ddout0),                                                 //   input,    width = 8,                    .ddout0
		.ddout0_en_4_0                  (axi_ufi_adpt_0_ub48_group_4_0_ddout0_en),                                              //   input,    width = 2,                    .ddout0_en
		.ddin0_4_0                      (uib_ub48_group_4_0_ddin0),                                                             //  output,    width = 8,                    .ddin0
		.ddin0_en_4_0                   (axi_ufi_adpt_0_ub48_group_4_0_ddin0_en),                                               //   input,    width = 2,                    .ddin0_en
		.ddout1_4_0                     (axi_ufi_adpt_0_ub48_group_4_0_ddout1),                                                 //   input,    width = 8,                    .ddout1
		.ddout1_en_4_0                  (axi_ufi_adpt_0_ub48_group_4_0_ddout1_en),                                              //   input,    width = 2,                    .ddout1_en
		.ddin1_4_0                      (uib_ub48_group_4_0_ddin1),                                                             //  output,    width = 8,                    .ddin1
		.ddin1_en_4_0                   (axi_ufi_adpt_0_ub48_group_4_0_ddin1_en),                                               //   input,    width = 2,                    .ddin1_en
		.sdout0_4_1                     (axi_ufi_adpt_0_ub48_group_4_1_sdout0),                                                 //   input,   width = 80,      ub48_group_4_1.sdout0
		.sdout0_en_4_1                  (axi_ufi_adpt_0_ub48_group_4_1_sdout0_en),                                              //   input,    width = 2,                    .sdout0_en
		.sdin0_4_1                      (uib_ub48_group_4_1_sdin0),                                                             //  output,   width = 80,                    .sdin0
		.sdin0_en_4_1                   (axi_ufi_adpt_0_ub48_group_4_1_sdin0_en),                                               //   input,    width = 2,                    .sdin0_en
		.ddout0_4_1                     (axi_ufi_adpt_0_ub48_group_4_1_ddout0),                                                 //   input,    width = 8,                    .ddout0
		.ddout0_en_4_1                  (axi_ufi_adpt_0_ub48_group_4_1_ddout0_en),                                              //   input,    width = 2,                    .ddout0_en
		.ddin0_4_1                      (uib_ub48_group_4_1_ddin0),                                                             //  output,    width = 8,                    .ddin0
		.ddin0_en_4_1                   (axi_ufi_adpt_0_ub48_group_4_1_ddin0_en),                                               //   input,    width = 2,                    .ddin0_en
		.ddout1_4_1                     (axi_ufi_adpt_0_ub48_group_4_1_ddout1),                                                 //   input,    width = 8,                    .ddout1
		.ddout1_en_4_1                  (axi_ufi_adpt_0_ub48_group_4_1_ddout1_en),                                              //   input,    width = 2,                    .ddout1_en
		.ddin1_4_1                      (uib_ub48_group_4_1_ddin1),                                                             //  output,    width = 8,                    .ddin1
		.ddin1_en_4_1                   (axi_ufi_adpt_0_ub48_group_4_1_ddin1_en),                                               //   input,    width = 2,                    .ddin1_en
		.sdout0_5_0                     (axi_ufi_adpt_0_ub48_group_5_0_sdout0),                                                 //   input,   width = 80,      ub48_group_5_0.sdout0
		.sdout0_en_5_0                  (axi_ufi_adpt_0_ub48_group_5_0_sdout0_en),                                              //   input,    width = 2,                    .sdout0_en
		.sdin0_5_0                      (uib_ub48_group_5_0_sdin0),                                                             //  output,   width = 80,                    .sdin0
		.sdin0_en_5_0                   (axi_ufi_adpt_0_ub48_group_5_0_sdin0_en),                                               //   input,    width = 2,                    .sdin0_en
		.ddout0_5_0                     (axi_ufi_adpt_0_ub48_group_5_0_ddout0),                                                 //   input,    width = 8,                    .ddout0
		.ddout0_en_5_0                  (axi_ufi_adpt_0_ub48_group_5_0_ddout0_en),                                              //   input,    width = 2,                    .ddout0_en
		.ddin0_5_0                      (uib_ub48_group_5_0_ddin0),                                                             //  output,    width = 8,                    .ddin0
		.ddin0_en_5_0                   (axi_ufi_adpt_0_ub48_group_5_0_ddin0_en),                                               //   input,    width = 2,                    .ddin0_en
		.ddout1_5_0                     (axi_ufi_adpt_0_ub48_group_5_0_ddout1),                                                 //   input,    width = 8,                    .ddout1
		.ddout1_en_5_0                  (axi_ufi_adpt_0_ub48_group_5_0_ddout1_en),                                              //   input,    width = 2,                    .ddout1_en
		.ddin1_5_0                      (uib_ub48_group_5_0_ddin1),                                                             //  output,    width = 8,                    .ddin1
		.ddin1_en_5_0                   (axi_ufi_adpt_0_ub48_group_5_0_ddin1_en),                                               //   input,    width = 2,                    .ddin1_en
		.sdout0_5_1                     (axi_ufi_adpt_0_ub48_group_5_1_sdout0),                                                 //   input,   width = 80,      ub48_group_5_1.sdout0
		.sdout0_en_5_1                  (axi_ufi_adpt_0_ub48_group_5_1_sdout0_en),                                              //   input,    width = 2,                    .sdout0_en
		.sdin0_5_1                      (uib_ub48_group_5_1_sdin0),                                                             //  output,   width = 80,                    .sdin0
		.sdin0_en_5_1                   (axi_ufi_adpt_0_ub48_group_5_1_sdin0_en),                                               //   input,    width = 2,                    .sdin0_en
		.ddout0_5_1                     (axi_ufi_adpt_0_ub48_group_5_1_ddout0),                                                 //   input,    width = 8,                    .ddout0
		.ddout0_en_5_1                  (axi_ufi_adpt_0_ub48_group_5_1_ddout0_en),                                              //   input,    width = 2,                    .ddout0_en
		.ddin0_5_1                      (uib_ub48_group_5_1_ddin0),                                                             //  output,    width = 8,                    .ddin0
		.ddin0_en_5_1                   (axi_ufi_adpt_0_ub48_group_5_1_ddin0_en),                                               //   input,    width = 2,                    .ddin0_en
		.ddout1_5_1                     (axi_ufi_adpt_0_ub48_group_5_1_ddout1),                                                 //   input,    width = 8,                    .ddout1
		.ddout1_en_5_1                  (axi_ufi_adpt_0_ub48_group_5_1_ddout1_en),                                              //   input,    width = 2,                    .ddout1_en
		.ddin1_5_1                      (uib_ub48_group_5_1_ddin1),                                                             //  output,    width = 8,                    .ddin1
		.ddin1_en_5_1                   (axi_ufi_adpt_0_ub48_group_5_1_ddin1_en),                                               //   input,    width = 2,                    .ddin1_en
		.sdout0_6_0                     (axi_ufi_adpt_0_ub48_group_6_0_sdout0),                                                 //   input,   width = 80,      ub48_group_6_0.sdout0
		.sdout0_en_6_0                  (axi_ufi_adpt_0_ub48_group_6_0_sdout0_en),                                              //   input,    width = 2,                    .sdout0_en
		.sdin0_6_0                      (uib_ub48_group_6_0_sdin0),                                                             //  output,   width = 80,                    .sdin0
		.sdin0_en_6_0                   (axi_ufi_adpt_0_ub48_group_6_0_sdin0_en),                                               //   input,    width = 2,                    .sdin0_en
		.ddout0_6_0                     (axi_ufi_adpt_0_ub48_group_6_0_ddout0),                                                 //   input,    width = 8,                    .ddout0
		.ddout0_en_6_0                  (axi_ufi_adpt_0_ub48_group_6_0_ddout0_en),                                              //   input,    width = 2,                    .ddout0_en
		.ddin0_6_0                      (uib_ub48_group_6_0_ddin0),                                                             //  output,    width = 8,                    .ddin0
		.ddin0_en_6_0                   (axi_ufi_adpt_0_ub48_group_6_0_ddin0_en),                                               //   input,    width = 2,                    .ddin0_en
		.ddout1_6_0                     (axi_ufi_adpt_0_ub48_group_6_0_ddout1),                                                 //   input,    width = 8,                    .ddout1
		.ddout1_en_6_0                  (axi_ufi_adpt_0_ub48_group_6_0_ddout1_en),                                              //   input,    width = 2,                    .ddout1_en
		.ddin1_6_0                      (uib_ub48_group_6_0_ddin1),                                                             //  output,    width = 8,                    .ddin1
		.ddin1_en_6_0                   (axi_ufi_adpt_0_ub48_group_6_0_ddin1_en),                                               //   input,    width = 2,                    .ddin1_en
		.sdout0_6_1                     (axi_ufi_adpt_0_ub48_group_6_1_sdout0),                                                 //   input,   width = 80,      ub48_group_6_1.sdout0
		.sdout0_en_6_1                  (axi_ufi_adpt_0_ub48_group_6_1_sdout0_en),                                              //   input,    width = 2,                    .sdout0_en
		.sdin0_6_1                      (uib_ub48_group_6_1_sdin0),                                                             //  output,   width = 80,                    .sdin0
		.sdin0_en_6_1                   (axi_ufi_adpt_0_ub48_group_6_1_sdin0_en),                                               //   input,    width = 2,                    .sdin0_en
		.ddout0_6_1                     (axi_ufi_adpt_0_ub48_group_6_1_ddout0),                                                 //   input,    width = 8,                    .ddout0
		.ddout0_en_6_1                  (axi_ufi_adpt_0_ub48_group_6_1_ddout0_en),                                              //   input,    width = 2,                    .ddout0_en
		.ddin0_6_1                      (uib_ub48_group_6_1_ddin0),                                                             //  output,    width = 8,                    .ddin0
		.ddin0_en_6_1                   (axi_ufi_adpt_0_ub48_group_6_1_ddin0_en),                                               //   input,    width = 2,                    .ddin0_en
		.ddout1_6_1                     (axi_ufi_adpt_0_ub48_group_6_1_ddout1),                                                 //   input,    width = 8,                    .ddout1
		.ddout1_en_6_1                  (axi_ufi_adpt_0_ub48_group_6_1_ddout1_en),                                              //   input,    width = 2,                    .ddout1_en
		.ddin1_6_1                      (uib_ub48_group_6_1_ddin1),                                                             //  output,    width = 8,                    .ddin1
		.ddin1_en_6_1                   (axi_ufi_adpt_0_ub48_group_6_1_ddin1_en),                                               //   input,    width = 2,                    .ddin1_en
		.rden_0                         (axi_ufi_adpt_0_ub48_0_rden),                                                           //   input,    width = 2,              ub48_0.rden
		.rd_vld_0                       (uib_ub48_0_rd_vld),                                                                    //  output,    width = 2,                    .rd_vld
		.remap_sts_0                    (uib_ub48_0_remap_sts),                                                                 //  output,    width = 4,                    .remap_sts
		.rden_1                         (axi_ufi_adpt_0_ub48_1_rden),                                                           //   input,    width = 2,              ub48_1.rden
		.rd_vld_1                       (uib_ub48_1_rd_vld),                                                                    //  output,    width = 2,                    .rd_vld
		.remap_sts_1                    (uib_ub48_1_remap_sts),                                                                 //  output,    width = 4,                    .remap_sts
		.rden_4                         (axi_ufi_adpt_0_ub48_4_rden),                                                           //   input,    width = 2,              ub48_4.rden
		.rd_vld_4                       (uib_ub48_4_rd_vld),                                                                    //  output,    width = 2,                    .rd_vld
		.remap_sts_4                    (uib_ub48_4_remap_sts),                                                                 //  output,    width = 4,                    .remap_sts
		.rden_5                         (axi_ufi_adpt_0_ub48_5_rden),                                                           //   input,    width = 2,              ub48_5.rden
		.rd_vld_5                       (uib_ub48_5_rd_vld),                                                                    //  output,    width = 2,                    .rd_vld
		.remap_sts_5                    (uib_ub48_5_remap_sts),                                                                 //  output,    width = 4,                    .remap_sts
		.rden_6                         (axi_ufi_adpt_0_ub48_6_rden),                                                           //   input,    width = 2,              ub48_6.rden
		.rd_vld_6                       (uib_ub48_6_rd_vld),                                                                    //  output,    width = 2,                    .rd_vld
		.remap_sts_6                    (uib_ub48_6_remap_sts),                                                                 //  output,    width = 4,                    .remap_sts
		.axdout0_p0_0                   (axi_ufi_adpt_0_ufi_axi_extra_axdout0_p0),                                              //   input,   width = 30,     ufi_axi_extra_0.axdout0_p0
		.axdout0_p1_0                   (axi_ufi_adpt_0_ufi_axi_extra_axdout0_p1),                                              //   input,   width = 20,                    .axdout0_p1
		.axdout1_p0_0                   (axi_ufi_adpt_0_ufi_axi_extra_axdout1_p0),                                              //   input,   width = 30,                    .axdout1_p0
		.axdout1_p1_0                   (axi_ufi_adpt_0_ufi_axi_extra_axdout1_p1),                                              //   input,   width = 20,                    .axdout1_p1
		.ardout1_p0_0                   (axi_ufi_adpt_0_ufi_axi_extra_ardout1_p0),                                              //   input,   width = 50,                    .ardout1_p0
		.ardout1_p1_0                   (axi_ufi_adpt_0_ufi_axi_extra_ardout1_p1),                                              //   input,   width = 18,                    .ardout1_p1
		.ardout1_qos_0                  (axi_ufi_adpt_0_ufi_axi_extra_ardout1_qos),                                             //   input,    width = 2,                    .ardout1_qos
		.ardout1_ap_0                   (axi_ufi_adpt_0_ufi_axi_extra_ardout1_ap),                                              //   input,    width = 2,                    .ardout1_ap
		.ardout1_vld_0                  (axi_ufi_adpt_0_ufi_axi_extra_ardout1_vld),                                             //   input,    width = 2,                    .ardout1_vld
		.ardout3_p0_0                   (axi_ufi_adpt_0_ufi_axi_extra_ardout3_p0),                                              //   input,   width = 50,                    .ardout3_p0
		.ardout3_p1_0                   (axi_ufi_adpt_0_ufi_axi_extra_ardout3_p1),                                              //   input,   width = 18,                    .ardout3_p1
		.ardout3_qos_0                  (axi_ufi_adpt_0_ufi_axi_extra_ardout3_qos),                                             //   input,    width = 2,                    .ardout3_qos
		.ardout3_ap_0                   (axi_ufi_adpt_0_ufi_axi_extra_ardout3_ap),                                              //   input,    width = 2,                    .ardout3_ap
		.ardout3_vld_0                  (axi_ufi_adpt_0_ufi_axi_extra_ardout3_vld),                                             //   input,    width = 2,                    .ardout3_vld
		.ardout0_p0_0                   (axi_ufi_adpt_0_ufi_axi_extra_ardout0_p0),                                              //   input,   width = 50,                    .ardout0_p0
		.ardout0_p1_0                   (axi_ufi_adpt_0_ufi_axi_extra_ardout0_p1),                                              //   input,   width = 18,                    .ardout0_p1
		.ardout0_qos_0                  (axi_ufi_adpt_0_ufi_axi_extra_ardout0_qos),                                             //   input,    width = 2,                    .ardout0_qos
		.ardout0_ap_0                   (axi_ufi_adpt_0_ufi_axi_extra_ardout0_ap),                                              //   input,    width = 2,                    .ardout0_ap
		.ardout2_p0_0                   (axi_ufi_adpt_0_ufi_axi_extra_ardout2_p0),                                              //   input,   width = 50,                    .ardout2_p0
		.ardout2_p1_0                   (axi_ufi_adpt_0_ufi_axi_extra_ardout2_p1),                                              //   input,   width = 18,                    .ardout2_p1
		.ardout2_ap_0                   (axi_ufi_adpt_0_ufi_axi_extra_ardout2_ap),                                              //   input,    width = 2,                    .ardout2_ap
		.ardout2_qos_0                  (axi_ufi_adpt_0_ufi_axi_extra_ardout2_qos),                                             //   input,    width = 2,                    .ardout2_qos
		.ck_t_0                         (ck_t_0),                                                                               //  output,    width = 1,               mem_0.ck_t
		.ck_c_0                         (ck_c_0),                                                                               //  output,    width = 1,                    .ck_c
		.cke_0                          (cke_0),                                                                                //  output,    width = 1,                    .cke
		.c_0                            (c_0),                                                                                  //  output,    width = 8,                    .c
		.r_0                            (r_0),                                                                                  //  output,    width = 6,                    .r
		.dq_0                           (dq_0),                                                                                 //   inout,  width = 128,                    .dq
		.dm_0                           (dm_0),                                                                                 //   inout,   width = 16,                    .dm
		.dbi_0                          (dbi_0),                                                                                //   inout,   width = 16,                    .dbi
		.par_0                          (par_0),                                                                                //   inout,    width = 4,                    .par
		.derr_0                         (derr_0),                                                                               //   inout,    width = 4,                    .derr
		.rdqs_t_0                       (rdqs_t_0),                                                                             //   input,    width = 4,                    .rdqs_t
		.rdqs_c_0                       (rdqs_c_0),                                                                             //   input,    width = 4,                    .rdqs_c
		.wdqs_t_0                       (wdqs_t_0),                                                                             //  output,    width = 4,                    .wdqs_t
		.wdqs_c_0                       (wdqs_c_0),                                                                             //  output,    width = 4,                    .wdqs_c
		.rd_0                           (rd_0),                                                                                 //   inout,    width = 8,                    .rd
		.rr_0                           (rr_0),                                                                                 //  output,    width = 1,                    .rr
		.rc_0                           (rc_0),                                                                                 //  output,    width = 1,                    .rc
		.aerr_0                         (aerr_0),                                                                               //   input,    width = 1,                    .aerr
		.cattrip                        (cattrip),                                                                              //   input,    width = 1,          m2u_bridge.cattrip
		.temp                           (temp),                                                                                 //   input,    width = 3,                    .temp
		.wso                            (wso),                                                                                  //   input,    width = 8,                    .wso
		.reset_n                        (reset_n),                                                                              //  output,    width = 1,                    .reset_n
		.wrst_n                         (wrst_n),                                                                               //  output,    width = 1,                    .wrst_n
		.wrck                           (wrck),                                                                                 //  output,    width = 1,                    .wrck
		.shiftwr                        (shiftwr),                                                                              //  output,    width = 1,                    .shiftwr
		.capturewr                      (capturewr),                                                                            //  output,    width = 1,                    .capturewr
		.updatewr                       (updatewr),                                                                             //  output,    width = 1,                    .updatewr
		.selectwir                      (selectwir),                                                                            //  output,    width = 1,                    .selectwir
		.wsi                            (wsi),                                                                                  //  output,    width = 1,                    .wsi
		.sdout0_2_0                     (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_2_0                  (2'b00),                                                                                // (terminated),                                   
		.sdin0_2_0                      (),                                                                                     // (terminated),                                   
		.sdin0_en_2_0                   (2'b00),                                                                                // (terminated),                                   
		.ddout0_2_0                     (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_2_0                  (2'b00),                                                                                // (terminated),                                   
		.ddin0_2_0                      (),                                                                                     // (terminated),                                   
		.ddin0_en_2_0                   (2'b00),                                                                                // (terminated),                                   
		.ddout1_2_0                     (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_2_0                  (2'b00),                                                                                // (terminated),                                   
		.ddin1_2_0                      (),                                                                                     // (terminated),                                   
		.ddin1_en_2_0                   (2'b00),                                                                                // (terminated),                                   
		.sdout0_2_1                     (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_2_1                  (2'b00),                                                                                // (terminated),                                   
		.sdin0_2_1                      (),                                                                                     // (terminated),                                   
		.sdin0_en_2_1                   (2'b00),                                                                                // (terminated),                                   
		.ddout0_2_1                     (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_2_1                  (2'b00),                                                                                // (terminated),                                   
		.ddin0_2_1                      (),                                                                                     // (terminated),                                   
		.ddin0_en_2_1                   (2'b00),                                                                                // (terminated),                                   
		.ddout1_2_1                     (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_2_1                  (2'b00),                                                                                // (terminated),                                   
		.ddin1_2_1                      (),                                                                                     // (terminated),                                   
		.ddin1_en_2_1                   (2'b00),                                                                                // (terminated),                                   
		.sdout0_3_0                     (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_3_0                  (2'b00),                                                                                // (terminated),                                   
		.sdin0_3_0                      (),                                                                                     // (terminated),                                   
		.sdin0_en_3_0                   (2'b00),                                                                                // (terminated),                                   
		.ddout0_3_0                     (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_3_0                  (2'b00),                                                                                // (terminated),                                   
		.ddin0_3_0                      (),                                                                                     // (terminated),                                   
		.ddin0_en_3_0                   (2'b00),                                                                                // (terminated),                                   
		.ddout1_3_0                     (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_3_0                  (2'b00),                                                                                // (terminated),                                   
		.ddin1_3_0                      (),                                                                                     // (terminated),                                   
		.ddin1_en_3_0                   (2'b00),                                                                                // (terminated),                                   
		.sdout0_3_1                     (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_3_1                  (2'b00),                                                                                // (terminated),                                   
		.sdin0_3_1                      (),                                                                                     // (terminated),                                   
		.sdin0_en_3_1                   (2'b00),                                                                                // (terminated),                                   
		.ddout0_3_1                     (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_3_1                  (2'b00),                                                                                // (terminated),                                   
		.ddin0_3_1                      (),                                                                                     // (terminated),                                   
		.ddin0_en_3_1                   (2'b00),                                                                                // (terminated),                                   
		.ddout1_3_1                     (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_3_1                  (2'b00),                                                                                // (terminated),                                   
		.ddin1_3_1                      (),                                                                                     // (terminated),                                   
		.ddin1_en_3_1                   (2'b00),                                                                                // (terminated),                                   
		.sdout0_7_0                     (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_7_0                  (2'b00),                                                                                // (terminated),                                   
		.sdin0_7_0                      (),                                                                                     // (terminated),                                   
		.sdin0_en_7_0                   (2'b00),                                                                                // (terminated),                                   
		.ddout0_7_0                     (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_7_0                  (2'b00),                                                                                // (terminated),                                   
		.ddin0_7_0                      (),                                                                                     // (terminated),                                   
		.ddin0_en_7_0                   (2'b00),                                                                                // (terminated),                                   
		.ddout1_7_0                     (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_7_0                  (2'b00),                                                                                // (terminated),                                   
		.ddin1_7_0                      (),                                                                                     // (terminated),                                   
		.ddin1_en_7_0                   (2'b00),                                                                                // (terminated),                                   
		.sdout0_7_1                     (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_7_1                  (2'b00),                                                                                // (terminated),                                   
		.sdin0_7_1                      (),                                                                                     // (terminated),                                   
		.sdin0_en_7_1                   (2'b00),                                                                                // (terminated),                                   
		.ddout0_7_1                     (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_7_1                  (2'b00),                                                                                // (terminated),                                   
		.ddin0_7_1                      (),                                                                                     // (terminated),                                   
		.ddin0_en_7_1                   (2'b00),                                                                                // (terminated),                                   
		.ddout1_7_1                     (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_7_1                  (2'b00),                                                                                // (terminated),                                   
		.ddin1_7_1                      (),                                                                                     // (terminated),                                   
		.ddin1_en_7_1                   (2'b00),                                                                                // (terminated),                                   
		.sdout0_8_0                     (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_8_0                  (2'b00),                                                                                // (terminated),                                   
		.sdin0_8_0                      (),                                                                                     // (terminated),                                   
		.sdin0_en_8_0                   (2'b00),                                                                                // (terminated),                                   
		.ddout0_8_0                     (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_8_0                  (2'b00),                                                                                // (terminated),                                   
		.ddin0_8_0                      (),                                                                                     // (terminated),                                   
		.ddin0_en_8_0                   (2'b00),                                                                                // (terminated),                                   
		.ddout1_8_0                     (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_8_0                  (2'b00),                                                                                // (terminated),                                   
		.ddin1_8_0                      (),                                                                                     // (terminated),                                   
		.ddin1_en_8_0                   (2'b00),                                                                                // (terminated),                                   
		.sdout0_8_1                     (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_8_1                  (2'b00),                                                                                // (terminated),                                   
		.sdin0_8_1                      (),                                                                                     // (terminated),                                   
		.sdin0_en_8_1                   (2'b00),                                                                                // (terminated),                                   
		.ddout0_8_1                     (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_8_1                  (2'b00),                                                                                // (terminated),                                   
		.ddin0_8_1                      (),                                                                                     // (terminated),                                   
		.ddin0_en_8_1                   (2'b00),                                                                                // (terminated),                                   
		.ddout1_8_1                     (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_8_1                  (2'b00),                                                                                // (terminated),                                   
		.ddin1_8_1                      (),                                                                                     // (terminated),                                   
		.ddin1_en_8_1                   (2'b00),                                                                                // (terminated),                                   
		.sdout0_9_0                     (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_9_0                  (2'b00),                                                                                // (terminated),                                   
		.sdin0_9_0                      (),                                                                                     // (terminated),                                   
		.sdin0_en_9_0                   (2'b00),                                                                                // (terminated),                                   
		.ddout0_9_0                     (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_9_0                  (2'b00),                                                                                // (terminated),                                   
		.ddin0_9_0                      (),                                                                                     // (terminated),                                   
		.ddin0_en_9_0                   (2'b00),                                                                                // (terminated),                                   
		.ddout1_9_0                     (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_9_0                  (2'b00),                                                                                // (terminated),                                   
		.ddin1_9_0                      (),                                                                                     // (terminated),                                   
		.ddin1_en_9_0                   (2'b00),                                                                                // (terminated),                                   
		.sdout0_9_1                     (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_9_1                  (2'b00),                                                                                // (terminated),                                   
		.sdin0_9_1                      (),                                                                                     // (terminated),                                   
		.sdin0_en_9_1                   (2'b00),                                                                                // (terminated),                                   
		.ddout0_9_1                     (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_9_1                  (2'b00),                                                                                // (terminated),                                   
		.ddin0_9_1                      (),                                                                                     // (terminated),                                   
		.ddin0_en_9_1                   (2'b00),                                                                                // (terminated),                                   
		.ddout1_9_1                     (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_9_1                  (2'b00),                                                                                // (terminated),                                   
		.ddin1_9_1                      (),                                                                                     // (terminated),                                   
		.ddin1_en_9_1                   (2'b00),                                                                                // (terminated),                                   
		.sdout0_10_0                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_10_0                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_10_0                     (),                                                                                     // (terminated),                                   
		.sdin0_en_10_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_10_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_10_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_10_0                     (),                                                                                     // (terminated),                                   
		.ddin0_en_10_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_10_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_10_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_10_0                     (),                                                                                     // (terminated),                                   
		.ddin1_en_10_0                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_10_1                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_10_1                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_10_1                     (),                                                                                     // (terminated),                                   
		.sdin0_en_10_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_10_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_10_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_10_1                     (),                                                                                     // (terminated),                                   
		.ddin0_en_10_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_10_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_10_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_10_1                     (),                                                                                     // (terminated),                                   
		.ddin1_en_10_1                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_11_0                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_11_0                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_11_0                     (),                                                                                     // (terminated),                                   
		.sdin0_en_11_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_11_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_11_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_11_0                     (),                                                                                     // (terminated),                                   
		.ddin0_en_11_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_11_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_11_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_11_0                     (),                                                                                     // (terminated),                                   
		.ddin1_en_11_0                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_11_1                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_11_1                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_11_1                     (),                                                                                     // (terminated),                                   
		.sdin0_en_11_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_11_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_11_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_11_1                     (),                                                                                     // (terminated),                                   
		.ddin0_en_11_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_11_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_11_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_11_1                     (),                                                                                     // (terminated),                                   
		.ddin1_en_11_1                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_12_0                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_12_0                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_12_0                     (),                                                                                     // (terminated),                                   
		.sdin0_en_12_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_12_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_12_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_12_0                     (),                                                                                     // (terminated),                                   
		.ddin0_en_12_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_12_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_12_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_12_0                     (),                                                                                     // (terminated),                                   
		.ddin1_en_12_0                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_12_1                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_12_1                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_12_1                     (),                                                                                     // (terminated),                                   
		.sdin0_en_12_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_12_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_12_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_12_1                     (),                                                                                     // (terminated),                                   
		.ddin0_en_12_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_12_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_12_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_12_1                     (),                                                                                     // (terminated),                                   
		.ddin1_en_12_1                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_13_0                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_13_0                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_13_0                     (),                                                                                     // (terminated),                                   
		.sdin0_en_13_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_13_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_13_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_13_0                     (),                                                                                     // (terminated),                                   
		.ddin0_en_13_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_13_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_13_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_13_0                     (),                                                                                     // (terminated),                                   
		.ddin1_en_13_0                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_13_1                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_13_1                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_13_1                     (),                                                                                     // (terminated),                                   
		.sdin0_en_13_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_13_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_13_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_13_1                     (),                                                                                     // (terminated),                                   
		.ddin0_en_13_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_13_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_13_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_13_1                     (),                                                                                     // (terminated),                                   
		.ddin1_en_13_1                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_14_0                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_14_0                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_14_0                     (),                                                                                     // (terminated),                                   
		.sdin0_en_14_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_14_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_14_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_14_0                     (),                                                                                     // (terminated),                                   
		.ddin0_en_14_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_14_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_14_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_14_0                     (),                                                                                     // (terminated),                                   
		.ddin1_en_14_0                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_14_1                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_14_1                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_14_1                     (),                                                                                     // (terminated),                                   
		.sdin0_en_14_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_14_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_14_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_14_1                     (),                                                                                     // (terminated),                                   
		.ddin0_en_14_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_14_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_14_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_14_1                     (),                                                                                     // (terminated),                                   
		.ddin1_en_14_1                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_15_0                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_15_0                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_15_0                     (),                                                                                     // (terminated),                                   
		.sdin0_en_15_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_15_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_15_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_15_0                     (),                                                                                     // (terminated),                                   
		.ddin0_en_15_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_15_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_15_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_15_0                     (),                                                                                     // (terminated),                                   
		.ddin1_en_15_0                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_15_1                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_15_1                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_15_1                     (),                                                                                     // (terminated),                                   
		.sdin0_en_15_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_15_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_15_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_15_1                     (),                                                                                     // (terminated),                                   
		.ddin0_en_15_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_15_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_15_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_15_1                     (),                                                                                     // (terminated),                                   
		.ddin1_en_15_1                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_16_0                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_16_0                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_16_0                     (),                                                                                     // (terminated),                                   
		.sdin0_en_16_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_16_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_16_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_16_0                     (),                                                                                     // (terminated),                                   
		.ddin0_en_16_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_16_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_16_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_16_0                     (),                                                                                     // (terminated),                                   
		.ddin1_en_16_0                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_16_1                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_16_1                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_16_1                     (),                                                                                     // (terminated),                                   
		.sdin0_en_16_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_16_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_16_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_16_1                     (),                                                                                     // (terminated),                                   
		.ddin0_en_16_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_16_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_16_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_16_1                     (),                                                                                     // (terminated),                                   
		.ddin1_en_16_1                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_17_0                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_17_0                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_17_0                     (),                                                                                     // (terminated),                                   
		.sdin0_en_17_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_17_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_17_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_17_0                     (),                                                                                     // (terminated),                                   
		.ddin0_en_17_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_17_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_17_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_17_0                     (),                                                                                     // (terminated),                                   
		.ddin1_en_17_0                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_17_1                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_17_1                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_17_1                     (),                                                                                     // (terminated),                                   
		.sdin0_en_17_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_17_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_17_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_17_1                     (),                                                                                     // (terminated),                                   
		.ddin0_en_17_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_17_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_17_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_17_1                     (),                                                                                     // (terminated),                                   
		.ddin1_en_17_1                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_18_0                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_18_0                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_18_0                     (),                                                                                     // (terminated),                                   
		.sdin0_en_18_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_18_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_18_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_18_0                     (),                                                                                     // (terminated),                                   
		.ddin0_en_18_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_18_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_18_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_18_0                     (),                                                                                     // (terminated),                                   
		.ddin1_en_18_0                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_18_1                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_18_1                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_18_1                     (),                                                                                     // (terminated),                                   
		.sdin0_en_18_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_18_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_18_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_18_1                     (),                                                                                     // (terminated),                                   
		.ddin0_en_18_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_18_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_18_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_18_1                     (),                                                                                     // (terminated),                                   
		.ddin1_en_18_1                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_19_0                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_19_0                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_19_0                     (),                                                                                     // (terminated),                                   
		.sdin0_en_19_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_19_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_19_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_19_0                     (),                                                                                     // (terminated),                                   
		.ddin0_en_19_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_19_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_19_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_19_0                     (),                                                                                     // (terminated),                                   
		.ddin1_en_19_0                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_19_1                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_19_1                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_19_1                     (),                                                                                     // (terminated),                                   
		.sdin0_en_19_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_19_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_19_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_19_1                     (),                                                                                     // (terminated),                                   
		.ddin0_en_19_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_19_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_19_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_19_1                     (),                                                                                     // (terminated),                                   
		.ddin1_en_19_1                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_20_0                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_20_0                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_20_0                     (),                                                                                     // (terminated),                                   
		.sdin0_en_20_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_20_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_20_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_20_0                     (),                                                                                     // (terminated),                                   
		.ddin0_en_20_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_20_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_20_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_20_0                     (),                                                                                     // (terminated),                                   
		.ddin1_en_20_0                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_20_1                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_20_1                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_20_1                     (),                                                                                     // (terminated),                                   
		.sdin0_en_20_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_20_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_20_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_20_1                     (),                                                                                     // (terminated),                                   
		.ddin0_en_20_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_20_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_20_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_20_1                     (),                                                                                     // (terminated),                                   
		.ddin1_en_20_1                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_21_0                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_21_0                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_21_0                     (),                                                                                     // (terminated),                                   
		.sdin0_en_21_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_21_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_21_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_21_0                     (),                                                                                     // (terminated),                                   
		.ddin0_en_21_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_21_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_21_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_21_0                     (),                                                                                     // (terminated),                                   
		.ddin1_en_21_0                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_21_1                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_21_1                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_21_1                     (),                                                                                     // (terminated),                                   
		.sdin0_en_21_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_21_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_21_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_21_1                     (),                                                                                     // (terminated),                                   
		.ddin0_en_21_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_21_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_21_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_21_1                     (),                                                                                     // (terminated),                                   
		.ddin1_en_21_1                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_22_0                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_22_0                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_22_0                     (),                                                                                     // (terminated),                                   
		.sdin0_en_22_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_22_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_22_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_22_0                     (),                                                                                     // (terminated),                                   
		.ddin0_en_22_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_22_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_22_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_22_0                     (),                                                                                     // (terminated),                                   
		.ddin1_en_22_0                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_22_1                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_22_1                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_22_1                     (),                                                                                     // (terminated),                                   
		.sdin0_en_22_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_22_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_22_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_22_1                     (),                                                                                     // (terminated),                                   
		.ddin0_en_22_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_22_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_22_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_22_1                     (),                                                                                     // (terminated),                                   
		.ddin1_en_22_1                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_23_0                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_23_0                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_23_0                     (),                                                                                     // (terminated),                                   
		.sdin0_en_23_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_23_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_23_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_23_0                     (),                                                                                     // (terminated),                                   
		.ddin0_en_23_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_23_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_23_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_23_0                     (),                                                                                     // (terminated),                                   
		.ddin1_en_23_0                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_23_1                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_23_1                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_23_1                     (),                                                                                     // (terminated),                                   
		.sdin0_en_23_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_23_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_23_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_23_1                     (),                                                                                     // (terminated),                                   
		.ddin0_en_23_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_23_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_23_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_23_1                     (),                                                                                     // (terminated),                                   
		.ddin1_en_23_1                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_24_0                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_24_0                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_24_0                     (),                                                                                     // (terminated),                                   
		.sdin0_en_24_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_24_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_24_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_24_0                     (),                                                                                     // (terminated),                                   
		.ddin0_en_24_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_24_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_24_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_24_0                     (),                                                                                     // (terminated),                                   
		.ddin1_en_24_0                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_24_1                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_24_1                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_24_1                     (),                                                                                     // (terminated),                                   
		.sdin0_en_24_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_24_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_24_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_24_1                     (),                                                                                     // (terminated),                                   
		.ddin0_en_24_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_24_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_24_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_24_1                     (),                                                                                     // (terminated),                                   
		.ddin1_en_24_1                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_25_0                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_25_0                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_25_0                     (),                                                                                     // (terminated),                                   
		.sdin0_en_25_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_25_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_25_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_25_0                     (),                                                                                     // (terminated),                                   
		.ddin0_en_25_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_25_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_25_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_25_0                     (),                                                                                     // (terminated),                                   
		.ddin1_en_25_0                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_25_1                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_25_1                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_25_1                     (),                                                                                     // (terminated),                                   
		.sdin0_en_25_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_25_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_25_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_25_1                     (),                                                                                     // (terminated),                                   
		.ddin0_en_25_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_25_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_25_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_25_1                     (),                                                                                     // (terminated),                                   
		.ddin1_en_25_1                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_26_0                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_26_0                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_26_0                     (),                                                                                     // (terminated),                                   
		.sdin0_en_26_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_26_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_26_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_26_0                     (),                                                                                     // (terminated),                                   
		.ddin0_en_26_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_26_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_26_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_26_0                     (),                                                                                     // (terminated),                                   
		.ddin1_en_26_0                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_26_1                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_26_1                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_26_1                     (),                                                                                     // (terminated),                                   
		.sdin0_en_26_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_26_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_26_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_26_1                     (),                                                                                     // (terminated),                                   
		.ddin0_en_26_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_26_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_26_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_26_1                     (),                                                                                     // (terminated),                                   
		.ddin1_en_26_1                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_27_0                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_27_0                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_27_0                     (),                                                                                     // (terminated),                                   
		.sdin0_en_27_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_27_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_27_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_27_0                     (),                                                                                     // (terminated),                                   
		.ddin0_en_27_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_27_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_27_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_27_0                     (),                                                                                     // (terminated),                                   
		.ddin1_en_27_0                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_27_1                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_27_1                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_27_1                     (),                                                                                     // (terminated),                                   
		.sdin0_en_27_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_27_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_27_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_27_1                     (),                                                                                     // (terminated),                                   
		.ddin0_en_27_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_27_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_27_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_27_1                     (),                                                                                     // (terminated),                                   
		.ddin1_en_27_1                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_28_0                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_28_0                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_28_0                     (),                                                                                     // (terminated),                                   
		.sdin0_en_28_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_28_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_28_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_28_0                     (),                                                                                     // (terminated),                                   
		.ddin0_en_28_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_28_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_28_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_28_0                     (),                                                                                     // (terminated),                                   
		.ddin1_en_28_0                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_28_1                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_28_1                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_28_1                     (),                                                                                     // (terminated),                                   
		.sdin0_en_28_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_28_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_28_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_28_1                     (),                                                                                     // (terminated),                                   
		.ddin0_en_28_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_28_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_28_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_28_1                     (),                                                                                     // (terminated),                                   
		.ddin1_en_28_1                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_29_0                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_29_0                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_29_0                     (),                                                                                     // (terminated),                                   
		.sdin0_en_29_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_29_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_29_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_29_0                     (),                                                                                     // (terminated),                                   
		.ddin0_en_29_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_29_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_29_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_29_0                     (),                                                                                     // (terminated),                                   
		.ddin1_en_29_0                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_29_1                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_29_1                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_29_1                     (),                                                                                     // (terminated),                                   
		.sdin0_en_29_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_29_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_29_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_29_1                     (),                                                                                     // (terminated),                                   
		.ddin0_en_29_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_29_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_29_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_29_1                     (),                                                                                     // (terminated),                                   
		.ddin1_en_29_1                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_30_0                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_30_0                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_30_0                     (),                                                                                     // (terminated),                                   
		.sdin0_en_30_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_30_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_30_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_30_0                     (),                                                                                     // (terminated),                                   
		.ddin0_en_30_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_30_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_30_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_30_0                     (),                                                                                     // (terminated),                                   
		.ddin1_en_30_0                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_30_1                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_30_1                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_30_1                     (),                                                                                     // (terminated),                                   
		.sdin0_en_30_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_30_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_30_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_30_1                     (),                                                                                     // (terminated),                                   
		.ddin0_en_30_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_30_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_30_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_30_1                     (),                                                                                     // (terminated),                                   
		.ddin1_en_30_1                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_31_0                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_31_0                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_31_0                     (),                                                                                     // (terminated),                                   
		.sdin0_en_31_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_31_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_31_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_31_0                     (),                                                                                     // (terminated),                                   
		.ddin0_en_31_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_31_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_31_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_31_0                     (),                                                                                     // (terminated),                                   
		.ddin1_en_31_0                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_31_1                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_31_1                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_31_1                     (),                                                                                     // (terminated),                                   
		.sdin0_en_31_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_31_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_31_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_31_1                     (),                                                                                     // (terminated),                                   
		.ddin0_en_31_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_31_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_31_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_31_1                     (),                                                                                     // (terminated),                                   
		.ddin1_en_31_1                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_32_0                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_32_0                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_32_0                     (),                                                                                     // (terminated),                                   
		.sdin0_en_32_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_32_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_32_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_32_0                     (),                                                                                     // (terminated),                                   
		.ddin0_en_32_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_32_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_32_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_32_0                     (),                                                                                     // (terminated),                                   
		.ddin1_en_32_0                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_32_1                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_32_1                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_32_1                     (),                                                                                     // (terminated),                                   
		.sdin0_en_32_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_32_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_32_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_32_1                     (),                                                                                     // (terminated),                                   
		.ddin0_en_32_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_32_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_32_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_32_1                     (),                                                                                     // (terminated),                                   
		.ddin1_en_32_1                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_33_0                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_33_0                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_33_0                     (),                                                                                     // (terminated),                                   
		.sdin0_en_33_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_33_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_33_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_33_0                     (),                                                                                     // (terminated),                                   
		.ddin0_en_33_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_33_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_33_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_33_0                     (),                                                                                     // (terminated),                                   
		.ddin1_en_33_0                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_33_1                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_33_1                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_33_1                     (),                                                                                     // (terminated),                                   
		.sdin0_en_33_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_33_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_33_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_33_1                     (),                                                                                     // (terminated),                                   
		.ddin0_en_33_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_33_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_33_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_33_1                     (),                                                                                     // (terminated),                                   
		.ddin1_en_33_1                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_34_0                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_34_0                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_34_0                     (),                                                                                     // (terminated),                                   
		.sdin0_en_34_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_34_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_34_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_34_0                     (),                                                                                     // (terminated),                                   
		.ddin0_en_34_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_34_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_34_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_34_0                     (),                                                                                     // (terminated),                                   
		.ddin1_en_34_0                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_34_1                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_34_1                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_34_1                     (),                                                                                     // (terminated),                                   
		.sdin0_en_34_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_34_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_34_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_34_1                     (),                                                                                     // (terminated),                                   
		.ddin0_en_34_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_34_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_34_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_34_1                     (),                                                                                     // (terminated),                                   
		.ddin1_en_34_1                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_35_0                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_35_0                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_35_0                     (),                                                                                     // (terminated),                                   
		.sdin0_en_35_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_35_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_35_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_35_0                     (),                                                                                     // (terminated),                                   
		.ddin0_en_35_0                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_35_0                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_35_0                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_35_0                     (),                                                                                     // (terminated),                                   
		.ddin1_en_35_0                  (2'b00),                                                                                // (terminated),                                   
		.sdout0_35_1                    (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                   
		.sdout0_en_35_1                 (2'b00),                                                                                // (terminated),                                   
		.sdin0_35_1                     (),                                                                                     // (terminated),                                   
		.sdin0_en_35_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout0_35_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout0_en_35_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin0_35_1                     (),                                                                                     // (terminated),                                   
		.ddin0_en_35_1                  (2'b00),                                                                                // (terminated),                                   
		.ddout1_35_1                    (8'b00000000),                                                                          // (terminated),                                   
		.ddout1_en_35_1                 (2'b00),                                                                                // (terminated),                                   
		.ddin1_35_1                     (),                                                                                     // (terminated),                                   
		.ddin1_en_35_1                  (2'b00),                                                                                // (terminated),                                   
		.rden_2                         (2'b00),                                                                                // (terminated),                                   
		.rd_vld_2                       (),                                                                                     // (terminated),                                   
		.remap_sts_2                    (),                                                                                     // (terminated),                                   
		.rden_3                         (2'b00),                                                                                // (terminated),                                   
		.rd_vld_3                       (),                                                                                     // (terminated),                                   
		.remap_sts_3                    (),                                                                                     // (terminated),                                   
		.rden_7                         (2'b00),                                                                                // (terminated),                                   
		.rd_vld_7                       (),                                                                                     // (terminated),                                   
		.remap_sts_7                    (),                                                                                     // (terminated),                                   
		.rden_8                         (2'b00),                                                                                // (terminated),                                   
		.rd_vld_8                       (),                                                                                     // (terminated),                                   
		.remap_sts_8                    (),                                                                                     // (terminated),                                   
		.rden_9                         (2'b00),                                                                                // (terminated),                                   
		.rd_vld_9                       (),                                                                                     // (terminated),                                   
		.remap_sts_9                    (),                                                                                     // (terminated),                                   
		.rden_10                        (2'b00),                                                                                // (terminated),                                   
		.rd_vld_10                      (),                                                                                     // (terminated),                                   
		.remap_sts_10                   (),                                                                                     // (terminated),                                   
		.rden_11                        (2'b00),                                                                                // (terminated),                                   
		.rd_vld_11                      (),                                                                                     // (terminated),                                   
		.remap_sts_11                   (),                                                                                     // (terminated),                                   
		.rden_12                        (2'b00),                                                                                // (terminated),                                   
		.rd_vld_12                      (),                                                                                     // (terminated),                                   
		.remap_sts_12                   (),                                                                                     // (terminated),                                   
		.rden_13                        (2'b00),                                                                                // (terminated),                                   
		.rd_vld_13                      (),                                                                                     // (terminated),                                   
		.remap_sts_13                   (),                                                                                     // (terminated),                                   
		.rden_14                        (2'b00),                                                                                // (terminated),                                   
		.rd_vld_14                      (),                                                                                     // (terminated),                                   
		.remap_sts_14                   (),                                                                                     // (terminated),                                   
		.rden_15                        (2'b00),                                                                                // (terminated),                                   
		.rd_vld_15                      (),                                                                                     // (terminated),                                   
		.remap_sts_15                   (),                                                                                     // (terminated),                                   
		.rden_16                        (2'b00),                                                                                // (terminated),                                   
		.rd_vld_16                      (),                                                                                     // (terminated),                                   
		.remap_sts_16                   (),                                                                                     // (terminated),                                   
		.rden_17                        (2'b00),                                                                                // (terminated),                                   
		.rd_vld_17                      (),                                                                                     // (terminated),                                   
		.remap_sts_17                   (),                                                                                     // (terminated),                                   
		.rden_18                        (2'b00),                                                                                // (terminated),                                   
		.rd_vld_18                      (),                                                                                     // (terminated),                                   
		.remap_sts_18                   (),                                                                                     // (terminated),                                   
		.rden_19                        (2'b00),                                                                                // (terminated),                                   
		.rd_vld_19                      (),                                                                                     // (terminated),                                   
		.remap_sts_19                   (),                                                                                     // (terminated),                                   
		.rden_20                        (2'b00),                                                                                // (terminated),                                   
		.rd_vld_20                      (),                                                                                     // (terminated),                                   
		.remap_sts_20                   (),                                                                                     // (terminated),                                   
		.rden_21                        (2'b00),                                                                                // (terminated),                                   
		.rd_vld_21                      (),                                                                                     // (terminated),                                   
		.remap_sts_21                   (),                                                                                     // (terminated),                                   
		.rden_22                        (2'b00),                                                                                // (terminated),                                   
		.rd_vld_22                      (),                                                                                     // (terminated),                                   
		.remap_sts_22                   (),                                                                                     // (terminated),                                   
		.rden_23                        (2'b00),                                                                                // (terminated),                                   
		.rd_vld_23                      (),                                                                                     // (terminated),                                   
		.remap_sts_23                   (),                                                                                     // (terminated),                                   
		.rden_24                        (2'b00),                                                                                // (terminated),                                   
		.rd_vld_24                      (),                                                                                     // (terminated),                                   
		.remap_sts_24                   (),                                                                                     // (terminated),                                   
		.rden_25                        (2'b00),                                                                                // (terminated),                                   
		.rd_vld_25                      (),                                                                                     // (terminated),                                   
		.remap_sts_25                   (),                                                                                     // (terminated),                                   
		.rden_26                        (2'b00),                                                                                // (terminated),                                   
		.rd_vld_26                      (),                                                                                     // (terminated),                                   
		.remap_sts_26                   (),                                                                                     // (terminated),                                   
		.rden_27                        (2'b00),                                                                                // (terminated),                                   
		.rd_vld_27                      (),                                                                                     // (terminated),                                   
		.remap_sts_27                   (),                                                                                     // (terminated),                                   
		.rden_28                        (2'b00),                                                                                // (terminated),                                   
		.rd_vld_28                      (),                                                                                     // (terminated),                                   
		.remap_sts_28                   (),                                                                                     // (terminated),                                   
		.rden_29                        (2'b00),                                                                                // (terminated),                                   
		.rd_vld_29                      (),                                                                                     // (terminated),                                   
		.remap_sts_29                   (),                                                                                     // (terminated),                                   
		.rden_30                        (2'b00),                                                                                // (terminated),                                   
		.rd_vld_30                      (),                                                                                     // (terminated),                                   
		.remap_sts_30                   (),                                                                                     // (terminated),                                   
		.rden_31                        (2'b00),                                                                                // (terminated),                                   
		.rd_vld_31                      (),                                                                                     // (terminated),                                   
		.remap_sts_31                   (),                                                                                     // (terminated),                                   
		.rden_32                        (2'b00),                                                                                // (terminated),                                   
		.rd_vld_32                      (),                                                                                     // (terminated),                                   
		.remap_sts_32                   (),                                                                                     // (terminated),                                   
		.rden_33                        (2'b00),                                                                                // (terminated),                                   
		.rd_vld_33                      (),                                                                                     // (terminated),                                   
		.remap_sts_33                   (),                                                                                     // (terminated),                                   
		.rden_34                        (2'b00),                                                                                // (terminated),                                   
		.rd_vld_34                      (),                                                                                     // (terminated),                                   
		.remap_sts_34                   (),                                                                                     // (terminated),                                   
		.rden_35                        (2'b00),                                                                                // (terminated),                                   
		.rd_vld_35                      (),                                                                                     // (terminated),                                   
		.remap_sts_35                   (),                                                                                     // (terminated),                                   
		.axdout0_p0_1                   (30'b000000000000000000000000000000),                                                   // (terminated),                                   
		.axdout0_p1_1                   (20'b00000000000000000000),                                                             // (terminated),                                   
		.axdout1_p0_1                   (30'b000000000000000000000000000000),                                                   // (terminated),                                   
		.axdout1_p1_1                   (20'b00000000000000000000),                                                             // (terminated),                                   
		.ardout1_p0_1                   (50'b00000000000000000000000000000000000000000000000000),                               // (terminated),                                   
		.ardout1_p1_1                   (18'b000000000000000000),                                                               // (terminated),                                   
		.ardout1_qos_1                  (2'b00),                                                                                // (terminated),                                   
		.ardout1_ap_1                   (2'b00),                                                                                // (terminated),                                   
		.ardout1_vld_1                  (2'b00),                                                                                // (terminated),                                   
		.ardout3_p0_1                   (50'b00000000000000000000000000000000000000000000000000),                               // (terminated),                                   
		.ardout3_p1_1                   (18'b000000000000000000),                                                               // (terminated),                                   
		.ardout3_qos_1                  (2'b00),                                                                                // (terminated),                                   
		.ardout3_ap_1                   (2'b00),                                                                                // (terminated),                                   
		.ardout3_vld_1                  (2'b00),                                                                                // (terminated),                                   
		.ardout0_p0_1                   (50'b00000000000000000000000000000000000000000000000000),                               // (terminated),                                   
		.ardout0_p1_1                   (18'b000000000000000000),                                                               // (terminated),                                   
		.ardout0_qos_1                  (2'b00),                                                                                // (terminated),                                   
		.ardout0_ap_1                   (2'b00),                                                                                // (terminated),                                   
		.ardout2_p0_1                   (50'b00000000000000000000000000000000000000000000000000),                               // (terminated),                                   
		.ardout2_p1_1                   (18'b000000000000000000),                                                               // (terminated),                                   
		.ardout2_ap_1                   (2'b00),                                                                                // (terminated),                                   
		.ardout2_qos_1                  (2'b00),                                                                                // (terminated),                                   
		.axdout0_p0_2                   (30'b000000000000000000000000000000),                                                   // (terminated),                                   
		.axdout0_p1_2                   (20'b00000000000000000000),                                                             // (terminated),                                   
		.axdout1_p0_2                   (30'b000000000000000000000000000000),                                                   // (terminated),                                   
		.axdout1_p1_2                   (20'b00000000000000000000),                                                             // (terminated),                                   
		.ardout1_p0_2                   (50'b00000000000000000000000000000000000000000000000000),                               // (terminated),                                   
		.ardout1_p1_2                   (18'b000000000000000000),                                                               // (terminated),                                   
		.ardout1_qos_2                  (2'b00),                                                                                // (terminated),                                   
		.ardout1_ap_2                   (2'b00),                                                                                // (terminated),                                   
		.ardout1_vld_2                  (2'b00),                                                                                // (terminated),                                   
		.ardout3_p0_2                   (50'b00000000000000000000000000000000000000000000000000),                               // (terminated),                                   
		.ardout3_p1_2                   (18'b000000000000000000),                                                               // (terminated),                                   
		.ardout3_qos_2                  (2'b00),                                                                                // (terminated),                                   
		.ardout3_ap_2                   (2'b00),                                                                                // (terminated),                                   
		.ardout3_vld_2                  (2'b00),                                                                                // (terminated),                                   
		.ardout0_p0_2                   (50'b00000000000000000000000000000000000000000000000000),                               // (terminated),                                   
		.ardout0_p1_2                   (18'b000000000000000000),                                                               // (terminated),                                   
		.ardout0_qos_2                  (2'b00),                                                                                // (terminated),                                   
		.ardout0_ap_2                   (2'b00),                                                                                // (terminated),                                   
		.ardout2_p0_2                   (50'b00000000000000000000000000000000000000000000000000),                               // (terminated),                                   
		.ardout2_p1_2                   (18'b000000000000000000),                                                               // (terminated),                                   
		.ardout2_ap_2                   (2'b00),                                                                                // (terminated),                                   
		.ardout2_qos_2                  (2'b00),                                                                                // (terminated),                                   
		.axdout0_p0_3                   (30'b000000000000000000000000000000),                                                   // (terminated),                                   
		.axdout0_p1_3                   (20'b00000000000000000000),                                                             // (terminated),                                   
		.axdout1_p0_3                   (30'b000000000000000000000000000000),                                                   // (terminated),                                   
		.axdout1_p1_3                   (20'b00000000000000000000),                                                             // (terminated),                                   
		.ardout1_p0_3                   (50'b00000000000000000000000000000000000000000000000000),                               // (terminated),                                   
		.ardout1_p1_3                   (18'b000000000000000000),                                                               // (terminated),                                   
		.ardout1_qos_3                  (2'b00),                                                                                // (terminated),                                   
		.ardout1_ap_3                   (2'b00),                                                                                // (terminated),                                   
		.ardout1_vld_3                  (2'b00),                                                                                // (terminated),                                   
		.ardout3_p0_3                   (50'b00000000000000000000000000000000000000000000000000),                               // (terminated),                                   
		.ardout3_p1_3                   (18'b000000000000000000),                                                               // (terminated),                                   
		.ardout3_qos_3                  (2'b00),                                                                                // (terminated),                                   
		.ardout3_ap_3                   (2'b00),                                                                                // (terminated),                                   
		.ardout3_vld_3                  (2'b00),                                                                                // (terminated),                                   
		.ardout0_p0_3                   (50'b00000000000000000000000000000000000000000000000000),                               // (terminated),                                   
		.ardout0_p1_3                   (18'b000000000000000000),                                                               // (terminated),                                   
		.ardout0_qos_3                  (2'b00),                                                                                // (terminated),                                   
		.ardout0_ap_3                   (2'b00),                                                                                // (terminated),                                   
		.ardout2_p0_3                   (50'b00000000000000000000000000000000000000000000000000),                               // (terminated),                                   
		.ardout2_p1_3                   (18'b000000000000000000),                                                               // (terminated),                                   
		.ardout2_ap_3                   (2'b00),                                                                                // (terminated),                                   
		.ardout2_qos_3                  (2'b00),                                                                                // (terminated),                                   
		.ck_t_1                         (),                                                                                     // (terminated),                                   
		.ck_c_1                         (),                                                                                     // (terminated),                                   
		.cke_1                          (),                                                                                     // (terminated),                                   
		.c_1                            (),                                                                                     // (terminated),                                   
		.r_1                            (),                                                                                     // (terminated),                                   
		.dq_1                           (),                                                                                     // (terminated),                                   
		.dm_1                           (),                                                                                     // (terminated),                                   
		.dbi_1                          (),                                                                                     // (terminated),                                   
		.par_1                          (),                                                                                     // (terminated),                                   
		.derr_1                         (),                                                                                     // (terminated),                                   
		.rdqs_t_1                       (4'b0000),                                                                              // (terminated),                                   
		.rdqs_c_1                       (4'b0000),                                                                              // (terminated),                                   
		.wdqs_t_1                       (),                                                                                     // (terminated),                                   
		.wdqs_c_1                       (),                                                                                     // (terminated),                                   
		.rd_1                           (),                                                                                     // (terminated),                                   
		.rr_1                           (),                                                                                     // (terminated),                                   
		.rc_1                           (),                                                                                     // (terminated),                                   
		.aerr_1                         (1'b0),                                                                                 // (terminated),                                   
		.ck_t_2                         (),                                                                                     // (terminated),                                   
		.ck_c_2                         (),                                                                                     // (terminated),                                   
		.cke_2                          (),                                                                                     // (terminated),                                   
		.c_2                            (),                                                                                     // (terminated),                                   
		.r_2                            (),                                                                                     // (terminated),                                   
		.dq_2                           (),                                                                                     // (terminated),                                   
		.dm_2                           (),                                                                                     // (terminated),                                   
		.dbi_2                          (),                                                                                     // (terminated),                                   
		.par_2                          (),                                                                                     // (terminated),                                   
		.derr_2                         (),                                                                                     // (terminated),                                   
		.rdqs_t_2                       (4'b0000),                                                                              // (terminated),                                   
		.rdqs_c_2                       (4'b0000),                                                                              // (terminated),                                   
		.wdqs_t_2                       (),                                                                                     // (terminated),                                   
		.wdqs_c_2                       (),                                                                                     // (terminated),                                   
		.rd_2                           (),                                                                                     // (terminated),                                   
		.rr_2                           (),                                                                                     // (terminated),                                   
		.rc_2                           (),                                                                                     // (terminated),                                   
		.aerr_2                         (1'b0),                                                                                 // (terminated),                                   
		.ck_t_3                         (),                                                                                     // (terminated),                                   
		.ck_c_3                         (),                                                                                     // (terminated),                                   
		.cke_3                          (),                                                                                     // (terminated),                                   
		.c_3                            (),                                                                                     // (terminated),                                   
		.r_3                            (),                                                                                     // (terminated),                                   
		.dq_3                           (),                                                                                     // (terminated),                                   
		.dm_3                           (),                                                                                     // (terminated),                                   
		.dbi_3                          (),                                                                                     // (terminated),                                   
		.par_3                          (),                                                                                     // (terminated),                                   
		.derr_3                         (),                                                                                     // (terminated),                                   
		.rdqs_t_3                       (4'b0000),                                                                              // (terminated),                                   
		.rdqs_c_3                       (4'b0000),                                                                              // (terminated),                                   
		.wdqs_t_3                       (),                                                                                     // (terminated),                                   
		.wdqs_c_3                       (),                                                                                     // (terminated),                                   
		.rd_3                           (),                                                                                     // (terminated),                                   
		.rr_3                           (),                                                                                     // (terminated),                                   
		.rc_3                           (),                                                                                     // (terminated),                                   
		.aerr_3                         (1'b0),                                                                                 // (terminated),                                   
		.ck_t_4                         (),                                                                                     // (terminated),                                   
		.ck_c_4                         (),                                                                                     // (terminated),                                   
		.cke_4                          (),                                                                                     // (terminated),                                   
		.c_4                            (),                                                                                     // (terminated),                                   
		.r_4                            (),                                                                                     // (terminated),                                   
		.dq_4                           (),                                                                                     // (terminated),                                   
		.dm_4                           (),                                                                                     // (terminated),                                   
		.dbi_4                          (),                                                                                     // (terminated),                                   
		.par_4                          (),                                                                                     // (terminated),                                   
		.derr_4                         (),                                                                                     // (terminated),                                   
		.rdqs_t_4                       (4'b0000),                                                                              // (terminated),                                   
		.rdqs_c_4                       (4'b0000),                                                                              // (terminated),                                   
		.wdqs_t_4                       (),                                                                                     // (terminated),                                   
		.wdqs_c_4                       (),                                                                                     // (terminated),                                   
		.rd_4                           (),                                                                                     // (terminated),                                   
		.rr_4                           (),                                                                                     // (terminated),                                   
		.rc_4                           (),                                                                                     // (terminated),                                   
		.aerr_4                         (1'b0),                                                                                 // (terminated),                                   
		.ck_t_5                         (),                                                                                     // (terminated),                                   
		.ck_c_5                         (),                                                                                     // (terminated),                                   
		.cke_5                          (),                                                                                     // (terminated),                                   
		.c_5                            (),                                                                                     // (terminated),                                   
		.r_5                            (),                                                                                     // (terminated),                                   
		.dq_5                           (),                                                                                     // (terminated),                                   
		.dm_5                           (),                                                                                     // (terminated),                                   
		.dbi_5                          (),                                                                                     // (terminated),                                   
		.par_5                          (),                                                                                     // (terminated),                                   
		.derr_5                         (),                                                                                     // (terminated),                                   
		.rdqs_t_5                       (4'b0000),                                                                              // (terminated),                                   
		.rdqs_c_5                       (4'b0000),                                                                              // (terminated),                                   
		.wdqs_t_5                       (),                                                                                     // (terminated),                                   
		.wdqs_c_5                       (),                                                                                     // (terminated),                                   
		.rd_5                           (),                                                                                     // (terminated),                                   
		.rr_5                           (),                                                                                     // (terminated),                                   
		.rc_5                           (),                                                                                     // (terminated),                                   
		.aerr_5                         (1'b0),                                                                                 // (terminated),                                   
		.ck_t_6                         (),                                                                                     // (terminated),                                   
		.ck_c_6                         (),                                                                                     // (terminated),                                   
		.cke_6                          (),                                                                                     // (terminated),                                   
		.c_6                            (),                                                                                     // (terminated),                                   
		.r_6                            (),                                                                                     // (terminated),                                   
		.dq_6                           (),                                                                                     // (terminated),                                   
		.dm_6                           (),                                                                                     // (terminated),                                   
		.dbi_6                          (),                                                                                     // (terminated),                                   
		.par_6                          (),                                                                                     // (terminated),                                   
		.derr_6                         (),                                                                                     // (terminated),                                   
		.rdqs_t_6                       (4'b0000),                                                                              // (terminated),                                   
		.rdqs_c_6                       (4'b0000),                                                                              // (terminated),                                   
		.wdqs_t_6                       (),                                                                                     // (terminated),                                   
		.wdqs_c_6                       (),                                                                                     // (terminated),                                   
		.rd_6                           (),                                                                                     // (terminated),                                   
		.rr_6                           (),                                                                                     // (terminated),                                   
		.rc_6                           (),                                                                                     // (terminated),                                   
		.aerr_6                         (1'b0),                                                                                 // (terminated),                                   
		.ck_t_7                         (),                                                                                     // (terminated),                                   
		.ck_c_7                         (),                                                                                     // (terminated),                                   
		.cke_7                          (),                                                                                     // (terminated),                                   
		.c_7                            (),                                                                                     // (terminated),                                   
		.r_7                            (),                                                                                     // (terminated),                                   
		.dq_7                           (),                                                                                     // (terminated),                                   
		.dm_7                           (),                                                                                     // (terminated),                                   
		.dbi_7                          (),                                                                                     // (terminated),                                   
		.par_7                          (),                                                                                     // (terminated),                                   
		.derr_7                         (),                                                                                     // (terminated),                                   
		.rdqs_t_7                       (4'b0000),                                                                              // (terminated),                                   
		.rdqs_c_7                       (4'b0000),                                                                              // (terminated),                                   
		.wdqs_t_7                       (),                                                                                     // (terminated),                                   
		.wdqs_c_7                       (),                                                                                     // (terminated),                                   
		.rd_7                           (),                                                                                     // (terminated),                                   
		.rr_7                           (),                                                                                     // (terminated),                                   
		.rc_7                           (),                                                                                     // (terminated),                                   
		.aerr_7                         (1'b0),                                                                                 // (terminated),                                   
		.ufi_cattrip                    (),                                                                                     // (terminated),                                   
		.ufi_temp                       (),                                                                                     // (terminated),                                   
		.ufi_wso                        (),                                                                                     // (terminated),                                   
		.ufi_reset_n                    (1'b0),                                                                                 // (terminated),                                   
		.ufi_wrst_n                     (1'b0),                                                                                 // (terminated),                                   
		.ufi_wrck                       (1'b0),                                                                                 // (terminated),                                   
		.ufi_shiftwr                    (1'b0),                                                                                 // (terminated),                                   
		.ufi_capturewr                  (1'b0),                                                                                 // (terminated),                                   
		.ufi_updatewr                   (1'b0),                                                                                 // (terminated),                                   
		.ufi_selectwir                  (1'b0),                                                                                 // (terminated),                                   
		.ufi_wsi                        (1'b0),                                                                                 // (terminated),                                   
		.dft_mbist_tck                  (1'b0),                                                                                 // (terminated),                                   
		.dft_mbist_tdi                  (1'b0),                                                                                 // (terminated),                                   
		.dft_mbist_tms                  (1'b0),                                                                                 // (terminated),                                   
		.dft_mbist_trst_n               (1'b0),                                                                                 // (terminated),                                   
		.dft_mbist_tdo                  (),                                                                                     // (terminated),                                   
		.dft_ram_dftclken               (1'b0),                                                                                 // (terminated),                                   
		.dft_ram_masken                 (1'b0),                                                                                 // (terminated),                                   
		.nofifo_f2c_slave_waitrequest   (),                                                                                     // (terminated),                                   
		.nofifo_f2c_slave_read          (1'b0),                                                                                 // (terminated),                                   
		.nofifo_f2c_slave_write         (1'b0),                                                                                 // (terminated),                                   
		.nofifo_f2c_slave_address       (27'b000000000000000000000000000),                                                      // (terminated),                                   
		.nofifo_f2c_slave_readdata      (),                                                                                     // (terminated),                                   
		.nofifo_f2c_slave_writedata     (32'b00000000000000000000000000000000),                                                 // (terminated),                                   
		.nofifo_f2c_slave_byteenable    (4'b0000),                                                                              // (terminated),                                   
		.nofifo_f2c_slave_readdatavalid (),                                                                                     // (terminated),                                   
		.c2f_master_waitrequest         (1'b0),                                                                                 // (terminated),                                   
		.c2f_master_write_n             (),                                                                                     // (terminated),                                   
		.c2f_master_read_n              (),                                                                                     // (terminated),                                   
		.c2f_master_address             (),                                                                                     // (terminated),                                   
		.c2f_master_byteenable          (),                                                                                     // (terminated),                                   
		.c2f_master_writedata           (),                                                                                     // (terminated),                                   
		.c2f_master_readdatavalid       (1'b0),                                                                                 // (terminated),                                   
		.c2f_master_readdata            (32'b00000000000000000000000000000000),                                                 // (terminated),                                   
		.c2f_master_clk_in              (1'b0),                                                                                 // (terminated),                                   
		.asic_hbmcfg_ready              (1'b0),                                                                                 // (terminated),                                   
		.fpga_icm_reset_n               (1'b1)                                                                                  // (terminated),                                   
	);

	altera_axi_ufi_adapter #(
		.PHY_C2P_RATE_ENUM                    ("RATE_HALF"),
		.PHY_THROTTLE_RDATA_BRESP             (1),
		.PORT_AXI_AWID_WIDTH                  (9),
		.PORT_AXI_AWADDR_WIDTH                (29),
		.PORT_AXI_AWLEN_WIDTH                 (8),
		.PORT_AXI_AWSIZE_WIDTH                (3),
		.PORT_AXI_AWBURST_WIDTH               (2),
		.PORT_AXI_AWPROT_WIDTH                (3),
		.PORT_AXI_AWQOS_WIDTH                 (4),
		.PORT_AXI_AWUSER_AP_WIDTH             (1),
		.PORT_AXI_WDATA_WIDTH                 (256),
		.PORT_AXI_WSTRB_WIDTH                 (32),
		.PORT_AXI_BID_WIDTH                   (9),
		.PORT_AXI_BRESP_WIDTH                 (2),
		.PORT_AXI_ARID_WIDTH                  (9),
		.PORT_AXI_ARADDR_WIDTH                (29),
		.PORT_AXI_ARLEN_WIDTH                 (8),
		.PORT_AXI_ARSIZE_WIDTH                (3),
		.PORT_AXI_ARBURST_WIDTH               (2),
		.PORT_AXI_ARPROT_WIDTH                (3),
		.PORT_AXI_ARQOS_WIDTH                 (4),
		.PORT_AXI_ARUSER_AP_WIDTH             (1),
		.PORT_AXI_RID_WIDTH                   (9),
		.PORT_AXI_RDATA_WIDTH                 (256),
		.PORT_AXI_RRESP_WIDTH                 (2),
		.PORT_AXI_EXTRA_RUSER_DATA_WIDTH      (32),
		.PORT_AXI_EXTRA_WUSER_DATA_WIDTH      (32),
		.PORT_AXI_EXTRA_WUSER_STRB_WIDTH      (4),
		.PORT_APB_PADDR_WIDTH                 (16),
		.PORT_APB_PWDATA_WIDTH                (16),
		.PORT_APB_PSTRB_WIDTH                 (2),
		.PORT_APB_PRDATA_WIDTH                (16),
		.PORT_UB48_RDEN_WIDTH                 (2),
		.PORT_UB48_RD_VLD_WIDTH               (2),
		.PORT_UB48_REMAP_STS_WIDTH            (4),
		.PORT_UB48_GROUP_SDOUT0_WIDTH         (80),
		.PORT_UB48_GROUP_SDOUT0_EN_WIDTH      (2),
		.PORT_UB48_GROUP_SDIN0_WIDTH          (80),
		.PORT_UB48_GROUP_SDIN0_EN_WIDTH       (2),
		.PORT_UB48_GROUP_DDOUT0_WIDTH         (8),
		.PORT_UB48_GROUP_DDOUT0_EN_WIDTH      (2),
		.PORT_UB48_GROUP_DDIN0_WIDTH          (8),
		.PORT_UB48_GROUP_DDIN0_EN_WIDTH       (2),
		.PORT_UB48_GROUP_DDOUT1_WIDTH         (8),
		.PORT_UB48_GROUP_DDOUT1_EN_WIDTH      (2),
		.PORT_UB48_GROUP_DDIN1_WIDTH          (8),
		.PORT_UB48_GROUP_DDIN1_EN_WIDTH       (2),
		.PORT_UFI_AXI_EXTRA_AXDOUT0_P0_WIDTH  (30),
		.PORT_UFI_AXI_EXTRA_AXDOUT0_P1_WIDTH  (20),
		.PORT_UFI_AXI_EXTRA_AXDOUT1_P0_WIDTH  (30),
		.PORT_UFI_AXI_EXTRA_AXDOUT1_P1_WIDTH  (20),
		.PORT_UFI_AXI_EXTRA_ARDOUT1_P0_WIDTH  (50),
		.PORT_UFI_AXI_EXTRA_ARDOUT1_P1_WIDTH  (18),
		.PORT_UFI_AXI_EXTRA_ARDOUT1_QOS_WIDTH (2),
		.PORT_UFI_AXI_EXTRA_ARDOUT1_AP_WIDTH  (2),
		.PORT_UFI_AXI_EXTRA_ARDOUT1_VLD_WIDTH (2),
		.PORT_UFI_AXI_EXTRA_ARDOUT3_P0_WIDTH  (50),
		.PORT_UFI_AXI_EXTRA_ARDOUT3_P1_WIDTH  (18),
		.PORT_UFI_AXI_EXTRA_ARDOUT3_QOS_WIDTH (2),
		.PORT_UFI_AXI_EXTRA_ARDOUT3_AP_WIDTH  (2),
		.PORT_UFI_AXI_EXTRA_ARDOUT3_VLD_WIDTH (2),
		.PORT_UFI_AXI_EXTRA_ARDOUT0_P0_WIDTH  (50),
		.PORT_UFI_AXI_EXTRA_ARDOUT0_P1_WIDTH  (18),
		.PORT_UFI_AXI_EXTRA_ARDOUT0_QOS_WIDTH (2),
		.PORT_UFI_AXI_EXTRA_ARDOUT0_AP_WIDTH  (2),
		.PORT_UFI_AXI_EXTRA_ARDOUT2_P0_WIDTH  (50),
		.PORT_UFI_AXI_EXTRA_ARDOUT2_P1_WIDTH  (18),
		.PORT_UFI_AXI_EXTRA_ARDOUT2_AP_WIDTH  (2),
		.PORT_UFI_AXI_EXTRA_ARDOUT2_QOS_WIDTH (2),
		.BACKPRESSURE_LATENCY                 (2),
		.TX_PIPELINE_EN                       (0),
		.RX_PIPELINE_EN                       (1)
	) axi_ufi_adpt_0 (
		.wmc_clk_in      (uib_wmc_clk_clk),                                                                                                                                                                                                                                                       //   input,    width = 1,     wmc_clk_in.clk
		.phy_clk_in      (uib_phy_clk_clk),                                                                                                                                                                                                                                                       //   input,    width = 1,     phy_clk_in.clk
		.wmcrst_n_in     (uib_wmcrst_n_reset),                                                                                                                                                                                                                                                    //   input,    width = 1,    wmcrst_n_in.reset_n
		.wmc_clk_0       (wmc_clk_0_clk),                                                                                                                                                                                                                                                         //  output,    width = 1,      wmc_clk_0.clk
		.phy_clk_0       (phy_clk_0_clk),                                                                                                                                                                                                                                                         //  output,    width = 1,      phy_clk_0.clk
		.wmcrst_n_0      (wmcrst_n_0_reset_n),                                                                                                                                                                                                                                                    //  output,    width = 1,     wmcrst_n_0.reset_n
		.cal_in_prog     (uib_cal_in_prog_cal_in_prog),                                                                                                                                                                                                                                           //   input,    width = 1,    cal_in_prog.cal_in_prog
		.axifencereq     (uib_axifencereq_axifencereq),                                                                                                                                                                                                                                           //   input,    width = 1,    axifencereq.axifencereq
		.sdout0_0_0      (axi_ufi_adpt_0_ub48_group_0_0_sdout0),                                                                                                                                                                                                                                  //  output,   width = 80, ub48_group_0_0.sdout0
		.sdout0_en_0_0   (axi_ufi_adpt_0_ub48_group_0_0_sdout0_en),                                                                                                                                                                                                                               //  output,    width = 2,               .sdout0_en
		.sdin0_0_0       (uib_ub48_group_0_0_sdin0),                                                                                                                                                                                                                                              //   input,   width = 80,               .sdin0
		.sdin0_en_0_0    (axi_ufi_adpt_0_ub48_group_0_0_sdin0_en),                                                                                                                                                                                                                                //  output,    width = 2,               .sdin0_en
		.ddout0_0_0      (axi_ufi_adpt_0_ub48_group_0_0_ddout0),                                                                                                                                                                                                                                  //  output,    width = 8,               .ddout0
		.ddout0_en_0_0   (axi_ufi_adpt_0_ub48_group_0_0_ddout0_en),                                                                                                                                                                                                                               //  output,    width = 2,               .ddout0_en
		.ddin0_0_0       (uib_ub48_group_0_0_ddin0),                                                                                                                                                                                                                                              //   input,    width = 8,               .ddin0
		.ddin0_en_0_0    (axi_ufi_adpt_0_ub48_group_0_0_ddin0_en),                                                                                                                                                                                                                                //  output,    width = 2,               .ddin0_en
		.ddout1_0_0      (axi_ufi_adpt_0_ub48_group_0_0_ddout1),                                                                                                                                                                                                                                  //  output,    width = 8,               .ddout1
		.ddout1_en_0_0   (axi_ufi_adpt_0_ub48_group_0_0_ddout1_en),                                                                                                                                                                                                                               //  output,    width = 2,               .ddout1_en
		.ddin1_0_0       (uib_ub48_group_0_0_ddin1),                                                                                                                                                                                                                                              //   input,    width = 8,               .ddin1
		.ddin1_en_0_0    (axi_ufi_adpt_0_ub48_group_0_0_ddin1_en),                                                                                                                                                                                                                                //  output,    width = 2,               .ddin1_en
		.sdout0_0_1      (axi_ufi_adpt_0_ub48_group_0_1_sdout0),                                                                                                                                                                                                                                  //  output,   width = 80, ub48_group_0_1.sdout0
		.sdout0_en_0_1   (axi_ufi_adpt_0_ub48_group_0_1_sdout0_en),                                                                                                                                                                                                                               //  output,    width = 2,               .sdout0_en
		.sdin0_0_1       (uib_ub48_group_0_1_sdin0),                                                                                                                                                                                                                                              //   input,   width = 80,               .sdin0
		.sdin0_en_0_1    (axi_ufi_adpt_0_ub48_group_0_1_sdin0_en),                                                                                                                                                                                                                                //  output,    width = 2,               .sdin0_en
		.ddout0_0_1      (axi_ufi_adpt_0_ub48_group_0_1_ddout0),                                                                                                                                                                                                                                  //  output,    width = 8,               .ddout0
		.ddout0_en_0_1   (axi_ufi_adpt_0_ub48_group_0_1_ddout0_en),                                                                                                                                                                                                                               //  output,    width = 2,               .ddout0_en
		.ddin0_0_1       (uib_ub48_group_0_1_ddin0),                                                                                                                                                                                                                                              //   input,    width = 8,               .ddin0
		.ddin0_en_0_1    (axi_ufi_adpt_0_ub48_group_0_1_ddin0_en),                                                                                                                                                                                                                                //  output,    width = 2,               .ddin0_en
		.ddout1_0_1      (axi_ufi_adpt_0_ub48_group_0_1_ddout1),                                                                                                                                                                                                                                  //  output,    width = 8,               .ddout1
		.ddout1_en_0_1   (axi_ufi_adpt_0_ub48_group_0_1_ddout1_en),                                                                                                                                                                                                                               //  output,    width = 2,               .ddout1_en
		.ddin1_0_1       (uib_ub48_group_0_1_ddin1),                                                                                                                                                                                                                                              //   input,    width = 8,               .ddin1
		.ddin1_en_0_1    (axi_ufi_adpt_0_ub48_group_0_1_ddin1_en),                                                                                                                                                                                                                                //  output,    width = 2,               .ddin1_en
		.sdout0_1_0      (axi_ufi_adpt_0_ub48_group_1_0_sdout0),                                                                                                                                                                                                                                  //  output,   width = 80, ub48_group_1_0.sdout0
		.sdout0_en_1_0   (axi_ufi_adpt_0_ub48_group_1_0_sdout0_en),                                                                                                                                                                                                                               //  output,    width = 2,               .sdout0_en
		.sdin0_1_0       (uib_ub48_group_1_0_sdin0),                                                                                                                                                                                                                                              //   input,   width = 80,               .sdin0
		.sdin0_en_1_0    (axi_ufi_adpt_0_ub48_group_1_0_sdin0_en),                                                                                                                                                                                                                                //  output,    width = 2,               .sdin0_en
		.ddout0_1_0      (axi_ufi_adpt_0_ub48_group_1_0_ddout0),                                                                                                                                                                                                                                  //  output,    width = 8,               .ddout0
		.ddout0_en_1_0   (axi_ufi_adpt_0_ub48_group_1_0_ddout0_en),                                                                                                                                                                                                                               //  output,    width = 2,               .ddout0_en
		.ddin0_1_0       (uib_ub48_group_1_0_ddin0),                                                                                                                                                                                                                                              //   input,    width = 8,               .ddin0
		.ddin0_en_1_0    (axi_ufi_adpt_0_ub48_group_1_0_ddin0_en),                                                                                                                                                                                                                                //  output,    width = 2,               .ddin0_en
		.ddout1_1_0      (axi_ufi_adpt_0_ub48_group_1_0_ddout1),                                                                                                                                                                                                                                  //  output,    width = 8,               .ddout1
		.ddout1_en_1_0   (axi_ufi_adpt_0_ub48_group_1_0_ddout1_en),                                                                                                                                                                                                                               //  output,    width = 2,               .ddout1_en
		.ddin1_1_0       (uib_ub48_group_1_0_ddin1),                                                                                                                                                                                                                                              //   input,    width = 8,               .ddin1
		.ddin1_en_1_0    (axi_ufi_adpt_0_ub48_group_1_0_ddin1_en),                                                                                                                                                                                                                                //  output,    width = 2,               .ddin1_en
		.sdout0_1_1      (axi_ufi_adpt_0_ub48_group_1_1_sdout0),                                                                                                                                                                                                                                  //  output,   width = 80, ub48_group_1_1.sdout0
		.sdout0_en_1_1   (axi_ufi_adpt_0_ub48_group_1_1_sdout0_en),                                                                                                                                                                                                                               //  output,    width = 2,               .sdout0_en
		.sdin0_1_1       (uib_ub48_group_1_1_sdin0),                                                                                                                                                                                                                                              //   input,   width = 80,               .sdin0
		.sdin0_en_1_1    (axi_ufi_adpt_0_ub48_group_1_1_sdin0_en),                                                                                                                                                                                                                                //  output,    width = 2,               .sdin0_en
		.ddout0_1_1      (axi_ufi_adpt_0_ub48_group_1_1_ddout0),                                                                                                                                                                                                                                  //  output,    width = 8,               .ddout0
		.ddout0_en_1_1   (axi_ufi_adpt_0_ub48_group_1_1_ddout0_en),                                                                                                                                                                                                                               //  output,    width = 2,               .ddout0_en
		.ddin0_1_1       (uib_ub48_group_1_1_ddin0),                                                                                                                                                                                                                                              //   input,    width = 8,               .ddin0
		.ddin0_en_1_1    (axi_ufi_adpt_0_ub48_group_1_1_ddin0_en),                                                                                                                                                                                                                                //  output,    width = 2,               .ddin0_en
		.ddout1_1_1      (axi_ufi_adpt_0_ub48_group_1_1_ddout1),                                                                                                                                                                                                                                  //  output,    width = 8,               .ddout1
		.ddout1_en_1_1   (axi_ufi_adpt_0_ub48_group_1_1_ddout1_en),                                                                                                                                                                                                                               //  output,    width = 2,               .ddout1_en
		.ddin1_1_1       (uib_ub48_group_1_1_ddin1),                                                                                                                                                                                                                                              //   input,    width = 8,               .ddin1
		.ddin1_en_1_1    (axi_ufi_adpt_0_ub48_group_1_1_ddin1_en),                                                                                                                                                                                                                                //  output,    width = 2,               .ddin1_en
		.sdout0_4_0      (axi_ufi_adpt_0_ub48_group_4_0_sdout0),                                                                                                                                                                                                                                  //  output,   width = 80, ub48_group_4_0.sdout0
		.sdout0_en_4_0   (axi_ufi_adpt_0_ub48_group_4_0_sdout0_en),                                                                                                                                                                                                                               //  output,    width = 2,               .sdout0_en
		.sdin0_4_0       (uib_ub48_group_4_0_sdin0),                                                                                                                                                                                                                                              //   input,   width = 80,               .sdin0
		.sdin0_en_4_0    (axi_ufi_adpt_0_ub48_group_4_0_sdin0_en),                                                                                                                                                                                                                                //  output,    width = 2,               .sdin0_en
		.ddout0_4_0      (axi_ufi_adpt_0_ub48_group_4_0_ddout0),                                                                                                                                                                                                                                  //  output,    width = 8,               .ddout0
		.ddout0_en_4_0   (axi_ufi_adpt_0_ub48_group_4_0_ddout0_en),                                                                                                                                                                                                                               //  output,    width = 2,               .ddout0_en
		.ddin0_4_0       (uib_ub48_group_4_0_ddin0),                                                                                                                                                                                                                                              //   input,    width = 8,               .ddin0
		.ddin0_en_4_0    (axi_ufi_adpt_0_ub48_group_4_0_ddin0_en),                                                                                                                                                                                                                                //  output,    width = 2,               .ddin0_en
		.ddout1_4_0      (axi_ufi_adpt_0_ub48_group_4_0_ddout1),                                                                                                                                                                                                                                  //  output,    width = 8,               .ddout1
		.ddout1_en_4_0   (axi_ufi_adpt_0_ub48_group_4_0_ddout1_en),                                                                                                                                                                                                                               //  output,    width = 2,               .ddout1_en
		.ddin1_4_0       (uib_ub48_group_4_0_ddin1),                                                                                                                                                                                                                                              //   input,    width = 8,               .ddin1
		.ddin1_en_4_0    (axi_ufi_adpt_0_ub48_group_4_0_ddin1_en),                                                                                                                                                                                                                                //  output,    width = 2,               .ddin1_en
		.sdout0_4_1      (axi_ufi_adpt_0_ub48_group_4_1_sdout0),                                                                                                                                                                                                                                  //  output,   width = 80, ub48_group_4_1.sdout0
		.sdout0_en_4_1   (axi_ufi_adpt_0_ub48_group_4_1_sdout0_en),                                                                                                                                                                                                                               //  output,    width = 2,               .sdout0_en
		.sdin0_4_1       (uib_ub48_group_4_1_sdin0),                                                                                                                                                                                                                                              //   input,   width = 80,               .sdin0
		.sdin0_en_4_1    (axi_ufi_adpt_0_ub48_group_4_1_sdin0_en),                                                                                                                                                                                                                                //  output,    width = 2,               .sdin0_en
		.ddout0_4_1      (axi_ufi_adpt_0_ub48_group_4_1_ddout0),                                                                                                                                                                                                                                  //  output,    width = 8,               .ddout0
		.ddout0_en_4_1   (axi_ufi_adpt_0_ub48_group_4_1_ddout0_en),                                                                                                                                                                                                                               //  output,    width = 2,               .ddout0_en
		.ddin0_4_1       (uib_ub48_group_4_1_ddin0),                                                                                                                                                                                                                                              //   input,    width = 8,               .ddin0
		.ddin0_en_4_1    (axi_ufi_adpt_0_ub48_group_4_1_ddin0_en),                                                                                                                                                                                                                                //  output,    width = 2,               .ddin0_en
		.ddout1_4_1      (axi_ufi_adpt_0_ub48_group_4_1_ddout1),                                                                                                                                                                                                                                  //  output,    width = 8,               .ddout1
		.ddout1_en_4_1   (axi_ufi_adpt_0_ub48_group_4_1_ddout1_en),                                                                                                                                                                                                                               //  output,    width = 2,               .ddout1_en
		.ddin1_4_1       (uib_ub48_group_4_1_ddin1),                                                                                                                                                                                                                                              //   input,    width = 8,               .ddin1
		.ddin1_en_4_1    (axi_ufi_adpt_0_ub48_group_4_1_ddin1_en),                                                                                                                                                                                                                                //  output,    width = 2,               .ddin1_en
		.sdout0_5_0      (axi_ufi_adpt_0_ub48_group_5_0_sdout0),                                                                                                                                                                                                                                  //  output,   width = 80, ub48_group_5_0.sdout0
		.sdout0_en_5_0   (axi_ufi_adpt_0_ub48_group_5_0_sdout0_en),                                                                                                                                                                                                                               //  output,    width = 2,               .sdout0_en
		.sdin0_5_0       (uib_ub48_group_5_0_sdin0),                                                                                                                                                                                                                                              //   input,   width = 80,               .sdin0
		.sdin0_en_5_0    (axi_ufi_adpt_0_ub48_group_5_0_sdin0_en),                                                                                                                                                                                                                                //  output,    width = 2,               .sdin0_en
		.ddout0_5_0      (axi_ufi_adpt_0_ub48_group_5_0_ddout0),                                                                                                                                                                                                                                  //  output,    width = 8,               .ddout0
		.ddout0_en_5_0   (axi_ufi_adpt_0_ub48_group_5_0_ddout0_en),                                                                                                                                                                                                                               //  output,    width = 2,               .ddout0_en
		.ddin0_5_0       (uib_ub48_group_5_0_ddin0),                                                                                                                                                                                                                                              //   input,    width = 8,               .ddin0
		.ddin0_en_5_0    (axi_ufi_adpt_0_ub48_group_5_0_ddin0_en),                                                                                                                                                                                                                                //  output,    width = 2,               .ddin0_en
		.ddout1_5_0      (axi_ufi_adpt_0_ub48_group_5_0_ddout1),                                                                                                                                                                                                                                  //  output,    width = 8,               .ddout1
		.ddout1_en_5_0   (axi_ufi_adpt_0_ub48_group_5_0_ddout1_en),                                                                                                                                                                                                                               //  output,    width = 2,               .ddout1_en
		.ddin1_5_0       (uib_ub48_group_5_0_ddin1),                                                                                                                                                                                                                                              //   input,    width = 8,               .ddin1
		.ddin1_en_5_0    (axi_ufi_adpt_0_ub48_group_5_0_ddin1_en),                                                                                                                                                                                                                                //  output,    width = 2,               .ddin1_en
		.sdout0_5_1      (axi_ufi_adpt_0_ub48_group_5_1_sdout0),                                                                                                                                                                                                                                  //  output,   width = 80, ub48_group_5_1.sdout0
		.sdout0_en_5_1   (axi_ufi_adpt_0_ub48_group_5_1_sdout0_en),                                                                                                                                                                                                                               //  output,    width = 2,               .sdout0_en
		.sdin0_5_1       (uib_ub48_group_5_1_sdin0),                                                                                                                                                                                                                                              //   input,   width = 80,               .sdin0
		.sdin0_en_5_1    (axi_ufi_adpt_0_ub48_group_5_1_sdin0_en),                                                                                                                                                                                                                                //  output,    width = 2,               .sdin0_en
		.ddout0_5_1      (axi_ufi_adpt_0_ub48_group_5_1_ddout0),                                                                                                                                                                                                                                  //  output,    width = 8,               .ddout0
		.ddout0_en_5_1   (axi_ufi_adpt_0_ub48_group_5_1_ddout0_en),                                                                                                                                                                                                                               //  output,    width = 2,               .ddout0_en
		.ddin0_5_1       (uib_ub48_group_5_1_ddin0),                                                                                                                                                                                                                                              //   input,    width = 8,               .ddin0
		.ddin0_en_5_1    (axi_ufi_adpt_0_ub48_group_5_1_ddin0_en),                                                                                                                                                                                                                                //  output,    width = 2,               .ddin0_en
		.ddout1_5_1      (axi_ufi_adpt_0_ub48_group_5_1_ddout1),                                                                                                                                                                                                                                  //  output,    width = 8,               .ddout1
		.ddout1_en_5_1   (axi_ufi_adpt_0_ub48_group_5_1_ddout1_en),                                                                                                                                                                                                                               //  output,    width = 2,               .ddout1_en
		.ddin1_5_1       (uib_ub48_group_5_1_ddin1),                                                                                                                                                                                                                                              //   input,    width = 8,               .ddin1
		.ddin1_en_5_1    (axi_ufi_adpt_0_ub48_group_5_1_ddin1_en),                                                                                                                                                                                                                                //  output,    width = 2,               .ddin1_en
		.sdout0_6_0      (axi_ufi_adpt_0_ub48_group_6_0_sdout0),                                                                                                                                                                                                                                  //  output,   width = 80, ub48_group_6_0.sdout0
		.sdout0_en_6_0   (axi_ufi_adpt_0_ub48_group_6_0_sdout0_en),                                                                                                                                                                                                                               //  output,    width = 2,               .sdout0_en
		.sdin0_6_0       (uib_ub48_group_6_0_sdin0),                                                                                                                                                                                                                                              //   input,   width = 80,               .sdin0
		.sdin0_en_6_0    (axi_ufi_adpt_0_ub48_group_6_0_sdin0_en),                                                                                                                                                                                                                                //  output,    width = 2,               .sdin0_en
		.ddout0_6_0      (axi_ufi_adpt_0_ub48_group_6_0_ddout0),                                                                                                                                                                                                                                  //  output,    width = 8,               .ddout0
		.ddout0_en_6_0   (axi_ufi_adpt_0_ub48_group_6_0_ddout0_en),                                                                                                                                                                                                                               //  output,    width = 2,               .ddout0_en
		.ddin0_6_0       (uib_ub48_group_6_0_ddin0),                                                                                                                                                                                                                                              //   input,    width = 8,               .ddin0
		.ddin0_en_6_0    (axi_ufi_adpt_0_ub48_group_6_0_ddin0_en),                                                                                                                                                                                                                                //  output,    width = 2,               .ddin0_en
		.ddout1_6_0      (axi_ufi_adpt_0_ub48_group_6_0_ddout1),                                                                                                                                                                                                                                  //  output,    width = 8,               .ddout1
		.ddout1_en_6_0   (axi_ufi_adpt_0_ub48_group_6_0_ddout1_en),                                                                                                                                                                                                                               //  output,    width = 2,               .ddout1_en
		.ddin1_6_0       (uib_ub48_group_6_0_ddin1),                                                                                                                                                                                                                                              //   input,    width = 8,               .ddin1
		.ddin1_en_6_0    (axi_ufi_adpt_0_ub48_group_6_0_ddin1_en),                                                                                                                                                                                                                                //  output,    width = 2,               .ddin1_en
		.sdout0_6_1      (axi_ufi_adpt_0_ub48_group_6_1_sdout0),                                                                                                                                                                                                                                  //  output,   width = 80, ub48_group_6_1.sdout0
		.sdout0_en_6_1   (axi_ufi_adpt_0_ub48_group_6_1_sdout0_en),                                                                                                                                                                                                                               //  output,    width = 2,               .sdout0_en
		.sdin0_6_1       (uib_ub48_group_6_1_sdin0),                                                                                                                                                                                                                                              //   input,   width = 80,               .sdin0
		.sdin0_en_6_1    (axi_ufi_adpt_0_ub48_group_6_1_sdin0_en),                                                                                                                                                                                                                                //  output,    width = 2,               .sdin0_en
		.ddout0_6_1      (axi_ufi_adpt_0_ub48_group_6_1_ddout0),                                                                                                                                                                                                                                  //  output,    width = 8,               .ddout0
		.ddout0_en_6_1   (axi_ufi_adpt_0_ub48_group_6_1_ddout0_en),                                                                                                                                                                                                                               //  output,    width = 2,               .ddout0_en
		.ddin0_6_1       (uib_ub48_group_6_1_ddin0),                                                                                                                                                                                                                                              //   input,    width = 8,               .ddin0
		.ddin0_en_6_1    (axi_ufi_adpt_0_ub48_group_6_1_ddin0_en),                                                                                                                                                                                                                                //  output,    width = 2,               .ddin0_en
		.ddout1_6_1      (axi_ufi_adpt_0_ub48_group_6_1_ddout1),                                                                                                                                                                                                                                  //  output,    width = 8,               .ddout1
		.ddout1_en_6_1   (axi_ufi_adpt_0_ub48_group_6_1_ddout1_en),                                                                                                                                                                                                                               //  output,    width = 2,               .ddout1_en
		.ddin1_6_1       (uib_ub48_group_6_1_ddin1),                                                                                                                                                                                                                                              //   input,    width = 8,               .ddin1
		.ddin1_en_6_1    (axi_ufi_adpt_0_ub48_group_6_1_ddin1_en),                                                                                                                                                                                                                                //  output,    width = 2,               .ddin1_en
		.rden_0          (axi_ufi_adpt_0_ub48_0_rden),                                                                                                                                                                                                                                            //  output,    width = 2,         ub48_0.rden
		.rd_vld_0        (uib_ub48_0_rd_vld),                                                                                                                                                                                                                                                     //   input,    width = 2,               .rd_vld
		.remap_sts_0     (uib_ub48_0_remap_sts),                                                                                                                                                                                                                                                  //   input,    width = 4,               .remap_sts
		.rden_1          (axi_ufi_adpt_0_ub48_1_rden),                                                                                                                                                                                                                                            //  output,    width = 2,         ub48_1.rden
		.rd_vld_1        (uib_ub48_1_rd_vld),                                                                                                                                                                                                                                                     //   input,    width = 2,               .rd_vld
		.remap_sts_1     (uib_ub48_1_remap_sts),                                                                                                                                                                                                                                                  //   input,    width = 4,               .remap_sts
		.rden_4          (axi_ufi_adpt_0_ub48_4_rden),                                                                                                                                                                                                                                            //  output,    width = 2,         ub48_4.rden
		.rd_vld_4        (uib_ub48_4_rd_vld),                                                                                                                                                                                                                                                     //   input,    width = 2,               .rd_vld
		.remap_sts_4     (uib_ub48_4_remap_sts),                                                                                                                                                                                                                                                  //   input,    width = 4,               .remap_sts
		.rden_5          (axi_ufi_adpt_0_ub48_5_rden),                                                                                                                                                                                                                                            //  output,    width = 2,         ub48_5.rden
		.rd_vld_5        (uib_ub48_5_rd_vld),                                                                                                                                                                                                                                                     //   input,    width = 2,               .rd_vld
		.remap_sts_5     (uib_ub48_5_remap_sts),                                                                                                                                                                                                                                                  //   input,    width = 4,               .remap_sts
		.rden_6          (axi_ufi_adpt_0_ub48_6_rden),                                                                                                                                                                                                                                            //  output,    width = 2,         ub48_6.rden
		.rd_vld_6        (uib_ub48_6_rd_vld),                                                                                                                                                                                                                                                     //   input,    width = 2,               .rd_vld
		.remap_sts_6     (uib_ub48_6_remap_sts),                                                                                                                                                                                                                                                  //   input,    width = 4,               .remap_sts
		.axdout0_p0      (axi_ufi_adpt_0_ufi_axi_extra_axdout0_p0),                                                                                                                                                                                                                               //  output,   width = 30,  ufi_axi_extra.axdout0_p0
		.axdout0_p1      (axi_ufi_adpt_0_ufi_axi_extra_axdout0_p1),                                                                                                                                                                                                                               //  output,   width = 20,               .axdout0_p1
		.axdout1_p0      (axi_ufi_adpt_0_ufi_axi_extra_axdout1_p0),                                                                                                                                                                                                                               //  output,   width = 30,               .axdout1_p0
		.axdout1_p1      (axi_ufi_adpt_0_ufi_axi_extra_axdout1_p1),                                                                                                                                                                                                                               //  output,   width = 20,               .axdout1_p1
		.ardout1_p0      (axi_ufi_adpt_0_ufi_axi_extra_ardout1_p0),                                                                                                                                                                                                                               //  output,   width = 50,               .ardout1_p0
		.ardout1_p1      (axi_ufi_adpt_0_ufi_axi_extra_ardout1_p1),                                                                                                                                                                                                                               //  output,   width = 18,               .ardout1_p1
		.ardout1_qos     (axi_ufi_adpt_0_ufi_axi_extra_ardout1_qos),                                                                                                                                                                                                                              //  output,    width = 2,               .ardout1_qos
		.ardout1_ap      (axi_ufi_adpt_0_ufi_axi_extra_ardout1_ap),                                                                                                                                                                                                                               //  output,    width = 2,               .ardout1_ap
		.ardout1_vld     (axi_ufi_adpt_0_ufi_axi_extra_ardout1_vld),                                                                                                                                                                                                                              //  output,    width = 2,               .ardout1_vld
		.ardout3_p0      (axi_ufi_adpt_0_ufi_axi_extra_ardout3_p0),                                                                                                                                                                                                                               //  output,   width = 50,               .ardout3_p0
		.ardout3_p1      (axi_ufi_adpt_0_ufi_axi_extra_ardout3_p1),                                                                                                                                                                                                                               //  output,   width = 18,               .ardout3_p1
		.ardout3_qos     (axi_ufi_adpt_0_ufi_axi_extra_ardout3_qos),                                                                                                                                                                                                                              //  output,    width = 2,               .ardout3_qos
		.ardout3_ap      (axi_ufi_adpt_0_ufi_axi_extra_ardout3_ap),                                                                                                                                                                                                                               //  output,    width = 2,               .ardout3_ap
		.ardout3_vld     (axi_ufi_adpt_0_ufi_axi_extra_ardout3_vld),                                                                                                                                                                                                                              //  output,    width = 2,               .ardout3_vld
		.ardout0_p0      (axi_ufi_adpt_0_ufi_axi_extra_ardout0_p0),                                                                                                                                                                                                                               //  output,   width = 50,               .ardout0_p0
		.ardout0_p1      (axi_ufi_adpt_0_ufi_axi_extra_ardout0_p1),                                                                                                                                                                                                                               //  output,   width = 18,               .ardout0_p1
		.ardout0_qos     (axi_ufi_adpt_0_ufi_axi_extra_ardout0_qos),                                                                                                                                                                                                                              //  output,    width = 2,               .ardout0_qos
		.ardout0_ap      (axi_ufi_adpt_0_ufi_axi_extra_ardout0_ap),                                                                                                                                                                                                                               //  output,    width = 2,               .ardout0_ap
		.ardout2_p0      (axi_ufi_adpt_0_ufi_axi_extra_ardout2_p0),                                                                                                                                                                                                                               //  output,   width = 50,               .ardout2_p0
		.ardout2_p1      (axi_ufi_adpt_0_ufi_axi_extra_ardout2_p1),                                                                                                                                                                                                                               //  output,   width = 18,               .ardout2_p1
		.ardout2_ap      (axi_ufi_adpt_0_ufi_axi_extra_ardout2_ap),                                                                                                                                                                                                                               //  output,    width = 2,               .ardout2_ap
		.ardout2_qos     (axi_ufi_adpt_0_ufi_axi_extra_ardout2_qos),                                                                                                                                                                                                                              //  output,    width = 2,               .ardout2_qos
		.awid_0          (axi_0_0_awid),                                                                                                                                                                                                                                                          //   input,    width = 9,        axi_0_0.awid
		.awaddr_0        (axi_0_0_awaddr),                                                                                                                                                                                                                                                        //   input,   width = 29,               .awaddr
		.awlen_0         (axi_0_0_awlen),                                                                                                                                                                                                                                                         //   input,    width = 8,               .awlen
		.awsize_0        (axi_0_0_awsize),                                                                                                                                                                                                                                                        //   input,    width = 3,               .awsize
		.awburst_0       (axi_0_0_awburst),                                                                                                                                                                                                                                                       //   input,    width = 2,               .awburst
		.awprot_0        (axi_0_0_awprot),                                                                                                                                                                                                                                                        //   input,    width = 3,               .awprot
		.awqos_0         (axi_0_0_awqos),                                                                                                                                                                                                                                                         //   input,    width = 4,               .awqos
		.awuser_ap_0     (axi_0_0_awuser),                                                                                                                                                                                                                                                        //   input,    width = 1,               .awuser
		.awvalid_0       (axi_0_0_awvalid),                                                                                                                                                                                                                                                       //   input,    width = 1,               .awvalid
		.awready_0       (axi_0_0_awready),                                                                                                                                                                                                                                                       //  output,    width = 1,               .awready
		.wdata_0         (axi_0_0_wdata),                                                                                                                                                                                                                                                         //   input,  width = 256,               .wdata
		.wstrb_0         (axi_0_0_wstrb),                                                                                                                                                                                                                                                         //   input,   width = 32,               .wstrb
		.wlast_0         (axi_0_0_wlast),                                                                                                                                                                                                                                                         //   input,    width = 1,               .wlast
		.wvalid_0        (axi_0_0_wvalid),                                                                                                                                                                                                                                                        //   input,    width = 1,               .wvalid
		.wready_0        (axi_0_0_wready),                                                                                                                                                                                                                                                        //  output,    width = 1,               .wready
		.bid_0           (axi_0_0_bid),                                                                                                                                                                                                                                                           //  output,    width = 9,               .bid
		.bresp_0         (axi_0_0_bresp),                                                                                                                                                                                                                                                         //  output,    width = 2,               .bresp
		.bvalid_0        (axi_0_0_bvalid),                                                                                                                                                                                                                                                        //  output,    width = 1,               .bvalid
		.bready_0        (axi_0_0_bready),                                                                                                                                                                                                                                                        //   input,    width = 1,               .bready
		.arid_0          (axi_0_0_arid),                                                                                                                                                                                                                                                          //   input,    width = 9,               .arid
		.araddr_0        (axi_0_0_araddr),                                                                                                                                                                                                                                                        //   input,   width = 29,               .araddr
		.arlen_0         (axi_0_0_arlen),                                                                                                                                                                                                                                                         //   input,    width = 8,               .arlen
		.arsize_0        (axi_0_0_arsize),                                                                                                                                                                                                                                                        //   input,    width = 3,               .arsize
		.arburst_0       (axi_0_0_arburst),                                                                                                                                                                                                                                                       //   input,    width = 2,               .arburst
		.arprot_0        (axi_0_0_arprot),                                                                                                                                                                                                                                                        //   input,    width = 3,               .arprot
		.arqos_0         (axi_0_0_arqos),                                                                                                                                                                                                                                                         //   input,    width = 4,               .arqos
		.aruser_ap_0     (axi_0_0_aruser),                                                                                                                                                                                                                                                        //   input,    width = 1,               .aruser
		.arvalid_0       (axi_0_0_arvalid),                                                                                                                                                                                                                                                       //   input,    width = 1,               .arvalid
		.arready_0       (axi_0_0_arready),                                                                                                                                                                                                                                                       //  output,    width = 1,               .arready
		.rid_0           (axi_0_0_rid),                                                                                                                                                                                                                                                           //  output,    width = 9,               .rid
		.rdata_0         (axi_0_0_rdata),                                                                                                                                                                                                                                                         //  output,  width = 256,               .rdata
		.rresp_0         (axi_0_0_rresp),                                                                                                                                                                                                                                                         //  output,    width = 2,               .rresp
		.rlast_0         (axi_0_0_rlast),                                                                                                                                                                                                                                                         //  output,    width = 1,               .rlast
		.rvalid_0        (axi_0_0_rvalid),                                                                                                                                                                                                                                                        //  output,    width = 1,               .rvalid
		.rready_0        (axi_0_0_rready),                                                                                                                                                                                                                                                        //   input,    width = 1,               .rready
		.awid_1          (axi_0_1_awid),                                                                                                                                                                                                                                                          //   input,    width = 9,        axi_0_1.awid
		.awaddr_1        (axi_0_1_awaddr),                                                                                                                                                                                                                                                        //   input,   width = 29,               .awaddr
		.awlen_1         (axi_0_1_awlen),                                                                                                                                                                                                                                                         //   input,    width = 8,               .awlen
		.awsize_1        (axi_0_1_awsize),                                                                                                                                                                                                                                                        //   input,    width = 3,               .awsize
		.awburst_1       (axi_0_1_awburst),                                                                                                                                                                                                                                                       //   input,    width = 2,               .awburst
		.awprot_1        (axi_0_1_awprot),                                                                                                                                                                                                                                                        //   input,    width = 3,               .awprot
		.awqos_1         (axi_0_1_awqos),                                                                                                                                                                                                                                                         //   input,    width = 4,               .awqos
		.awuser_ap_1     (axi_0_1_awuser),                                                                                                                                                                                                                                                        //   input,    width = 1,               .awuser
		.awvalid_1       (axi_0_1_awvalid),                                                                                                                                                                                                                                                       //   input,    width = 1,               .awvalid
		.awready_1       (axi_0_1_awready),                                                                                                                                                                                                                                                       //  output,    width = 1,               .awready
		.wdata_1         (axi_0_1_wdata),                                                                                                                                                                                                                                                         //   input,  width = 256,               .wdata
		.wstrb_1         (axi_0_1_wstrb),                                                                                                                                                                                                                                                         //   input,   width = 32,               .wstrb
		.wlast_1         (axi_0_1_wlast),                                                                                                                                                                                                                                                         //   input,    width = 1,               .wlast
		.wvalid_1        (axi_0_1_wvalid),                                                                                                                                                                                                                                                        //   input,    width = 1,               .wvalid
		.wready_1        (axi_0_1_wready),                                                                                                                                                                                                                                                        //  output,    width = 1,               .wready
		.bid_1           (axi_0_1_bid),                                                                                                                                                                                                                                                           //  output,    width = 9,               .bid
		.bresp_1         (axi_0_1_bresp),                                                                                                                                                                                                                                                         //  output,    width = 2,               .bresp
		.bvalid_1        (axi_0_1_bvalid),                                                                                                                                                                                                                                                        //  output,    width = 1,               .bvalid
		.bready_1        (axi_0_1_bready),                                                                                                                                                                                                                                                        //   input,    width = 1,               .bready
		.arid_1          (axi_0_1_arid),                                                                                                                                                                                                                                                          //   input,    width = 9,               .arid
		.araddr_1        (axi_0_1_araddr),                                                                                                                                                                                                                                                        //   input,   width = 29,               .araddr
		.arlen_1         (axi_0_1_arlen),                                                                                                                                                                                                                                                         //   input,    width = 8,               .arlen
		.arsize_1        (axi_0_1_arsize),                                                                                                                                                                                                                                                        //   input,    width = 3,               .arsize
		.arburst_1       (axi_0_1_arburst),                                                                                                                                                                                                                                                       //   input,    width = 2,               .arburst
		.arprot_1        (axi_0_1_arprot),                                                                                                                                                                                                                                                        //   input,    width = 3,               .arprot
		.arqos_1         (axi_0_1_arqos),                                                                                                                                                                                                                                                         //   input,    width = 4,               .arqos
		.aruser_ap_1     (axi_0_1_aruser),                                                                                                                                                                                                                                                        //   input,    width = 1,               .aruser
		.arvalid_1       (axi_0_1_arvalid),                                                                                                                                                                                                                                                       //   input,    width = 1,               .arvalid
		.arready_1       (axi_0_1_arready),                                                                                                                                                                                                                                                       //  output,    width = 1,               .arready
		.rid_1           (axi_0_1_rid),                                                                                                                                                                                                                                                           //  output,    width = 9,               .rid
		.rdata_1         (axi_0_1_rdata),                                                                                                                                                                                                                                                         //  output,  width = 256,               .rdata
		.rresp_1         (axi_0_1_rresp),                                                                                                                                                                                                                                                         //  output,    width = 2,               .rresp
		.rlast_1         (axi_0_1_rlast),                                                                                                                                                                                                                                                         //  output,    width = 1,               .rlast
		.rvalid_1        (axi_0_1_rvalid),                                                                                                                                                                                                                                                        //  output,    width = 1,               .rvalid
		.rready_1        (axi_0_1_rready),                                                                                                                                                                                                                                                        //   input,    width = 1,               .rready
		.ruser_err_dbe_0 (axi_extra_0_0_ruser_err_dbe),                                                                                                                                                                                                                                           //  output,    width = 1,  axi_extra_0_0.ruser_err_dbe
		.ruser_data_0    (axi_extra_0_0_ruser_data),                                                                                                                                                                                                                                              //  output,   width = 32,               .ruser_data
		.wuser_data_0    (axi_extra_0_0_wuser_data),                                                                                                                                                                                                                                              //   input,   width = 32,               .wuser_data
		.wuser_strb_0    (axi_extra_0_0_wuser_strb),                                                                                                                                                                                                                                              //   input,    width = 4,               .wuser_strb
		.ruser_err_dbe_1 (axi_extra_0_1_ruser_err_dbe),                                                                                                                                                                                                                                           //  output,    width = 1,  axi_extra_0_1.ruser_err_dbe
		.ruser_data_1    (axi_extra_0_1_ruser_data),                                                                                                                                                                                                                                              //  output,   width = 32,               .ruser_data
		.wuser_data_1    (axi_extra_0_1_wuser_data),                                                                                                                                                                                                                                              //   input,   width = 32,               .wuser_data
		.wuser_strb_1    (axi_extra_0_1_wuser_strb),                                                                                                                                                                                                                                              //   input,    width = 4,               .wuser_strb
		.ur_paddr_0      (apb_0_ur_paddr),                                                                                                                                                                                                                                                        //   input,   width = 16,          apb_0.ur_paddr
		.ur_psel_0       (apb_0_ur_psel),                                                                                                                                                                                                                                                         //   input,    width = 1,               .ur_psel
		.ur_penable_0    (apb_0_ur_penable),                                                                                                                                                                                                                                                      //   input,    width = 1,               .ur_penable
		.ur_pwrite_0     (apb_0_ur_pwrite),                                                                                                                                                                                                                                                       //   input,    width = 1,               .ur_pwrite
		.ur_pwdata_0     (apb_0_ur_pwdata),                                                                                                                                                                                                                                                       //   input,   width = 16,               .ur_pwdata
		.ur_pstrb_0      (apb_0_ur_pstrb),                                                                                                                                                                                                                                                        //   input,    width = 2,               .ur_pstrb
		.ur_prready_0    (apb_0_ur_prready),                                                                                                                                                                                                                                                      //  output,    width = 1,               .ur_prready
		.ur_prdata_0     (apb_0_ur_prdata),                                                                                                                                                                                                                                                       //  output,   width = 16,               .ur_prdata
		.wmc_clk_1       (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.phy_clk_1       (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.wmcrst_n_1      (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.sdout0_2_0      (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.sdout0_en_2_0   (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.sdin0_2_0       (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000),                                                                                                                                                                                  // (terminated),                              
		.sdin0_en_2_0    (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ddout0_2_0      (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ddout0_en_2_0   (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ddin0_2_0       (8'b00000000),                                                                                                                                                                                                                                                           // (terminated),                              
		.ddin0_en_2_0    (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ddout1_2_0      (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ddout1_en_2_0   (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ddin1_2_0       (8'b00000000),                                                                                                                                                                                                                                                           // (terminated),                              
		.ddin1_en_2_0    (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.sdout0_2_1      (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.sdout0_en_2_1   (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.sdin0_2_1       (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000),                                                                                                                                                                                  // (terminated),                              
		.sdin0_en_2_1    (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ddout0_2_1      (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ddout0_en_2_1   (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ddin0_2_1       (8'b00000000),                                                                                                                                                                                                                                                           // (terminated),                              
		.ddin0_en_2_1    (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ddout1_2_1      (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ddout1_en_2_1   (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ddin1_2_1       (8'b00000000),                                                                                                                                                                                                                                                           // (terminated),                              
		.ddin1_en_2_1    (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.sdout0_3_0      (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.sdout0_en_3_0   (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.sdin0_3_0       (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000),                                                                                                                                                                                  // (terminated),                              
		.sdin0_en_3_0    (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ddout0_3_0      (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ddout0_en_3_0   (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ddin0_3_0       (8'b00000000),                                                                                                                                                                                                                                                           // (terminated),                              
		.ddin0_en_3_0    (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ddout1_3_0      (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ddout1_en_3_0   (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ddin1_3_0       (8'b00000000),                                                                                                                                                                                                                                                           // (terminated),                              
		.ddin1_en_3_0    (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.sdout0_3_1      (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.sdout0_en_3_1   (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.sdin0_3_1       (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000),                                                                                                                                                                                  // (terminated),                              
		.sdin0_en_3_1    (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ddout0_3_1      (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ddout0_en_3_1   (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ddin0_3_1       (8'b00000000),                                                                                                                                                                                                                                                           // (terminated),                              
		.ddin0_en_3_1    (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ddout1_3_1      (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ddout1_en_3_1   (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ddin1_3_1       (8'b00000000),                                                                                                                                                                                                                                                           // (terminated),                              
		.ddin1_en_3_1    (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.sdout0_7_0      (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.sdout0_en_7_0   (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.sdin0_7_0       (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000),                                                                                                                                                                                  // (terminated),                              
		.sdin0_en_7_0    (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ddout0_7_0      (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ddout0_en_7_0   (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ddin0_7_0       (8'b00000000),                                                                                                                                                                                                                                                           // (terminated),                              
		.ddin0_en_7_0    (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ddout1_7_0      (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ddout1_en_7_0   (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ddin1_7_0       (8'b00000000),                                                                                                                                                                                                                                                           // (terminated),                              
		.ddin1_en_7_0    (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.sdout0_7_1      (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.sdout0_en_7_1   (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.sdin0_7_1       (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000),                                                                                                                                                                                  // (terminated),                              
		.sdin0_en_7_1    (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ddout0_7_1      (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ddout0_en_7_1   (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ddin0_7_1       (8'b00000000),                                                                                                                                                                                                                                                           // (terminated),                              
		.ddin0_en_7_1    (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ddout1_7_1      (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ddout1_en_7_1   (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ddin1_7_1       (8'b00000000),                                                                                                                                                                                                                                                           // (terminated),                              
		.ddin1_en_7_1    (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.sdout0_8_0      (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.sdout0_en_8_0   (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.sdin0_8_0       (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000),                                                                                                                                                                                  // (terminated),                              
		.sdin0_en_8_0    (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ddout0_8_0      (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ddout0_en_8_0   (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ddin0_8_0       (8'b00000000),                                                                                                                                                                                                                                                           // (terminated),                              
		.ddin0_en_8_0    (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ddout1_8_0      (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ddout1_en_8_0   (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ddin1_8_0       (8'b00000000),                                                                                                                                                                                                                                                           // (terminated),                              
		.ddin1_en_8_0    (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.sdout0_8_1      (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.sdout0_en_8_1   (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.sdin0_8_1       (80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000),                                                                                                                                                                                  // (terminated),                              
		.sdin0_en_8_1    (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ddout0_8_1      (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ddout0_en_8_1   (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ddin0_8_1       (8'b00000000),                                                                                                                                                                                                                                                           // (terminated),                              
		.ddin0_en_8_1    (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ddout1_8_1      (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ddout1_en_8_1   (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ddin1_8_1       (8'b00000000),                                                                                                                                                                                                                                                           // (terminated),                              
		.ddin1_en_8_1    (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.rden_2          (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.rd_vld_2        (2'b00),                                                                                                                                                                                                                                                                 // (terminated),                              
		.remap_sts_2     (4'b0000),                                                                                                                                                                                                                                                               // (terminated),                              
		.rden_3          (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.rd_vld_3        (2'b00),                                                                                                                                                                                                                                                                 // (terminated),                              
		.remap_sts_3     (4'b0000),                                                                                                                                                                                                                                                               // (terminated),                              
		.rden_7          (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.rd_vld_7        (2'b00),                                                                                                                                                                                                                                                                 // (terminated),                              
		.remap_sts_7     (4'b0000),                                                                                                                                                                                                                                                               // (terminated),                              
		.rden_8          (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.rd_vld_8        (2'b00),                                                                                                                                                                                                                                                                 // (terminated),                              
		.remap_sts_8     (4'b0000),                                                                                                                                                                                                                                                               // (terminated),                              
		.awid_2          (9'b000000000),                                                                                                                                                                                                                                                          // (terminated),                              
		.awaddr_2        (29'b00000000000000000000000000000),                                                                                                                                                                                                                                     // (terminated),                              
		.awlen_2         (8'b00000000),                                                                                                                                                                                                                                                           // (terminated),                              
		.awsize_2        (3'b000),                                                                                                                                                                                                                                                                // (terminated),                              
		.awburst_2       (2'b00),                                                                                                                                                                                                                                                                 // (terminated),                              
		.awprot_2        (3'b000),                                                                                                                                                                                                                                                                // (terminated),                              
		.awqos_2         (4'b0000),                                                                                                                                                                                                                                                               // (terminated),                              
		.awuser_ap_2     (1'b0),                                                                                                                                                                                                                                                                  // (terminated),                              
		.awvalid_2       (1'b0),                                                                                                                                                                                                                                                                  // (terminated),                              
		.awready_2       (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.wdata_2         (256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                              
		.wstrb_2         (32'b00000000000000000000000000000000),                                                                                                                                                                                                                                  // (terminated),                              
		.wlast_2         (1'b0),                                                                                                                                                                                                                                                                  // (terminated),                              
		.wvalid_2        (1'b0),                                                                                                                                                                                                                                                                  // (terminated),                              
		.wready_2        (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.bid_2           (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.bresp_2         (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.bvalid_2        (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.bready_2        (1'b0),                                                                                                                                                                                                                                                                  // (terminated),                              
		.arid_2          (9'b000000000),                                                                                                                                                                                                                                                          // (terminated),                              
		.araddr_2        (29'b00000000000000000000000000000),                                                                                                                                                                                                                                     // (terminated),                              
		.arlen_2         (8'b00000000),                                                                                                                                                                                                                                                           // (terminated),                              
		.arsize_2        (3'b000),                                                                                                                                                                                                                                                                // (terminated),                              
		.arburst_2       (2'b00),                                                                                                                                                                                                                                                                 // (terminated),                              
		.arprot_2        (3'b000),                                                                                                                                                                                                                                                                // (terminated),                              
		.arqos_2         (4'b0000),                                                                                                                                                                                                                                                               // (terminated),                              
		.aruser_ap_2     (1'b0),                                                                                                                                                                                                                                                                  // (terminated),                              
		.arvalid_2       (1'b0),                                                                                                                                                                                                                                                                  // (terminated),                              
		.arready_2       (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.rid_2           (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.rdata_2         (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.rresp_2         (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.rlast_2         (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.rvalid_2        (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.rready_2        (1'b0),                                                                                                                                                                                                                                                                  // (terminated),                              
		.awid_3          (9'b000000000),                                                                                                                                                                                                                                                          // (terminated),                              
		.awaddr_3        (29'b00000000000000000000000000000),                                                                                                                                                                                                                                     // (terminated),                              
		.awlen_3         (8'b00000000),                                                                                                                                                                                                                                                           // (terminated),                              
		.awsize_3        (3'b000),                                                                                                                                                                                                                                                                // (terminated),                              
		.awburst_3       (2'b00),                                                                                                                                                                                                                                                                 // (terminated),                              
		.awprot_3        (3'b000),                                                                                                                                                                                                                                                                // (terminated),                              
		.awqos_3         (4'b0000),                                                                                                                                                                                                                                                               // (terminated),                              
		.awuser_ap_3     (1'b0),                                                                                                                                                                                                                                                                  // (terminated),                              
		.awvalid_3       (1'b0),                                                                                                                                                                                                                                                                  // (terminated),                              
		.awready_3       (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.wdata_3         (256'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                              
		.wstrb_3         (32'b00000000000000000000000000000000),                                                                                                                                                                                                                                  // (terminated),                              
		.wlast_3         (1'b0),                                                                                                                                                                                                                                                                  // (terminated),                              
		.wvalid_3        (1'b0),                                                                                                                                                                                                                                                                  // (terminated),                              
		.wready_3        (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.bid_3           (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.bresp_3         (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.bvalid_3        (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.bready_3        (1'b0),                                                                                                                                                                                                                                                                  // (terminated),                              
		.arid_3          (9'b000000000),                                                                                                                                                                                                                                                          // (terminated),                              
		.araddr_3        (29'b00000000000000000000000000000),                                                                                                                                                                                                                                     // (terminated),                              
		.arlen_3         (8'b00000000),                                                                                                                                                                                                                                                           // (terminated),                              
		.arsize_3        (3'b000),                                                                                                                                                                                                                                                                // (terminated),                              
		.arburst_3       (2'b00),                                                                                                                                                                                                                                                                 // (terminated),                              
		.arprot_3        (3'b000),                                                                                                                                                                                                                                                                // (terminated),                              
		.arqos_3         (4'b0000),                                                                                                                                                                                                                                                               // (terminated),                              
		.aruser_ap_3     (1'b0),                                                                                                                                                                                                                                                                  // (terminated),                              
		.arvalid_3       (1'b0),                                                                                                                                                                                                                                                                  // (terminated),                              
		.arready_3       (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.rid_3           (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.rdata_3         (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.rresp_3         (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.rlast_3         (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.rvalid_3        (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.rready_3        (1'b0),                                                                                                                                                                                                                                                                  // (terminated),                              
		.ruser_err_dbe_2 (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ruser_data_2    (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.wuser_data_2    (32'b00000000000000000000000000000000),                                                                                                                                                                                                                                  // (terminated),                              
		.wuser_strb_2    (4'b0000),                                                                                                                                                                                                                                                               // (terminated),                              
		.ruser_err_dbe_3 (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ruser_data_3    (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.wuser_data_3    (32'b00000000000000000000000000000000),                                                                                                                                                                                                                                  // (terminated),                              
		.wuser_strb_3    (4'b0000),                                                                                                                                                                                                                                                               // (terminated),                              
		.ur_paddr_1      (16'b0000000000000000),                                                                                                                                                                                                                                                  // (terminated),                              
		.ur_psel_1       (1'b0),                                                                                                                                                                                                                                                                  // (terminated),                              
		.ur_penable_1    (1'b0),                                                                                                                                                                                                                                                                  // (terminated),                              
		.ur_pwrite_1     (1'b0),                                                                                                                                                                                                                                                                  // (terminated),                              
		.ur_pwdata_1     (16'b0000000000000000),                                                                                                                                                                                                                                                  // (terminated),                              
		.ur_pstrb_1      (2'b00),                                                                                                                                                                                                                                                                 // (terminated),                              
		.ur_prready_1    (),                                                                                                                                                                                                                                                                      // (terminated),                              
		.ur_prdata_1     ()                                                                                                                                                                                                                                                                       // (terminated),                              
	);

endmodule
