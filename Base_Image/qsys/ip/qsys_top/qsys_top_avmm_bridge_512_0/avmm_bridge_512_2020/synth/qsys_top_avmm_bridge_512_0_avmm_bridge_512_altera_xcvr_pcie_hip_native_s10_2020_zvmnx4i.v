// qsys_top_avmm_bridge_512_0_avmm_bridge_512_altera_xcvr_pcie_hip_native_s10_2020_zvmnx4i.v

// Generated using ACDS version 20.3 158

`timescale 1 ps / 1 ps
module qsys_top_avmm_bridge_512_0_avmm_bridge_512_altera_xcvr_pcie_hip_native_s10_2020_zvmnx4i (
		input  wire [1:0]    pipe_sw_done,          //          pipe_sw_done.pipe_sw_done
		output wire [1:0]    pipe_sw,               //               pipe_sw.pipe_sw
		input  wire [15:0]   tx_analogreset,        //        tx_analogreset.tx_analogreset
		input  wire [15:0]   tx_digitalreset,       //       tx_digitalreset.tx_digitalreset
		input  wire [15:0]   rx_analogreset,        //        rx_analogreset.rx_analogreset
		input  wire [15:0]   rx_digitalreset,       //       rx_digitalreset.rx_digitalreset
		input  wire [15:0]   tx_aibreset,           //           tx_aibreset.tx_aibreset
		input  wire [15:0]   rx_aibreset,           //           rx_aibreset.rx_aibreset
		output wire [15:0]   tx_transfer_ready,     //     tx_transfer_ready.tx_transfer_ready
		output wire [15:0]   rx_transfer_ready,     //     rx_transfer_ready.rx_transfer_ready
		output wire [15:0]   tx_cal_busy,           //           tx_cal_busy.tx_cal_busy
		output wire [15:0]   rx_cal_busy,           //           rx_cal_busy.rx_cal_busy
		input  wire [5:0]    tx_bonding_clocks,     //     tx_bonding_clocks.tx_bonding_clocks
		input  wire          rx_cdr_refclk0,        //        rx_cdr_refclk0.rx_cdr_refclk0
		output wire [15:0]   tx_serial_data,        //        tx_serial_data.tx_serial_data
		input  wire [15:0]   rx_serial_data,        //        rx_serial_data.rx_serial_data
		output wire [15:0]   rx_is_lockedtoref,     //     rx_is_lockedtoref.rx_is_lockedtoref
		output wire [15:0]   rx_is_lockedtodata,    //    rx_is_lockedtodata.rx_is_lockedtodata
		output wire [1279:0] rx_parallel_data,      //      rx_parallel_data.rx_parallel_data
		input  wire [1279:0] tx_parallel_data,      //      tx_parallel_data.tx_parallel_data
		output wire [15:0]   tx_clkout,             //             tx_clkout.tx_clkout
		output wire [15:0]   tx_clkout2,            //            tx_clkout2.tx_clkout2
		output wire [15:0]   rx_clkout,             //             rx_clkout.rx_clkout
		input  wire          pipe_hclk_in,          //          pipe_hclk_in.pipe_hclk_in
		input  wire          tx_serial_clk0,        //        tx_serial_clk0.tx_serial_clk0
		input  wire          tx_serial_clk1,        //        tx_serial_clk1.tx_serial_clk1
		input  wire [47:0]   pipe_rx_eidleinfersel, // pipe_rx_eidleinfersel.pipe_rx_eidleinfersel
		output wire [15:0]   pipe_rx_elecidle,      //      pipe_rx_elecidle.pipe_rx_elecidle
		output wire [15:0]   pld_pmaif_mask_tx_pll, // pld_pmaif_mask_tx_pll.pld_pmaif_mask_tx_pll
		output wire [15:0]   pcie_ctrl_testbus_b10, // pcie_ctrl_testbus_b10.pcie_ctrl_testbus_b10
		input  wire [1615:0] hip_aib_data_in,       //       hip_aib_data_in.hip_aib_data_in
		output wire [2111:0] hip_aib_data_out,      //      hip_aib_data_out.hip_aib_data_out
		input  wire [1471:0] hip_pcs_data_in,       //       hip_pcs_data_in.hip_pcs_data_in
		output wire [991:0]  hip_pcs_data_out,      //      hip_pcs_data_out.hip_pcs_data_out
		input  wire [63:0]   hip_aib_fsr_in,        //        hip_aib_fsr_in.hip_aib_fsr_in
		input  wire [639:0]  hip_aib_ssr_in,        //        hip_aib_ssr_in.hip_aib_ssr_in
		output wire [63:0]   hip_aib_fsr_out,       //       hip_aib_fsr_out.hip_aib_fsr_out
		output wire [127:0]  hip_aib_ssr_out,       //       hip_aib_ssr_out.hip_aib_ssr_out
		input  wire [31:0]   hip_in_reserved_out,   //   hip_in_reserved_out.hip_in_reserved_out
		output wire [15:0]   hip_cal_done,          //          hip_cal_done.hip_cal_done
		input  wire          reconfig_clk,          //          reconfig_clk.reconfig_clk
		input  wire          reconfig_reset,        //        reconfig_reset.reconfig_reset
		input  wire          reconfig_write,        //        reconfig_write.reconfig_write
		input  wire          reconfig_read,         //         reconfig_read.reconfig_read
		input  wire [14:0]   reconfig_address,      //      reconfig_address.reconfig_address
		input  wire [31:0]   reconfig_writedata,    //    reconfig_writedata.reconfig_writedata
		output wire [31:0]   reconfig_readdata,     //     reconfig_readdata.reconfig_readdata
		output wire          reconfig_waitrequest   //  reconfig_waitrequest.reconfig_waitrequest
	);

	qsys_top_avmm_bridge_512_0_altera_xcvr_pcie_hip_native_s10_191_xndluca phy_g3x16 (
		.pipe_sw_done          (pipe_sw_done),          //   input,     width = 2,          pipe_sw_done.pipe_sw_done
		.pipe_sw               (pipe_sw),               //  output,     width = 2,               pipe_sw.pipe_sw
		.tx_analogreset        (tx_analogreset),        //   input,    width = 16,        tx_analogreset.tx_analogreset
		.tx_digitalreset       (tx_digitalreset),       //   input,    width = 16,       tx_digitalreset.tx_digitalreset
		.rx_analogreset        (rx_analogreset),        //   input,    width = 16,        rx_analogreset.rx_analogreset
		.rx_digitalreset       (rx_digitalreset),       //   input,    width = 16,       rx_digitalreset.rx_digitalreset
		.tx_aibreset           (tx_aibreset),           //   input,    width = 16,           tx_aibreset.tx_aibreset
		.rx_aibreset           (rx_aibreset),           //   input,    width = 16,           rx_aibreset.rx_aibreset
		.tx_transfer_ready     (tx_transfer_ready),     //  output,    width = 16,     tx_transfer_ready.tx_transfer_ready
		.rx_transfer_ready     (rx_transfer_ready),     //  output,    width = 16,     rx_transfer_ready.rx_transfer_ready
		.tx_cal_busy           (tx_cal_busy),           //  output,    width = 16,           tx_cal_busy.tx_cal_busy
		.rx_cal_busy           (rx_cal_busy),           //  output,    width = 16,           rx_cal_busy.rx_cal_busy
		.tx_bonding_clocks     (tx_bonding_clocks),     //   input,     width = 6,     tx_bonding_clocks.tx_bonding_clocks
		.rx_cdr_refclk0        (rx_cdr_refclk0),        //   input,     width = 1,        rx_cdr_refclk0.rx_cdr_refclk0
		.tx_serial_data        (tx_serial_data),        //  output,    width = 16,        tx_serial_data.tx_serial_data
		.rx_serial_data        (rx_serial_data),        //   input,    width = 16,        rx_serial_data.rx_serial_data
		.rx_is_lockedtoref     (rx_is_lockedtoref),     //  output,    width = 16,     rx_is_lockedtoref.rx_is_lockedtoref
		.rx_is_lockedtodata    (rx_is_lockedtodata),    //  output,    width = 16,    rx_is_lockedtodata.rx_is_lockedtodata
		.rx_parallel_data      (rx_parallel_data),      //  output,  width = 1280,      rx_parallel_data.rx_parallel_data
		.tx_parallel_data      (tx_parallel_data),      //   input,  width = 1280,      tx_parallel_data.tx_parallel_data
		.tx_clkout             (tx_clkout),             //  output,    width = 16,             tx_clkout.tx_clkout
		.tx_clkout2            (tx_clkout2),            //  output,    width = 16,            tx_clkout2.tx_clkout2
		.rx_clkout             (rx_clkout),             //  output,    width = 16,             rx_clkout.rx_clkout
		.pipe_hclk_in          (pipe_hclk_in),          //   input,     width = 1,          pipe_hclk_in.pipe_hclk_in
		.tx_serial_clk0        (tx_serial_clk0),        //   input,     width = 1,        tx_serial_clk0.tx_serial_clk0
		.tx_serial_clk1        (tx_serial_clk1),        //   input,     width = 1,        tx_serial_clk1.tx_serial_clk1
		.pipe_rx_eidleinfersel (pipe_rx_eidleinfersel), //   input,    width = 48, pipe_rx_eidleinfersel.pipe_rx_eidleinfersel
		.pipe_rx_elecidle      (pipe_rx_elecidle),      //  output,    width = 16,      pipe_rx_elecidle.pipe_rx_elecidle
		.pld_pmaif_mask_tx_pll (pld_pmaif_mask_tx_pll), //  output,    width = 16, pld_pmaif_mask_tx_pll.pld_pmaif_mask_tx_pll
		.pcie_ctrl_testbus_b10 (pcie_ctrl_testbus_b10), //  output,    width = 16, pcie_ctrl_testbus_b10.pcie_ctrl_testbus_b10
		.hip_aib_data_in       (hip_aib_data_in),       //   input,  width = 1616,       hip_aib_data_in.hip_aib_data_in
		.hip_aib_data_out      (hip_aib_data_out),      //  output,  width = 2112,      hip_aib_data_out.hip_aib_data_out
		.hip_pcs_data_in       (hip_pcs_data_in),       //   input,  width = 1472,       hip_pcs_data_in.hip_pcs_data_in
		.hip_pcs_data_out      (hip_pcs_data_out),      //  output,   width = 992,      hip_pcs_data_out.hip_pcs_data_out
		.hip_aib_fsr_in        (hip_aib_fsr_in),        //   input,    width = 64,        hip_aib_fsr_in.hip_aib_fsr_in
		.hip_aib_ssr_in        (hip_aib_ssr_in),        //   input,   width = 640,        hip_aib_ssr_in.hip_aib_ssr_in
		.hip_aib_fsr_out       (hip_aib_fsr_out),       //  output,    width = 64,       hip_aib_fsr_out.hip_aib_fsr_out
		.hip_aib_ssr_out       (hip_aib_ssr_out),       //  output,   width = 128,       hip_aib_ssr_out.hip_aib_ssr_out
		.hip_in_reserved_out   (hip_in_reserved_out),   //   input,    width = 32,   hip_in_reserved_out.hip_in_reserved_out
		.hip_cal_done          (hip_cal_done),          //  output,    width = 16,          hip_cal_done.hip_cal_done
		.reconfig_clk          (reconfig_clk),          //   input,     width = 1,          reconfig_clk.reconfig_clk
		.reconfig_reset        (reconfig_reset),        //   input,     width = 1,        reconfig_reset.reconfig_reset
		.reconfig_write        (reconfig_write),        //   input,     width = 1,        reconfig_write.reconfig_write
		.reconfig_read         (reconfig_read),         //   input,     width = 1,         reconfig_read.reconfig_read
		.reconfig_address      (reconfig_address),      //   input,    width = 15,      reconfig_address.reconfig_address
		.reconfig_writedata    (reconfig_writedata),    //   input,    width = 32,    reconfig_writedata.reconfig_writedata
		.reconfig_readdata     (reconfig_readdata),     //  output,    width = 32,     reconfig_readdata.reconfig_readdata
		.reconfig_waitrequest  (reconfig_waitrequest)   //  output,     width = 1,  reconfig_waitrequest.reconfig_waitrequest
	);

endmodule
