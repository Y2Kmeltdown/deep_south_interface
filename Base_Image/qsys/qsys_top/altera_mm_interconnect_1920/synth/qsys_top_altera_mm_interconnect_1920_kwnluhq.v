// qsys_top_altera_mm_interconnect_1920_kwnluhq.v

// This file was auto-generated from altera_mm_interconnect_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 20.3 158

`timescale 1 ps / 1 ps
module qsys_top_altera_mm_interconnect_1920_kwnluhq (
		input  wire [31:0] qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_address,               //                 qsys_top_spi_slave_to_avmm_master_bridge_avalon_master.address
		output wire        qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_waitrequest,           //                                                                       .waitrequest
		input  wire [3:0]  qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_byteenable,            //                                                                       .byteenable
		input  wire        qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_read,                  //                                                                       .read
		output wire [31:0] qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_readdata,              //                                                                       .readdata
		output wire        qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_readdatavalid,         //                                                                       .readdatavalid
		input  wire        qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_write,                 //                                                                       .write
		input  wire [31:0] qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_writedata,             //                                                                       .writedata
		output wire [14:0] spi_pb_0_s0_address,                                                          //                                                            spi_pb_0_s0.address
		output wire        spi_pb_0_s0_write,                                                            //                                                                       .write
		output wire        spi_pb_0_s0_read,                                                             //                                                                       .read
		input  wire [31:0] spi_pb_0_s0_readdata,                                                         //                                                                       .readdata
		output wire [31:0] spi_pb_0_s0_writedata,                                                        //                                                                       .writedata
		output wire [0:0]  spi_pb_0_s0_burstcount,                                                       //                                                                       .burstcount
		output wire [3:0]  spi_pb_0_s0_byteenable,                                                       //                                                                       .byteenable
		input  wire        spi_pb_0_s0_readdatavalid,                                                    //                                                                       .readdatavalid
		input  wire        spi_pb_0_s0_waitrequest,                                                      //                                                                       .waitrequest
		output wire        spi_pb_0_s0_debugaccess,                                                      //                                                                       .debugaccess
		input  wire        qsys_top_spi_slave_to_avmm_master_bridge_reset_n_reset_bridge_in_reset_reset, // qsys_top_spi_slave_to_avmm_master_bridge_reset_n_reset_bridge_in_reset.reset
		input  wire        qsys_clk_config_clk_clk                                                       //                                                    qsys_clk_config_clk.clk
	);

	wire         qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_translator_avalon_universal_master_0_waitrequest;   // spi_pb_0_s0_translator:uav_waitrequest -> qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_translator:uav_waitrequest
	wire  [31:0] qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_translator_avalon_universal_master_0_readdata;      // spi_pb_0_s0_translator:uav_readdata -> qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_translator:uav_readdata
	wire         qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_translator_avalon_universal_master_0_debugaccess;   // qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_translator:uav_debugaccess -> spi_pb_0_s0_translator:uav_debugaccess
	wire  [31:0] qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_translator_avalon_universal_master_0_address;       // qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_translator:uav_address -> spi_pb_0_s0_translator:uav_address
	wire         qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_translator_avalon_universal_master_0_read;          // qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_translator:uav_read -> spi_pb_0_s0_translator:uav_read
	wire   [3:0] qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_translator_avalon_universal_master_0_byteenable;    // qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_translator:uav_byteenable -> spi_pb_0_s0_translator:uav_byteenable
	wire         qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_translator_avalon_universal_master_0_readdatavalid; // spi_pb_0_s0_translator:uav_readdatavalid -> qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_translator:uav_readdatavalid
	wire         qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_translator_avalon_universal_master_0_lock;          // qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_translator:uav_lock -> spi_pb_0_s0_translator:uav_lock
	wire         qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_translator_avalon_universal_master_0_write;         // qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_translator:uav_write -> spi_pb_0_s0_translator:uav_write
	wire  [31:0] qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_translator_avalon_universal_master_0_writedata;     // qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_translator:uav_writedata -> spi_pb_0_s0_translator:uav_writedata
	wire   [2:0] qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_translator_avalon_universal_master_0_burstcount;    // qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_translator:uav_burstcount -> spi_pb_0_s0_translator:uav_burstcount

	qsys_top_altera_merlin_master_translator_191_g7h47bq #(
		.AV_ADDRESS_W                (32),
		.AV_DATA_W                   (32),
		.AV_BURSTCOUNT_W             (1),
		.AV_BYTEENABLE_W             (4),
		.UAV_ADDRESS_W               (32),
		.UAV_BURSTCOUNT_W            (3),
		.USE_READ                    (1),
		.USE_WRITE                   (1),
		.USE_BEGINBURSTTRANSFER      (0),
		.USE_BEGINTRANSFER           (0),
		.USE_CHIPSELECT              (0),
		.USE_BURSTCOUNT              (0),
		.USE_READDATAVALID           (1),
		.USE_WAITREQUEST             (1),
		.USE_READRESPONSE            (0),
		.USE_WRITERESPONSE           (0),
		.AV_SYMBOLS_PER_WORD         (4),
		.AV_ADDRESS_SYMBOLS          (1),
		.AV_BURSTCOUNT_SYMBOLS       (0),
		.AV_CONSTANT_BURST_BEHAVIOR  (0),
		.UAV_CONSTANT_BURST_BEHAVIOR (0),
		.AV_LINEWRAPBURSTS           (0),
		.AV_REGISTERINCOMINGSIGNALS  (0),
		.SYNC_RESET                  (0),
		.WAITREQUEST_ALLOWANCE       (0)
	) qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_translator (
		.clk                    (qsys_clk_config_clk_clk),                                                                                   //   input,   width = 1,                       clk.clk
		.reset                  (qsys_top_spi_slave_to_avmm_master_bridge_reset_n_reset_bridge_in_reset_reset),                              //   input,   width = 1,                     reset.reset
		.uav_address            (qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_translator_avalon_universal_master_0_address),       //  output,  width = 32, avalon_universal_master_0.address
		.uav_burstcount         (qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_translator_avalon_universal_master_0_burstcount),    //  output,   width = 3,                          .burstcount
		.uav_read               (qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_translator_avalon_universal_master_0_read),          //  output,   width = 1,                          .read
		.uav_write              (qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_translator_avalon_universal_master_0_write),         //  output,   width = 1,                          .write
		.uav_waitrequest        (qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_translator_avalon_universal_master_0_waitrequest),   //   input,   width = 1,                          .waitrequest
		.uav_readdatavalid      (qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_translator_avalon_universal_master_0_readdatavalid), //   input,   width = 1,                          .readdatavalid
		.uav_byteenable         (qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_translator_avalon_universal_master_0_byteenable),    //  output,   width = 4,                          .byteenable
		.uav_readdata           (qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_translator_avalon_universal_master_0_readdata),      //   input,  width = 32,                          .readdata
		.uav_writedata          (qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_translator_avalon_universal_master_0_writedata),     //  output,  width = 32,                          .writedata
		.uav_lock               (qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_translator_avalon_universal_master_0_lock),          //  output,   width = 1,                          .lock
		.uav_debugaccess        (qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_translator_avalon_universal_master_0_debugaccess),   //  output,   width = 1,                          .debugaccess
		.av_address             (qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_address),                                            //   input,  width = 32,      avalon_anti_master_0.address
		.av_waitrequest         (qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_waitrequest),                                        //  output,   width = 1,                          .waitrequest
		.av_byteenable          (qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_byteenable),                                         //   input,   width = 4,                          .byteenable
		.av_read                (qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_read),                                               //   input,   width = 1,                          .read
		.av_readdata            (qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_readdata),                                           //  output,  width = 32,                          .readdata
		.av_readdatavalid       (qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_readdatavalid),                                      //  output,   width = 1,                          .readdatavalid
		.av_write               (qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_write),                                              //   input,   width = 1,                          .write
		.av_writedata           (qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_writedata),                                          //   input,  width = 32,                          .writedata
		.av_burstcount          (1'b1),                                                                                                      // (terminated),                                        
		.av_beginbursttransfer  (1'b0),                                                                                                      // (terminated),                                        
		.av_begintransfer       (1'b0),                                                                                                      // (terminated),                                        
		.av_chipselect          (1'b0),                                                                                                      // (terminated),                                        
		.av_lock                (1'b0),                                                                                                      // (terminated),                                        
		.av_debugaccess         (1'b0),                                                                                                      // (terminated),                                        
		.uav_clken              (),                                                                                                          // (terminated),                                        
		.av_clken               (1'b1),                                                                                                      // (terminated),                                        
		.uav_response           (2'b00),                                                                                                     // (terminated),                                        
		.av_response            (),                                                                                                          // (terminated),                                        
		.uav_writeresponsevalid (1'b0),                                                                                                      // (terminated),                                        
		.av_writeresponsevalid  ()                                                                                                           // (terminated),                                        
	);

	qsys_top_altera_merlin_slave_translator_191_x56fcki #(
		.AV_ADDRESS_W                   (15),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (32),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (1),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (1),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (0),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0),
		.WAITREQUEST_ALLOWANCE          (0),
		.SYNC_RESET                     (0)
	) spi_pb_0_s0_translator (
		.clk                    (qsys_clk_config_clk_clk),                                                                                   //   input,   width = 1,                      clk.clk
		.reset                  (qsys_top_spi_slave_to_avmm_master_bridge_reset_n_reset_bridge_in_reset_reset),                              //   input,   width = 1,                    reset.reset
		.uav_address            (qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_translator_avalon_universal_master_0_address),       //   input,  width = 32, avalon_universal_slave_0.address
		.uav_burstcount         (qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_translator_avalon_universal_master_0_burstcount),    //   input,   width = 3,                         .burstcount
		.uav_read               (qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_translator_avalon_universal_master_0_read),          //   input,   width = 1,                         .read
		.uav_write              (qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_translator_avalon_universal_master_0_write),         //   input,   width = 1,                         .write
		.uav_waitrequest        (qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_translator_avalon_universal_master_0_waitrequest),   //  output,   width = 1,                         .waitrequest
		.uav_readdatavalid      (qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_translator_avalon_universal_master_0_readdatavalid), //  output,   width = 1,                         .readdatavalid
		.uav_byteenable         (qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_translator_avalon_universal_master_0_byteenable),    //   input,   width = 4,                         .byteenable
		.uav_readdata           (qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_translator_avalon_universal_master_0_readdata),      //  output,  width = 32,                         .readdata
		.uav_writedata          (qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_translator_avalon_universal_master_0_writedata),     //   input,  width = 32,                         .writedata
		.uav_lock               (qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_translator_avalon_universal_master_0_lock),          //   input,   width = 1,                         .lock
		.uav_debugaccess        (qsys_top_spi_slave_to_avmm_master_bridge_avalon_master_translator_avalon_universal_master_0_debugaccess),   //   input,   width = 1,                         .debugaccess
		.av_address             (spi_pb_0_s0_address),                                                                                       //  output,  width = 15,      avalon_anti_slave_0.address
		.av_write               (spi_pb_0_s0_write),                                                                                         //  output,   width = 1,                         .write
		.av_read                (spi_pb_0_s0_read),                                                                                          //  output,   width = 1,                         .read
		.av_readdata            (spi_pb_0_s0_readdata),                                                                                      //   input,  width = 32,                         .readdata
		.av_writedata           (spi_pb_0_s0_writedata),                                                                                     //  output,  width = 32,                         .writedata
		.av_burstcount          (spi_pb_0_s0_burstcount),                                                                                    //  output,   width = 1,                         .burstcount
		.av_byteenable          (spi_pb_0_s0_byteenable),                                                                                    //  output,   width = 4,                         .byteenable
		.av_readdatavalid       (spi_pb_0_s0_readdatavalid),                                                                                 //   input,   width = 1,                         .readdatavalid
		.av_waitrequest         (spi_pb_0_s0_waitrequest),                                                                                   //   input,   width = 1,                         .waitrequest
		.av_debugaccess         (spi_pb_0_s0_debugaccess),                                                                                   //  output,   width = 1,                         .debugaccess
		.av_begintransfer       (),                                                                                                          // (terminated),                                       
		.av_beginbursttransfer  (),                                                                                                          // (terminated),                                       
		.av_writebyteenable     (),                                                                                                          // (terminated),                                       
		.av_lock                (),                                                                                                          // (terminated),                                       
		.av_chipselect          (),                                                                                                          // (terminated),                                       
		.av_clken               (),                                                                                                          // (terminated),                                       
		.uav_clken              (1'b0),                                                                                                      // (terminated),                                       
		.av_outputenable        (),                                                                                                          // (terminated),                                       
		.uav_response           (),                                                                                                          // (terminated),                                       
		.av_response            (2'b00),                                                                                                     // (terminated),                                       
		.uav_writeresponsevalid (),                                                                                                          // (terminated),                                       
		.av_writeresponsevalid  (1'b0)                                                                                                       // (terminated),                                       
	);

endmodule
