	component l_tile_xcvr_phy_prod is
		port (
			tx_analogreset          : in  std_logic_vector(3 downto 0)   := (others => 'X'); -- tx_analogreset
			rx_analogreset          : in  std_logic_vector(3 downto 0)   := (others => 'X'); -- rx_analogreset
			tx_digitalreset         : in  std_logic_vector(3 downto 0)   := (others => 'X'); -- tx_digitalreset
			rx_digitalreset         : in  std_logic_vector(3 downto 0)   := (others => 'X'); -- rx_digitalreset
			tx_analogreset_stat     : out std_logic_vector(3 downto 0);                      -- tx_analogreset_stat
			rx_analogreset_stat     : out std_logic_vector(3 downto 0);                      -- rx_analogreset_stat
			tx_digitalreset_stat    : out std_logic_vector(3 downto 0);                      -- tx_digitalreset_stat
			rx_digitalreset_stat    : out std_logic_vector(3 downto 0);                      -- rx_digitalreset_stat
			tx_cal_busy             : out std_logic_vector(3 downto 0);                      -- tx_cal_busy
			rx_cal_busy             : out std_logic_vector(3 downto 0);                      -- rx_cal_busy
			tx_serial_clk0          : in  std_logic_vector(3 downto 0)   := (others => 'X'); -- clk
			rx_cdr_refclk0          : in  std_logic                      := 'X';             -- clk
			tx_serial_data          : out std_logic_vector(3 downto 0);                      -- tx_serial_data
			rx_serial_data          : in  std_logic_vector(3 downto 0)   := (others => 'X'); -- rx_serial_data
			rx_is_lockedtoref       : out std_logic_vector(3 downto 0);                      -- rx_is_lockedtoref
			rx_is_lockedtodata      : out std_logic_vector(3 downto 0);                      -- rx_is_lockedtodata
			tx_coreclkin            : in  std_logic_vector(3 downto 0)   := (others => 'X'); -- clk
			rx_coreclkin            : in  std_logic_vector(3 downto 0)   := (others => 'X'); -- clk
			tx_clkout               : out std_logic_vector(3 downto 0);                      -- clk
			rx_clkout               : out std_logic_vector(3 downto 0);                      -- clk
			rx_clkout2              : out std_logic_vector(3 downto 0);                      -- clk
			tx_parallel_data        : in  std_logic_vector(255 downto 0) := (others => 'X'); -- tx_parallel_data
			tx_control              : in  std_logic_vector(7 downto 0)   := (others => 'X'); -- tx_control
			tx_enh_data_valid       : in  std_logic_vector(3 downto 0)   := (others => 'X'); -- tx_enh_data_valid
			unused_tx_parallel_data : in  std_logic_vector(51 downto 0)  := (others => 'X'); -- unused_tx_parallel_data
			rx_parallel_data        : out std_logic_vector(255 downto 0);                    -- rx_parallel_data
			rx_control              : out std_logic_vector(7 downto 0);                      -- rx_control
			rx_enh_data_valid       : out std_logic_vector(3 downto 0);                      -- rx_enh_data_valid
			unused_rx_parallel_data : out std_logic_vector(51 downto 0);                     -- unused_rx_parallel_data
			tx_fifo_full            : out std_logic_vector(3 downto 0);                      -- tx_fifo_full
			tx_fifo_empty           : out std_logic_vector(3 downto 0);                      -- tx_fifo_empty
			rx_fifo_full            : out std_logic_vector(3 downto 0);                      -- rx_fifo_full
			rx_fifo_empty           : out std_logic_vector(3 downto 0);                      -- rx_fifo_empty
			rx_fifo_rd_en           : in  std_logic_vector(3 downto 0)   := (others => 'X'); -- rx_fifo_rd_en
			rx_enh_blk_lock         : out std_logic_vector(3 downto 0)                       -- rx_enh_blk_lock
		);
	end component l_tile_xcvr_phy_prod;

