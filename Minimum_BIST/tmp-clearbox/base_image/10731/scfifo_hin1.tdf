--scfifo ADD_RAM_OUTPUT_REGISTER="ON" ALMOST_EMPTY_VALUE=1 ALMOST_FULL_VALUE=32 CBX_SINGLE_OUTPUT_FILE="OFF" DEVICE_FAMILY="Stratix 10" ENABLE_ECC="TRUE" LPM_NUMWORDS=32 LPM_SHOWAHEAD="ON" LPM_WIDTH=9 LPM_WIDTHU=5 OPTIMIZE_FOR_SPEED=5 OVERFLOW_CHECKING="OFF" RAM_BLOCK_TYPE="M20K" UNDERFLOW_CHECKING="OFF" USE_EAB="ON" almost_empty almost_full clock data eccstatus empty q rdreq sclr wrreq ACF_BLOCK_RAM_AND_MLAB_EQUIVALENT_PAUSED_READ_CAPABILITIES="CARE" CARRY_CHAIN="MANUAL" CYCLONEII_M4K_COMPATIBILITY="ON" INTENDED_DEVICE_FAMILY="Stratix 10" LOW_POWER_MODE="AUTO" lpm_hint="RAM_BLOCK_TYPE=M20K"
--VERSION_BEGIN 20.3 cbx_altdpram 2020:09:24:17:04:02:SC cbx_altera_counter 2020:09:24:17:04:02:SC cbx_altera_syncram 2020:09:24:17:04:02:SC cbx_altera_syncram_nd_impl 2020:09:24:17:04:02:SC cbx_altsyncram 2020:09:24:17:04:02:SC cbx_fifo_common 2020:09:24:17:04:02:SC cbx_lpm_add_sub 2020:09:24:17:04:02:SC cbx_lpm_compare 2020:09:24:17:04:02:SC cbx_lpm_counter 2020:09:24:17:04:02:SC cbx_lpm_decode 2020:09:24:17:04:02:SC cbx_lpm_mux 2020:09:24:17:04:02:SC cbx_mgl 2020:09:24:17:44:28:SC cbx_nadder 2020:09:24:17:04:02:SC cbx_scfifo 2020:09:24:17:04:02:SC cbx_stratix 2020:09:24:17:04:02:SC cbx_stratixii 2020:09:24:17:04:02:SC cbx_stratixiii 2020:09:24:17:04:02:SC cbx_stratixv 2020:09:24:17:04:02:SC cbx_util_mgl 2020:09:24:17:04:02:SC  VERSION_END


-- Copyright (C) 2020  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details, at
--  https://fpgasoftware.intel.com/eula.


FUNCTION a_dpfifo_htf1 (clock, data[8..0], rreq, sclr, wreq)
RETURNS ( eccstatus[1..0], empty, full, q[8..0], usedw[4..0]);

--synthesis_resources = altera_counter 3 M20K 1 reg 14 
SUBDESIGN scfifo_hin1
( 
	almost_empty	:	output;
	almost_full	:	output;
	clock	:	input;
	data[8..0]	:	input;
	eccstatus[1..0]	:	output;
	empty	:	output;
	q[8..0]	:	output;
	rdreq	:	input;
	sclr	:	input;
	wrreq	:	input;
) 
VARIABLE 
	dpfifo : a_dpfifo_htf1;
	dffe_nae : dffe;
	comparison_ae0	: WIRE;
	comparison_ae1	: WIRE;
	comparison_ae2	: WIRE;
	comparison_ae3	: WIRE;
	comparison_ae4	: WIRE;
	comparison_pre_ae0	: WIRE;
	comparison_pre_ae1	: WIRE;
	comparison_pre_ae2	: WIRE;
	comparison_pre_ae3	: WIRE;
	comparison_pre_ae4	: WIRE;
	wire_ae[4..0]	: WIRE;
	wire_pre_ae[4..0]	: WIRE;

BEGIN 
	dpfifo.clock = clock;
	dpfifo.data[] = data[];
	dpfifo.rreq = rdreq;
	dpfifo.sclr = sclr;
	dpfifo.wreq = wrreq;
	dffe_nae.clk = clock;
	dffe_nae.d = ((dffe_nae.q & (dffe_nae.q $ (sclr # ((comparison_ae4 & (! wrreq)) & rdreq)))) # ((! dffe_nae.q) & (((! sclr) & comparison_pre_ae4) & wrreq)));
	almost_empty = (! dffe_nae.q);
	almost_full = dpfifo.full;
	comparison_ae0 = (dpfifo.usedw[0..0] $ wire_ae[0..0]);
	comparison_ae1 = ((dpfifo.usedw[1..1] $ wire_ae[1..1]) & comparison_ae0);
	comparison_ae2 = ((dpfifo.usedw[2..2] $ wire_ae[2..2]) & comparison_ae1);
	comparison_ae3 = ((dpfifo.usedw[3..3] $ wire_ae[3..3]) & comparison_ae2);
	comparison_ae4 = ((dpfifo.usedw[4..4] $ wire_ae[4..4]) & comparison_ae3);
	comparison_pre_ae0 = (dpfifo.usedw[0..0] $ wire_pre_ae[0..0]);
	comparison_pre_ae1 = ((dpfifo.usedw[1..1] $ wire_pre_ae[1..1]) & comparison_pre_ae0);
	comparison_pre_ae2 = ((dpfifo.usedw[2..2] $ wire_pre_ae[2..2]) & comparison_pre_ae1);
	comparison_pre_ae3 = ((dpfifo.usedw[3..3] $ wire_pre_ae[3..3]) & comparison_pre_ae2);
	comparison_pre_ae4 = ((dpfifo.usedw[4..4] $ wire_pre_ae[4..4]) & comparison_pre_ae3);
	eccstatus[] = dpfifo.eccstatus[];
	empty = dpfifo.empty;
	q[] = dpfifo.q[];
	wire_ae[] = ( B"1", B"1", B"1", B"1", B"0");
	wire_pre_ae[] = ( B"1", B"1", B"1", B"1", B"1");
END;
--VALID FILE
