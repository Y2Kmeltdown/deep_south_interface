-- iopll.vhd

-- Generated using ACDS version 19.1 240

library IEEE;
library altera_iopll_191;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity iopll is
	port (
		rst        : in  std_logic                    := '0'; --      reset.reset
		locked     : out std_logic;                           --     locked.export
		permit_cal : in  std_logic                    := '0'; -- permit_cal.export
		phout      : out std_logic_vector(7 downto 0);        --      phout.phout
		extclk_out : out std_logic_vector(1 downto 0);        -- extclk_out.extclk_out
		lvds_clk   : out std_logic_vector(1 downto 0);        --   lvds_clk.lvds_clk
		loaden     : out std_logic_vector(1 downto 0);        --     loaden.loaden
		outclk_4   : out std_logic;                           --    outclk4.clk
		adjpllin   : in  std_logic                    := '0'  --   adjpllin.clk
	);
end entity iopll;

architecture rtl of iopll is
	component esram_altera_iopll_191_sjjhuna_cmp is
		port (
			rst        : in  std_logic                    := 'X'; -- reset
			locked     : out std_logic;                           -- export
			permit_cal : in  std_logic                    := 'X'; -- export
			phout      : out std_logic_vector(7 downto 0);        -- phout
			extclk_out : out std_logic_vector(1 downto 0);        -- extclk_out
			lvds_clk   : out std_logic_vector(1 downto 0);        -- lvds_clk
			loaden     : out std_logic_vector(1 downto 0);        -- loaden
			outclk_4   : out std_logic;                           -- clk
			adjpllin   : in  std_logic                    := 'X'  -- clk
		);
	end component esram_altera_iopll_191_sjjhuna_cmp;

	for iopll : esram_altera_iopll_191_sjjhuna_cmp
		use entity altera_iopll_191.esram_altera_iopll_191_sjjhuna;
begin

	iopll : component esram_altera_iopll_191_sjjhuna_cmp
		port map (
			rst        => rst,        --      reset.reset
			locked     => locked,     --     locked.export
			permit_cal => permit_cal, -- permit_cal.export
			phout      => phout,      --      phout.phout
			extclk_out => extclk_out, -- extclk_out.extclk_out
			lvds_clk   => lvds_clk,   --   lvds_clk.lvds_clk
			loaden     => loaden,     --     loaden.loaden
			outclk_4   => outclk_4,   --    outclk4.clk
			adjpllin   => adjpllin    --   adjpllin.clk
		);

end architecture rtl; -- of iopll
