// hbm_top_example_design.v

// Generated using ACDS version 19.4 64

`timescale 1 ps / 1 ps
module hbm_top_example_design (
		input  wire         pll_ref_clk,                 //         pll_ref_clk.clk
		input  wire         ext_core_clk,                //        ext_core_clk.clk
		input  wire         ext_core_clk_locked,         // ext_core_clk_locked.export
		input  wire         wmcrst_n_in,                 //         wmcrst_n_in.reset_n
		input  wire         hbm_only_reset_in,           //   hbm_only_reset_in.reset
		output wire         local_cal_success,           //              status.local_cal_success
		output wire         local_cal_fail,              //                    .local_cal_fail
		output wire [2:0]   cal_lat,                     //             cal_lat.cal_lat
		output wire         ck_t_0,                      //               mem_0.ck_t
		output wire         ck_c_0,                      //                    .ck_c
		output wire         cke_0,                       //                    .cke
		output wire [7:0]   c_0,                         //                    .c
		output wire [5:0]   r_0,                         //                    .r
		inout  wire [127:0] dq_0,                        //                    .dq
		inout  wire [15:0]  dm_0,                        //                    .dm
		inout  wire [15:0]  dbi_0,                       //                    .dbi
		inout  wire [3:0]   par_0,                       //                    .par
		inout  wire [3:0]   derr_0,                      //                    .derr
		input  wire [3:0]   rdqs_t_0,                    //                    .rdqs_t
		input  wire [3:0]   rdqs_c_0,                    //                    .rdqs_c
		output wire [3:0]   wdqs_t_0,                    //                    .wdqs_t
		output wire [3:0]   wdqs_c_0,                    //                    .wdqs_c
		inout  wire [7:0]   rd_0,                        //                    .rd
		output wire         rr_0,                        //                    .rr
		output wire         rc_0,                        //                    .rc
		input  wire         aerr_0,                      //                    .aerr
		input  wire         cattrip,                     //          m2u_bridge.cattrip
		input  wire [2:0]   temp,                        //                    .temp
		input  wire [7:0]   wso,                         //                    .wso
		output wire         reset_n,                     //                    .reset_n
		output wire         wrst_n,                      //                    .wrst_n
		output wire         wrck,                        //                    .wrck
		output wire         shiftwr,                     //                    .shiftwr
		output wire         capturewr,                   //                    .capturewr
		output wire         updatewr,                    //                    .updatewr
		output wire         selectwir,                   //                    .selectwir
		output wire         wsi,                         //                    .wsi
		output wire         wmc_clk_0_clk,               //           wmc_clk_0.clk
		output wire         phy_clk_0_clk,               //           phy_clk_0.clk
		output wire         wmcrst_n_0_reset_n,          //          wmcrst_n_0.reset_n
		input  wire [8:0]   axi_0_1_awid,                //             axi_0_1.awid
		input  wire [28:0]  axi_0_1_awaddr,              //                    .awaddr
		input  wire [7:0]   axi_0_1_awlen,               //                    .awlen
		input  wire [2:0]   axi_0_1_awsize,              //                    .awsize
		input  wire [1:0]   axi_0_1_awburst,             //                    .awburst
		input  wire [2:0]   axi_0_1_awprot,              //                    .awprot
		input  wire [3:0]   axi_0_1_awqos,               //                    .awqos
		input  wire [0:0]   axi_0_1_awuser,              //                    .awuser
		input  wire         axi_0_1_awvalid,             //                    .awvalid
		output wire         axi_0_1_awready,             //                    .awready
		input  wire [255:0] axi_0_1_wdata,               //                    .wdata
		input  wire [31:0]  axi_0_1_wstrb,               //                    .wstrb
		input  wire         axi_0_1_wlast,               //                    .wlast
		input  wire         axi_0_1_wvalid,              //                    .wvalid
		output wire         axi_0_1_wready,              //                    .wready
		output wire [8:0]   axi_0_1_bid,                 //                    .bid
		output wire [1:0]   axi_0_1_bresp,               //                    .bresp
		output wire         axi_0_1_bvalid,              //                    .bvalid
		input  wire         axi_0_1_bready,              //                    .bready
		input  wire [8:0]   axi_0_1_arid,                //                    .arid
		input  wire [28:0]  axi_0_1_araddr,              //                    .araddr
		input  wire [7:0]   axi_0_1_arlen,               //                    .arlen
		input  wire [2:0]   axi_0_1_arsize,              //                    .arsize
		input  wire [1:0]   axi_0_1_arburst,             //                    .arburst
		input  wire [2:0]   axi_0_1_arprot,              //                    .arprot
		input  wire [3:0]   axi_0_1_arqos,               //                    .arqos
		input  wire [0:0]   axi_0_1_aruser,              //                    .aruser
		input  wire         axi_0_1_arvalid,             //                    .arvalid
		output wire         axi_0_1_arready,             //                    .arready
		output wire [8:0]   axi_0_1_rid,                 //                    .rid
		output wire [255:0] axi_0_1_rdata,               //                    .rdata
		output wire [1:0]   axi_0_1_rresp,               //                    .rresp
		output wire         axi_0_1_rlast,               //                    .rlast
		output wire         axi_0_1_rvalid,              //                    .rvalid
		input  wire         axi_0_1_rready,              //                    .rready
		input  wire [8:0]   axi_0_0_awid,                //             axi_0_0.awid
		input  wire [28:0]  axi_0_0_awaddr,              //                    .awaddr
		input  wire [7:0]   axi_0_0_awlen,               //                    .awlen
		input  wire [2:0]   axi_0_0_awsize,              //                    .awsize
		input  wire [1:0]   axi_0_0_awburst,             //                    .awburst
		input  wire [2:0]   axi_0_0_awprot,              //                    .awprot
		input  wire [3:0]   axi_0_0_awqos,               //                    .awqos
		input  wire [0:0]   axi_0_0_awuser,              //                    .awuser
		input  wire         axi_0_0_awvalid,             //                    .awvalid
		output wire         axi_0_0_awready,             //                    .awready
		input  wire [255:0] axi_0_0_wdata,               //                    .wdata
		input  wire [31:0]  axi_0_0_wstrb,               //                    .wstrb
		input  wire         axi_0_0_wlast,               //                    .wlast
		input  wire         axi_0_0_wvalid,              //                    .wvalid
		output wire         axi_0_0_wready,              //                    .wready
		output wire [8:0]   axi_0_0_bid,                 //                    .bid
		output wire [1:0]   axi_0_0_bresp,               //                    .bresp
		output wire         axi_0_0_bvalid,              //                    .bvalid
		input  wire         axi_0_0_bready,              //                    .bready
		input  wire [8:0]   axi_0_0_arid,                //                    .arid
		input  wire [28:0]  axi_0_0_araddr,              //                    .araddr
		input  wire [7:0]   axi_0_0_arlen,               //                    .arlen
		input  wire [2:0]   axi_0_0_arsize,              //                    .arsize
		input  wire [1:0]   axi_0_0_arburst,             //                    .arburst
		input  wire [2:0]   axi_0_0_arprot,              //                    .arprot
		input  wire [3:0]   axi_0_0_arqos,               //                    .arqos
		input  wire [0:0]   axi_0_0_aruser,              //                    .aruser
		input  wire         axi_0_0_arvalid,             //                    .arvalid
		output wire         axi_0_0_arready,             //                    .arready
		output wire [8:0]   axi_0_0_rid,                 //                    .rid
		output wire [255:0] axi_0_0_rdata,               //                    .rdata
		output wire [1:0]   axi_0_0_rresp,               //                    .rresp
		output wire         axi_0_0_rlast,               //                    .rlast
		output wire         axi_0_0_rvalid,              //                    .rvalid
		input  wire         axi_0_0_rready,              //                    .rready
		output wire         axi_extra_0_1_ruser_err_dbe, //       axi_extra_0_1.ruser_err_dbe
		output wire [31:0]  axi_extra_0_1_ruser_data,    //                    .ruser_data
		input  wire [31:0]  axi_extra_0_1_wuser_data,    //                    .wuser_data
		input  wire [3:0]   axi_extra_0_1_wuser_strb,    //                    .wuser_strb
		output wire         axi_extra_0_0_ruser_err_dbe, //       axi_extra_0_0.ruser_err_dbe
		output wire [31:0]  axi_extra_0_0_ruser_data,    //                    .ruser_data
		input  wire [31:0]  axi_extra_0_0_wuser_data,    //                    .wuser_data
		input  wire [3:0]   axi_extra_0_0_wuser_strb,    //                    .wuser_strb
		input  wire [15:0]  apb_0_ur_paddr,              //               apb_0.ur_paddr
		input  wire         apb_0_ur_psel,               //                    .ur_psel
		input  wire         apb_0_ur_penable,            //                    .ur_penable
		input  wire         apb_0_ur_pwrite,             //                    .ur_pwrite
		input  wire [15:0]  apb_0_ur_pwdata,             //                    .ur_pwdata
		input  wire [1:0]   apb_0_ur_pstrb,              //                    .ur_pstrb
		output wire         apb_0_ur_prready,            //                    .ur_prready
		output wire [15:0]  apb_0_ur_prdata              //                    .ur_prdata
	);

	hbm_top_example_design_altera_hbm_1930_xspqlbi hbm_0_example_design (
		.pll_ref_clk                 (pll_ref_clk),                 //   input,    width = 1,         pll_ref_clk.clk
		.ext_core_clk                (ext_core_clk),                //   input,    width = 1,        ext_core_clk.clk
		.ext_core_clk_locked         (ext_core_clk_locked),         //   input,    width = 1, ext_core_clk_locked.export
		.wmcrst_n_in                 (wmcrst_n_in),                 //   input,    width = 1,         wmcrst_n_in.reset_n
		.hbm_only_reset_in           (hbm_only_reset_in),           //   input,    width = 1,   hbm_only_reset_in.reset
		.local_cal_success           (local_cal_success),           //  output,    width = 1,              status.local_cal_success
		.local_cal_fail              (local_cal_fail),              //  output,    width = 1,                    .local_cal_fail
		.cal_lat                     (cal_lat),                     //  output,    width = 3,             cal_lat.cal_lat
		.ck_t_0                      (ck_t_0),                      //  output,    width = 1,               mem_0.ck_t
		.ck_c_0                      (ck_c_0),                      //  output,    width = 1,                    .ck_c
		.cke_0                       (cke_0),                       //  output,    width = 1,                    .cke
		.c_0                         (c_0),                         //  output,    width = 8,                    .c
		.r_0                         (r_0),                         //  output,    width = 6,                    .r
		.dq_0                        (dq_0),                        //   inout,  width = 128,                    .dq
		.dm_0                        (dm_0),                        //   inout,   width = 16,                    .dm
		.dbi_0                       (dbi_0),                       //   inout,   width = 16,                    .dbi
		.par_0                       (par_0),                       //   inout,    width = 4,                    .par
		.derr_0                      (derr_0),                      //   inout,    width = 4,                    .derr
		.rdqs_t_0                    (rdqs_t_0),                    //   input,    width = 4,                    .rdqs_t
		.rdqs_c_0                    (rdqs_c_0),                    //   input,    width = 4,                    .rdqs_c
		.wdqs_t_0                    (wdqs_t_0),                    //  output,    width = 4,                    .wdqs_t
		.wdqs_c_0                    (wdqs_c_0),                    //  output,    width = 4,                    .wdqs_c
		.rd_0                        (rd_0),                        //   inout,    width = 8,                    .rd
		.rr_0                        (rr_0),                        //  output,    width = 1,                    .rr
		.rc_0                        (rc_0),                        //  output,    width = 1,                    .rc
		.aerr_0                      (aerr_0),                      //   input,    width = 1,                    .aerr
		.cattrip                     (cattrip),                     //   input,    width = 1,          m2u_bridge.cattrip
		.temp                        (temp),                        //   input,    width = 3,                    .temp
		.wso                         (wso),                         //   input,    width = 8,                    .wso
		.reset_n                     (reset_n),                     //  output,    width = 1,                    .reset_n
		.wrst_n                      (wrst_n),                      //  output,    width = 1,                    .wrst_n
		.wrck                        (wrck),                        //  output,    width = 1,                    .wrck
		.shiftwr                     (shiftwr),                     //  output,    width = 1,                    .shiftwr
		.capturewr                   (capturewr),                   //  output,    width = 1,                    .capturewr
		.updatewr                    (updatewr),                    //  output,    width = 1,                    .updatewr
		.selectwir                   (selectwir),                   //  output,    width = 1,                    .selectwir
		.wsi                         (wsi),                         //  output,    width = 1,                    .wsi
		.wmc_clk_0_clk               (wmc_clk_0_clk),               //  output,    width = 1,           wmc_clk_0.clk
		.phy_clk_0_clk               (phy_clk_0_clk),               //  output,    width = 1,           phy_clk_0.clk
		.wmcrst_n_0_reset_n          (wmcrst_n_0_reset_n),          //  output,    width = 1,          wmcrst_n_0.reset_n
		.axi_0_1_awid                (axi_0_1_awid),                //   input,    width = 9,             axi_0_1.awid
		.axi_0_1_awaddr              (axi_0_1_awaddr),              //   input,   width = 29,                    .awaddr
		.axi_0_1_awlen               (axi_0_1_awlen),               //   input,    width = 8,                    .awlen
		.axi_0_1_awsize              (axi_0_1_awsize),              //   input,    width = 3,                    .awsize
		.axi_0_1_awburst             (axi_0_1_awburst),             //   input,    width = 2,                    .awburst
		.axi_0_1_awprot              (axi_0_1_awprot),              //   input,    width = 3,                    .awprot
		.axi_0_1_awqos               (axi_0_1_awqos),               //   input,    width = 4,                    .awqos
		.axi_0_1_awuser              (axi_0_1_awuser),              //   input,    width = 1,                    .awuser
		.axi_0_1_awvalid             (axi_0_1_awvalid),             //   input,    width = 1,                    .awvalid
		.axi_0_1_awready             (axi_0_1_awready),             //  output,    width = 1,                    .awready
		.axi_0_1_wdata               (axi_0_1_wdata),               //   input,  width = 256,                    .wdata
		.axi_0_1_wstrb               (axi_0_1_wstrb),               //   input,   width = 32,                    .wstrb
		.axi_0_1_wlast               (axi_0_1_wlast),               //   input,    width = 1,                    .wlast
		.axi_0_1_wvalid              (axi_0_1_wvalid),              //   input,    width = 1,                    .wvalid
		.axi_0_1_wready              (axi_0_1_wready),              //  output,    width = 1,                    .wready
		.axi_0_1_bid                 (axi_0_1_bid),                 //  output,    width = 9,                    .bid
		.axi_0_1_bresp               (axi_0_1_bresp),               //  output,    width = 2,                    .bresp
		.axi_0_1_bvalid              (axi_0_1_bvalid),              //  output,    width = 1,                    .bvalid
		.axi_0_1_bready              (axi_0_1_bready),              //   input,    width = 1,                    .bready
		.axi_0_1_arid                (axi_0_1_arid),                //   input,    width = 9,                    .arid
		.axi_0_1_araddr              (axi_0_1_araddr),              //   input,   width = 29,                    .araddr
		.axi_0_1_arlen               (axi_0_1_arlen),               //   input,    width = 8,                    .arlen
		.axi_0_1_arsize              (axi_0_1_arsize),              //   input,    width = 3,                    .arsize
		.axi_0_1_arburst             (axi_0_1_arburst),             //   input,    width = 2,                    .arburst
		.axi_0_1_arprot              (axi_0_1_arprot),              //   input,    width = 3,                    .arprot
		.axi_0_1_arqos               (axi_0_1_arqos),               //   input,    width = 4,                    .arqos
		.axi_0_1_aruser              (axi_0_1_aruser),              //   input,    width = 1,                    .aruser
		.axi_0_1_arvalid             (axi_0_1_arvalid),             //   input,    width = 1,                    .arvalid
		.axi_0_1_arready             (axi_0_1_arready),             //  output,    width = 1,                    .arready
		.axi_0_1_rid                 (axi_0_1_rid),                 //  output,    width = 9,                    .rid
		.axi_0_1_rdata               (axi_0_1_rdata),               //  output,  width = 256,                    .rdata
		.axi_0_1_rresp               (axi_0_1_rresp),               //  output,    width = 2,                    .rresp
		.axi_0_1_rlast               (axi_0_1_rlast),               //  output,    width = 1,                    .rlast
		.axi_0_1_rvalid              (axi_0_1_rvalid),              //  output,    width = 1,                    .rvalid
		.axi_0_1_rready              (axi_0_1_rready),              //   input,    width = 1,                    .rready
		.axi_0_0_awid                (axi_0_0_awid),                //   input,    width = 9,             axi_0_0.awid
		.axi_0_0_awaddr              (axi_0_0_awaddr),              //   input,   width = 29,                    .awaddr
		.axi_0_0_awlen               (axi_0_0_awlen),               //   input,    width = 8,                    .awlen
		.axi_0_0_awsize              (axi_0_0_awsize),              //   input,    width = 3,                    .awsize
		.axi_0_0_awburst             (axi_0_0_awburst),             //   input,    width = 2,                    .awburst
		.axi_0_0_awprot              (axi_0_0_awprot),              //   input,    width = 3,                    .awprot
		.axi_0_0_awqos               (axi_0_0_awqos),               //   input,    width = 4,                    .awqos
		.axi_0_0_awuser              (axi_0_0_awuser),              //   input,    width = 1,                    .awuser
		.axi_0_0_awvalid             (axi_0_0_awvalid),             //   input,    width = 1,                    .awvalid
		.axi_0_0_awready             (axi_0_0_awready),             //  output,    width = 1,                    .awready
		.axi_0_0_wdata               (axi_0_0_wdata),               //   input,  width = 256,                    .wdata
		.axi_0_0_wstrb               (axi_0_0_wstrb),               //   input,   width = 32,                    .wstrb
		.axi_0_0_wlast               (axi_0_0_wlast),               //   input,    width = 1,                    .wlast
		.axi_0_0_wvalid              (axi_0_0_wvalid),              //   input,    width = 1,                    .wvalid
		.axi_0_0_wready              (axi_0_0_wready),              //  output,    width = 1,                    .wready
		.axi_0_0_bid                 (axi_0_0_bid),                 //  output,    width = 9,                    .bid
		.axi_0_0_bresp               (axi_0_0_bresp),               //  output,    width = 2,                    .bresp
		.axi_0_0_bvalid              (axi_0_0_bvalid),              //  output,    width = 1,                    .bvalid
		.axi_0_0_bready              (axi_0_0_bready),              //   input,    width = 1,                    .bready
		.axi_0_0_arid                (axi_0_0_arid),                //   input,    width = 9,                    .arid
		.axi_0_0_araddr              (axi_0_0_araddr),              //   input,   width = 29,                    .araddr
		.axi_0_0_arlen               (axi_0_0_arlen),               //   input,    width = 8,                    .arlen
		.axi_0_0_arsize              (axi_0_0_arsize),              //   input,    width = 3,                    .arsize
		.axi_0_0_arburst             (axi_0_0_arburst),             //   input,    width = 2,                    .arburst
		.axi_0_0_arprot              (axi_0_0_arprot),              //   input,    width = 3,                    .arprot
		.axi_0_0_arqos               (axi_0_0_arqos),               //   input,    width = 4,                    .arqos
		.axi_0_0_aruser              (axi_0_0_aruser),              //   input,    width = 1,                    .aruser
		.axi_0_0_arvalid             (axi_0_0_arvalid),             //   input,    width = 1,                    .arvalid
		.axi_0_0_arready             (axi_0_0_arready),             //  output,    width = 1,                    .arready
		.axi_0_0_rid                 (axi_0_0_rid),                 //  output,    width = 9,                    .rid
		.axi_0_0_rdata               (axi_0_0_rdata),               //  output,  width = 256,                    .rdata
		.axi_0_0_rresp               (axi_0_0_rresp),               //  output,    width = 2,                    .rresp
		.axi_0_0_rlast               (axi_0_0_rlast),               //  output,    width = 1,                    .rlast
		.axi_0_0_rvalid              (axi_0_0_rvalid),              //  output,    width = 1,                    .rvalid
		.axi_0_0_rready              (axi_0_0_rready),              //   input,    width = 1,                    .rready
		.axi_extra_0_1_ruser_err_dbe (axi_extra_0_1_ruser_err_dbe), //  output,    width = 1,       axi_extra_0_1.ruser_err_dbe
		.axi_extra_0_1_ruser_data    (axi_extra_0_1_ruser_data),    //  output,   width = 32,                    .ruser_data
		.axi_extra_0_1_wuser_data    (axi_extra_0_1_wuser_data),    //   input,   width = 32,                    .wuser_data
		.axi_extra_0_1_wuser_strb    (axi_extra_0_1_wuser_strb),    //   input,    width = 4,                    .wuser_strb
		.axi_extra_0_0_ruser_err_dbe (axi_extra_0_0_ruser_err_dbe), //  output,    width = 1,       axi_extra_0_0.ruser_err_dbe
		.axi_extra_0_0_ruser_data    (axi_extra_0_0_ruser_data),    //  output,   width = 32,                    .ruser_data
		.axi_extra_0_0_wuser_data    (axi_extra_0_0_wuser_data),    //   input,   width = 32,                    .wuser_data
		.axi_extra_0_0_wuser_strb    (axi_extra_0_0_wuser_strb),    //   input,    width = 4,                    .wuser_strb
		.apb_0_ur_paddr              (apb_0_ur_paddr),              //   input,   width = 16,               apb_0.ur_paddr
		.apb_0_ur_psel               (apb_0_ur_psel),               //   input,    width = 1,                    .ur_psel
		.apb_0_ur_penable            (apb_0_ur_penable),            //   input,    width = 1,                    .ur_penable
		.apb_0_ur_pwrite             (apb_0_ur_pwrite),             //   input,    width = 1,                    .ur_pwrite
		.apb_0_ur_pwdata             (apb_0_ur_pwdata),             //   input,   width = 16,                    .ur_pwdata
		.apb_0_ur_pstrb              (apb_0_ur_pstrb),              //   input,    width = 2,                    .ur_pstrb
		.apb_0_ur_prready            (apb_0_ur_prready),            //  output,    width = 1,                    .ur_prready
		.apb_0_ur_prdata             (apb_0_ur_prdata)              //  output,   width = 16,                    .ur_prdata
	);

endmodule
