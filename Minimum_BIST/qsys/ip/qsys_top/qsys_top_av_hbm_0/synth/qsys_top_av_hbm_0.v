// qsys_top_av_hbm_0.v

// Generated using ACDS version 20.3 158

`timescale 1 ps / 1 ps
module qsys_top_av_hbm_0 (
		input  wire        clk,                              //                 clk.clk
		input  wire        rst,                              //                 rst.reset
		input  wire [0:0]  av_address,                       //              reg_if.address
		input  wire        av_read,                          //                    .read
		output wire        av_waitrequest,                   //                    .waitrequest
		input  wire        av_write,                         //                    .write
		output wire [31:0] av_readdata,                      //                    .readdata
		input  wire [31:0] av_writedata,                     //                    .writedata
		input  wire        bottom_core_clk_iopll_refclk_clk, // hbm_bottom_ref_clks.iopll_ref_clk
		input  wire        bottom_pll_ref_clk_clk,           //                    .pll_ref_clk
		input  wire        top_core_clk_iopll_ref_clk_clk,   //    hbm_top_ref_clks.iopll_ref_clk
		input  wire        top_pll_ref_clk_clk,              //                    .pll_ref_clk
		input  wire        bottom_m2u_bridge_cattrip,        //          bottom_m2u.cattrip
		input  wire [2:0]  bottom_m2u_bridge_temp,           //                    .temp
		input  wire [7:0]  bottom_m2u_bridge_wso,            //                    .wso
		output wire        bottom_m2u_bridge_reset_n,        //                    .reset
		output wire        bottom_m2u_bridge_wrst_n,         //                    .wrst
		output wire        bottom_m2u_bridge_wrck,           //                    .wrck
		output wire        bottom_m2u_bridge_shiftwr,        //                    .shiftwr
		output wire        bottom_m2u_bridge_capturewr,      //                    .capturewr
		output wire        bottom_m2u_bridge_updatewr,       //                    .updatewr
		output wire        bottom_m2u_bridge_selectwir,      //                    .selectwir
		output wire        bottom_m2u_bridge_wsi,            //                    .wsi
		input  wire        top_m2u_bridge_cattrip,           //             top_m2u.cattrip
		input  wire [2:0]  top_m2u_bridge_temp,              //                    .temp
		input  wire [7:0]  top_m2u_bridge_wso,               //                    .wso
		output wire        top_m2u_bridge_reset_n,           //                    .reset
		output wire        top_m2u_bridge_wrst_n,            //                    .wrst
		output wire        top_m2u_bridge_wrck,              //                    .wrck
		output wire        top_m2u_bridge_shiftwr,           //                    .shiftwr
		output wire        top_m2u_bridge_capturewr,         //                    .capturewr
		output wire        top_m2u_bridge_updatewr,          //                    .updatewr
		output wire        top_m2u_bridge_selectwir,         //                    .selectwir
		output wire        top_m2u_bridge_wsi                //                    .wsi
	);

	av_hbm av_hbm_0 (
		.clk                              (clk),                              //   input,   width = 1,                 clk.clk
		.rst                              (rst),                              //   input,   width = 1,                 rst.reset
		.av_address                       (av_address),                       //   input,   width = 1,              reg_if.address
		.av_read                          (av_read),                          //   input,   width = 1,                    .read
		.av_waitrequest                   (av_waitrequest),                   //  output,   width = 1,                    .waitrequest
		.av_write                         (av_write),                         //   input,   width = 1,                    .write
		.av_readdata                      (av_readdata),                      //  output,  width = 32,                    .readdata
		.av_writedata                     (av_writedata),                     //   input,  width = 32,                    .writedata
		.bottom_core_clk_iopll_refclk_clk (bottom_core_clk_iopll_refclk_clk), //   input,   width = 1, hbm_bottom_ref_clks.iopll_ref_clk
		.bottom_pll_ref_clk_clk           (bottom_pll_ref_clk_clk),           //   input,   width = 1,                    .pll_ref_clk
		.top_core_clk_iopll_ref_clk_clk   (top_core_clk_iopll_ref_clk_clk),   //   input,   width = 1,    hbm_top_ref_clks.iopll_ref_clk
		.top_pll_ref_clk_clk              (top_pll_ref_clk_clk),              //   input,   width = 1,                    .pll_ref_clk
		.bottom_m2u_bridge_cattrip        (bottom_m2u_bridge_cattrip),        //   input,   width = 1,          bottom_m2u.cattrip
		.bottom_m2u_bridge_temp           (bottom_m2u_bridge_temp),           //   input,   width = 3,                    .temp
		.bottom_m2u_bridge_wso            (bottom_m2u_bridge_wso),            //   input,   width = 8,                    .wso
		.bottom_m2u_bridge_reset_n        (bottom_m2u_bridge_reset_n),        //  output,   width = 1,                    .reset
		.bottom_m2u_bridge_wrst_n         (bottom_m2u_bridge_wrst_n),         //  output,   width = 1,                    .wrst
		.bottom_m2u_bridge_wrck           (bottom_m2u_bridge_wrck),           //  output,   width = 1,                    .wrck
		.bottom_m2u_bridge_shiftwr        (bottom_m2u_bridge_shiftwr),        //  output,   width = 1,                    .shiftwr
		.bottom_m2u_bridge_capturewr      (bottom_m2u_bridge_capturewr),      //  output,   width = 1,                    .capturewr
		.bottom_m2u_bridge_updatewr       (bottom_m2u_bridge_updatewr),       //  output,   width = 1,                    .updatewr
		.bottom_m2u_bridge_selectwir      (bottom_m2u_bridge_selectwir),      //  output,   width = 1,                    .selectwir
		.bottom_m2u_bridge_wsi            (bottom_m2u_bridge_wsi),            //  output,   width = 1,                    .wsi
		.top_m2u_bridge_cattrip           (top_m2u_bridge_cattrip),           //   input,   width = 1,             top_m2u.cattrip
		.top_m2u_bridge_temp              (top_m2u_bridge_temp),              //   input,   width = 3,                    .temp
		.top_m2u_bridge_wso               (top_m2u_bridge_wso),               //   input,   width = 8,                    .wso
		.top_m2u_bridge_reset_n           (top_m2u_bridge_reset_n),           //  output,   width = 1,                    .reset
		.top_m2u_bridge_wrst_n            (top_m2u_bridge_wrst_n),            //  output,   width = 1,                    .wrst
		.top_m2u_bridge_wrck              (top_m2u_bridge_wrck),              //  output,   width = 1,                    .wrck
		.top_m2u_bridge_shiftwr           (top_m2u_bridge_shiftwr),           //  output,   width = 1,                    .shiftwr
		.top_m2u_bridge_capturewr         (top_m2u_bridge_capturewr),         //  output,   width = 1,                    .capturewr
		.top_m2u_bridge_updatewr          (top_m2u_bridge_updatewr),          //  output,   width = 1,                    .updatewr
		.top_m2u_bridge_selectwir         (top_m2u_bridge_selectwir),         //  output,   width = 1,                    .selectwir
		.top_m2u_bridge_wsi               (top_m2u_bridge_wsi)                //  output,   width = 1,                    .wsi
	);

endmodule
