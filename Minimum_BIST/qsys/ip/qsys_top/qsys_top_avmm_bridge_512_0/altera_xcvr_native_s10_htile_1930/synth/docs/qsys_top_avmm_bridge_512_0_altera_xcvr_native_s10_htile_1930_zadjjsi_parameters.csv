NAME,DISPLAY_NAME,ALLOWED_RANGES,DEFAULT_VALUE,DESCRIPTION
"rcfg_enable","Enable dynamic reconfiguration","{0 1}","0","Enables the dynamic reconfiguration interface."
"rcfg_jtag_enable","Enable Native PHY Debug Master Endpoint","{0 1}","0","When enabled, the PLL IP includes an embedded Native PHY Debug Master Endpoint that connects internally Avalon-MM slave interface. The Native PHY Debug Master Endpoint can access the reconfiguration space of the transceiver. It can perform certain test and debug functions via JTAG using the System Console. This option requires you to enable the "Share reconfiguration interface" option for configurations using more than 1 channel and may also require that a jtag_debug link be included in the system."
"rcfg_separate_avmm_busy","Separate reconfig_waitrequest from the status of AVMM arbitration with PreSICE","{0 1}","0","When enabled, the reconfig_waitrequest will not indicate the status of AVMM arbitration with PreSICE.  The AVMM arbitration status will be reflected in a soft status register bit.  This feature requires that the "Enable control and status registers" feature under "Optional Reconfiguration Logic" be enabled.  For more information, please refer to the User Guide."
"rcfg_enable_avmm_busy_port","Enable avmm_busy port","{0 1}","0","Enable the port for avmm_busy"
"set_capability_reg_enable","Enable capability registers","{0 1}","0","Enables capability registers, which provide high level information about the transceiver PLL's configuration"
"set_csr_soft_logic_enable","Enable control and status registers","{0 1}","0","Enables soft registers for reading status signals and writing control signals on the phy interface through the embedded debug. Available signals include pll_cal_busy, pll_locked and pll_powerdown.  For more details, please refer to the User Guide."
"rcfg_file_prefix","Configuration file prefix","","altera_xcvr_rcfg_10","Specifies the file prefix to use for generated configuration files when enabled. Each variant of the IP should use a unique prefix for configuration files."
"rcfg_files_as_common_package","Declare SystemVerilog package file as common package file","{0 1}","0","Declares the SystemVerilog reconfig file as common package."
"rcfg_sv_file_enable","Generate SystemVerilog package file","{0 1}","0","When enabled, The IP will generate a SystemVerilog package file named "(Configuration file prefix)_reconfig_parameters.sv" containing parameters defined with the attribute values needed for reconfiguration."
"rcfg_h_file_enable","Generate C header file","{0 1}","0","When enabled, The IP will generate a C header file named "(Configuration file prefix)_reconfig_parameters.h" containing macros defined with the attribute values needed for reconfiguration."
"rcfg_mif_file_enable","Generate MIF (Memory Initialize File)","{0 1}","0","When enabled The IP will generate an Altera MIF (Memory Initialization File) named "(Configuration file prefix)_reconfig_parameters.mif". The MIF file contains the attribute values needed for reconfiguration in a data format."
"rcfg_multi_enable","Enable multiple reconfiguration profiles","{0 1}","0","When enabled, you can use the GUI to store multiple configurations. The IP will generate reconfiguration files for all of the stored profiles. The IP will also check your multiple reconfiguration profiles for consistency to ensure you can reconfigure between them."
"device_family","device_family","","Stratix 10",""
"device","device","","Unknown",""
"base_device","base_device","","Unknown",""
"device_die_types","device_die_types","","Unknown",""
"device_die_revisions","device_die_revisions","","Unknown",""
"design_environment","design_environment","","NATIVE",""
"message_level","Message level for rule violations","error warning","error","Specifies the messaging level to use for parameter rule violations. Selecting "error" causes all rule violations to prevent IP generation. Selecting "warning" displays all rule violations as warnings and allows IP generation in spite of violations."
"reduced_reset_sim_time","Use fast reset for simulation","{0 1}","0","When enabled, the IP disables reset staggering in simulation. The reset behavior in simulation will be different from the reset behavior in hardware."
"channel_type","Transceiver channel type","GX GXT","GX","Specifies the transceiver channel variant."
"protocol_mode","Transceiver configuration rules","{basic_std:Basic/Custom (Standard PCS)} {basic_std_rm:Basic/Custom w/Rate Match (Standard PCS)} {cpri:CPRI (Auto)} {cpri_rx_tx:CPRI (Manual)} gige:GbE {gige_1588:GbE 1588} {pipe_g1:Gen 1 PIPE} {pipe_g2:Gen 2 PIPE} {pipe_g3:Gen 3 PIPE} {basic_enh:Basic (Enhanced PCS)} interlaken_mode:Interlaken teng_baser_mode:10GBASE-R {teng_1588_mode:10GBASE-R 1588} {teng_baser_krfec_mode:10GBASE-R w/KR FEC} {fortyg_basekr_krfec_mode:40GBASE-R w/KR FEC} {basic_krfec_mode:Basic w/KR FEC} {pcs_direct:PCS Direct}","basic_std","Selects the protocol configuration rules for the transceiver. This parameter governs the rules for correct settings of individual parameters within the PMA and PCS. Certain features of the transceiver are available only for specific protocol configuration rules. This parameter is not a "preset". You must still correctly set all other parameters for your specific protocol and application needs."
"pma_mode","PMA configuration rules","basic SATA:SATA/SAS GPON","basic","Selects the configuration rules for PMA. Options are SATA/SAS, GPON and basic. Basic should be selected for all modes other than SATA/SAS and GPON. SATA/SAS mode can be used only if "Transceiver configuration rules" is selected as Standard PCS. GPON mode can be used only if "Transceiver configuration rules" is selected as Standard or Enhanced PCS. This parameter is not a "preset". You must still correctly set other parameters and enable relavant ports for your specific application needs."
"duplex_mode","Transceiver mode","{duplex:TX/RX Duplex} {tx:TX Simplex} {rx:RX Simplex}","duplex","Selects the transceiver operation mode."
"channels","Number of data channels","1:144","1","Specifies the total number of data channels."
"set_data_rate","Data rate","","1250","Specifies the transceiver data rate in units of Mbps (megabits per second)."
"rcfg_iface_enable","Enable datapath and interface reconfiguration","{0 1}","0","Enables the ability to preconfigure and dynamically switch between the Standard PCS, Enhanced PCS, and PCS direct transceiver datapaths."
"enable_simple_interface","Enable simplified data interface","{0 1}","0","When selected the Native PHY presents a simplified data and control interface between the FPGA and transceiver. When not selected the Native PHY presents the full raw data interface to the transceiver. You need to understand the mapping of data and control signals within the interface. This option cannot be enabled if you want to perform dynamic interface reconfiguration as only a fixed subset of the data and control signals are provided."
"enable_transparent_pcs","Enable transparent PCS","{0 1}","0",""
"enable_double_rate_transfer","Enable double rate transfer mode","{0 1}","0","Enables the double rate transfer mode for RX and TX. Double rate transfer mode can be used to run the FPGA fabric at double clock speed and at half parallel data width."
"enable_background_cal_gui","Enable background calibration","{0 1}","0","Enable calibration running at background to improve performance, recommended for GT design."
"set_enable_eios_rx_protect","Enable PIPE EIOS RX Protection","{0 1}","0","Enable PCIe EIOS protection feature to improve fault-tolerance and compatibilty, may be used in PIPE Gen2/3 mode."
"bonded_mode","TX channel bonding mode","{not_bonded:Not bonded} {pma_only:PMA only bonding} {pma_pcs:PMA and PCS bonding}","not_bonded","Specifies the transceiver TX channel bonding mode to control channel-to-channel skew for the TX datapath. Refer to the user guide for bonding details. Options are no TX channel bonding (non-bonded); PMA only channel bonding; or PMA & PCS channel bonding."
"set_pcs_bonding_master","PCS TX channel bonding master","Auto 0","Auto","Specifies the master PCS channel for PCS bonded configurations. Refer to the user guide for bonding details. Selecting 'Auto' allows the Native PHY to automatically select a recommended channel."
"pcs_reset_sequencing_mode","PCS reset sequence","not_bonded:Independent bonded:Simultaneous","not_bonded","Specifies the mode of PCS reset release sequence. When "Independent" mode is selected, resets to the PCS channels will be released in a staggered pattern and each reset is controlled by a different digital reset input. When "Simultaneous" mode is selected, resets to the PCS channels will be released simultaneously and all the channels share the same digital reset input. Select "Simultaneous" mode if "PMA & PCS channel bonding" is enabled or soft PCS bonding in the core is desired."
"enable_manual_bonding_settings","Enable manual PCS bonding settings","{0 1}","0","Enables the ability to manually configure the PCS bonding mode settings."
"manual_pcs_bonding_mode","PCS TX channel bonding mode","ctrl_master ctrl_slave_abv ctrl_slave_blw individual","individual","Specifies the PCS channel bonding mode for PCS bonded configurations. This indicates whether the PCS channel is a master or slave channel and the location of the channel relative to the master channel in the bonded group."
"manual_pcs_bonding_comp_cnt","PCS TX bonding compensation counter","0:255","0","Specifies the PCS channel bonding compensation counter value."
"manual_tx_hssi_aib_bonding_mode","TX HSSI AIB bonding mode","ctrl_master ctrl_master_bot ctrl_master_top ctrl_slave_abv ctrl_slave_blw ctrl_slave_bot ctrl_slave_top individual","individual","Specifies the TX HSSI AIB bonding mode for bonded configurations. This indicates whether the AIB is a master or slave AIB and the location of the AIB relative to the master AIB in the bonded group."
"manual_tx_hssi_aib_bonding_comp_cnt","TX HSSI AIB compensation counter","0:255","0","Specifies the TX HSSI AIB bonding compensation counter value."
"manual_tx_core_aib_bonding_mode","TX Core AIB bonding mode","ctrl_master ctrl_master_bot ctrl_master_top ctrl_slave_abv ctrl_slave_blw ctrl_slave_bot ctrl_slave_top individual","individual","Specifies the TX Core AIB bonding mode for bonded configurations. This indicates whether the AIB is a master or slave AIB and the location of the AIB relative to the master AIB in the bonded group."
"manual_tx_core_aib_bonding_comp_cnt","TX Core AIB compensation counter","0:255","0","Specifies the TX Core AIB bonding compensation counter value."
"manual_rx_hssi_aib_bonding_mode","RX HSSI AIB bonding mode","ctrl_master ctrl_master_bot ctrl_master_top ctrl_slave_abv ctrl_slave_blw ctrl_slave_bot ctrl_slave_top individual","individual","Specifies the RX HSSI AIB bonding mode for bonded configurations. This indicates whether the AIB is a master or slave AIB and the location of the AIB relative to the master AIB in the bonded group."
"manual_rx_hssi_aib_bonding_comp_cnt","RX HSSI AIB compensation counter","0:255","0","Specifies the RX HSSI AIB bonding compensation counter value."
"manual_rx_core_aib_bonding_mode","RX Core AIB bonding mode","ctrl_master ctrl_master_bot ctrl_master_top ctrl_slave_abv ctrl_slave_blw ctrl_slave_bot ctrl_slave_top individual","individual","Specifies the RX Core AIB bonding mode for bonded configurations. This indicates whether the AIB is a master or slave AIB and the location of the AIB relative to the master AIB in the bonded group."
"manual_rx_core_aib_bonding_comp_cnt","RX Core AIB compensation counter","0:255","0","Specifies the RX Core AIB bonding compensation counter value."
"manual_tx_hssi_aib_indv","TX HSSI AIB sychronous bonding setting","indv_en indv_dis","indv_en","Specifies the TX HSSI AIB synchronous bonding settings."
"manual_tx_core_aib_indv","TX Core AIB sychronous bonding setting","indv_en indv_dis","indv_en","Specifies the TX Core AIB synchronous bonding settings."
"manual_rx_hssi_aib_indv","RX HSSI AIB sychronous bonding setting","indv_en indv_dis","indv_en","Specifies the RX HSSI AIB synchronous bonding settings."
"manual_rx_core_aib_indv","RX Core AIB sychronous bonding setting","indv_en indv_dis","indv_en","Specifies the RX Core AIB synchronous bonding settings."
"enable_port_tx_pma_iqtxrx_clkout","Enable tx_pma_iqtxrx_clkout port","{0 1}","0","Enables the optional tx_pma_iqtxrx_clkout output clock. This clock can be used to cascade the TX PMA output clock to the input of a PLL."
"enable_port_tx_pma_elecidle","Enable tx_pma_elecidle port","{0 1}","0","Enables the optional tx_pma_elecidle control input port. The assertion of this signal forces the transmitter into an electrical idle condition. Note that this port has no effect when the transceiver is configured for PCI express modes."
"cdr_refclk_cnt","Number of CDR reference clocks","1 2 3 4 5","1","Specifies the number of input reference clocks for the RX CDRs. The same bus of reference clocks feeds all RX CDRs in the netlist."
"cdr_refclk_select","Selected CDR reference clock","0","0","Specifies the initially selected reference clock input to the RX CDRs."
"set_cdr_refclk_freq","Selected CDR reference clock frequency","25.000000 25.252525 25.510204 25.773196 26.041667 26.315789 26.595745 26.881720 27.173913 27.472527 27.777778 28.089888 28.409091 28.735632 29.069767 29.411765 29.761905 30.120482 30.487805 30.864198 31.250000 31.645570 32.051282 32.467532 32.894737 33.333333 33.783784 34.246575 34.722222 35.211268 35.714286 36.231884 36.764706 37.313433 37.878788 38.461538 39.062500 39.370079 39.682540 40.000000 40.322581 40.650407 40.983607 41.322314 41.666667 42.016807 42.372881 42.735043 43.103448 43.478261 43.859649 44.247788 44.642857 45.045045 45.454545 45.871560 46.296296 46.728972 47.169811 47.619048 48.076923 48.543689 49.019608 49.504950 50.000000 50.505051 51.020408 51.546392 52.083333 52.631579 53.191489 53.763441 54.347826 54.945055 55.555556 56.179775 56.818182 57.471264 58.139535 58.823529 59.523810 60.240964 60.975610 61.728395 62.500000 63.291139 64.102564 64.935065 65.789474 66.666667 67.567568 68.493151 69.444444 70.422535 71.428571 72.463768 73.529412 74.626866 75.757576 76.923077 78.125000 79.365079 80.645161 81.967213 83.333333 84.745763 86.206897 87.719298 89.285714 90.909091 92.592593 94.339623 96.153846 98.039216 100.000000 102.040816 104.166667 106.382979 108.695652 111.111111 113.636364 116.279070 119.047619 121.951220 125.000000 128.205128 131.578947 135.135135 138.888889 142.857143 147.058824 151.515152 156.250000 161.290323 166.666667 172.413793 178.571429 185.185185 192.307692 200.000000 208.333333 217.391304 227.272727 238.095238 250.000000 263.157895 277.777778 294.117647 312.500000 333.333333 100.000","125.000","Specifies the frequency in MHz of the selected reference clock input to the CDR."
"rx_ppm_detect_threshold","PPM detector threshold","100 300 500 1000","1000","Specifies the tolerable difference in PPM (parts per million) between the RX CDR reference clock and the recovered clock from the RX data input."
"set_cdr_refclk_receiver_detect_src","set_cdr_refclk_receiver_detect_src","iqclk coreclk","iqclk",""
"enable_port_rx_pma_iqtxrx_clkout","Enable rx_pma_iqtxrx_clkout port","{0 1}","0","Enables the optional rx_pma_iqtxrx_clkout output clock. This clock can be used to cascade the RX PMA output clock to the input of a PLL."
"enable_port_rx_pma_clkslip","Enable rx_pma_clkslip port","{0 1}","0","Enables the optional rx_pma_clkslip control input port. A rising edge on this signal causes the RX serializer to slip the serial data by one clock cycle (2 UI)."
"enable_port_rx_is_lockedtodata","Enable rx_is_lockedtodata port","{0 1}","1","Enables the optional rx_is_lockedtodata status output port. This signal indicates that the RX CDR is currently in lock to data mode or is attempting to lock to the incoming data stream. This is an asynchronous output signal."
"enable_port_rx_is_lockedtoref","Enable rx_is_lockedtoref port","{0 1}","1","Enables the optional rx_is_lockedtoref status output port. This signal indicates that the RX CDR is currently locked to the CDR reference clock. This is an asynchronous output signal."
"enable_ports_rx_manual_cdr_mode","Enable rx_set_locktodata and rx_set_locktoref ports","{0 1}","0","Enables the optional rx_set_locktodata and rx_set_locktoref control input ports. These ports are used to manually control the lock mode of the RX CDR. These are asynchonous input signals."
"enable_ports_rx_prbs","Enable PRBS verifier control and status ports","{0 1}","0","Enables the optional rx_prbs_err, rx_prbs_err_clr, and rx_prbs_done ports. These ports are used to control and collect status from the internal PRBS verifier."
"enable_port_rx_seriallpbken","Enable rx_seriallpbken port","{0 1}","0","Enables the optional rx_seriallpbken control input port. The assertion of this signal enables the TX to RX serial loopback path within the transceiver. This is an asynchronous input signal. This signal can be enabled in Duplex or Simplex mode. If enabled in Simplex mode, you must drive the signal on both the TX and RX instances from the same source. Otherwise the design fails compilation."
"std_pcs_pma_width","Standard PCS / PMA interface width","8 10 16 20","10","Specifies the data interface width between the 'Standard PCS' and the transceiver PMA."
"std_low_latency_bypass_enable","Enable 'Standard PCS' low latency mode","{0 1}","0","Enables the low latency path for the 'Standard PCS'. Enabling this option bypasses the individual functional blocks within the 'Standard PCS' to provide the lowest latency datapath from the PMA through the 'Standard PCS'."
"enable_hip","Enable PCIe hard IP support","{0 1}","0","INTERNAL USE ONLY. Enabling this parameter indicates that the Native PHY variant will be connected to the PCIe hard IP."
"enable_hard_reset","Enable hard reset controller (HIP)","{0 1}","0","INTERNAL USE ONLY. Enabling this parameter enables the hard reset controller for use with PCIe HIP."
"set_hip_cal_en","Enable PCIe hard IP calibration","{0 1}","0","INTERNAL USE ONLY. Enabling this parameter prioritizes the calibration for PCIe hard IP channels."
"hip_mode","PCIe channel HIP mode","debug_chnl disable_hip user_chnl","disable_hip","INTERNAL USE ONLY. Specifies the channel operation mode for PCIe hard IP channels."
"hip_prot_mode","PCIe HIP protocol mode","gen1 gen2 gen3","gen1","INTERNAL USE ONLY. Specifies the protocol for PCIe HIP channels."
"hip_channels","Number of PCIe HIP channels","x1 x2 x4 x8 x16","x1","INTERNAL USE ONLY. Specifies the number of PCIe HIP channels."
"std_tx_byte_ser_mode","TX byte serializer mode","Disabled {Serialize x2} {Serialize x4}","Disabled","Specifies the mode for the TX byte serializer in the 'Standard PCS'. The transceiver architecture allows the 'Standard PCS' to operate at double or quadruple the data width of the PMA serializer. This allows the PCS to run at a lower internal clock frequency and accommodate a wider range of FPGA interface widths. This option is limited by the target protocol mode."
"std_rx_byte_deser_mode","RX byte deserializer mode","Disabled {Deserialize x2} {Deserialize x4}","Disabled","Specifies the mode for the RX byte deserializer in the 'Standard PCS' The transceiver architecture allows the 'Standard PCS' to operate at double or quadruple the data width of the PMA deserializer. This allows the PCS to run at a lower internal clock frequency and accommodate a wider range of FPGA interface widths. This option is limited by the target protocol mode."
"std_tx_8b10b_enable","Enable TX 8B/10B encoder","{0 1}","0","Enables the 8B/10B encoder in the 'Standard PCS'."
"std_tx_8b10b_disp_ctrl_enable","Enable TX 8B/10B disparity control","{0 1}","0","Enables disparity control for the 8B/10B encoder. This allows you to force the disparity of the 8b10b encoder via the 'tx_forcedisp' control signal."
"std_rx_8b10b_enable","Enable RX 8B/10B decoder","{0 1}","0","Enables the 8B/10B decoder in the 'Standard PCS'."
"std_rx_rmfifo_mode","RX rate match FIFO mode","disabled:Disabled {basic (single width):Basic 10-bit PMA} {basic (double width):Basic 20-bit PMA} gige:GbE pipe:PIPE {pipe 0ppm:PIPE 0ppm}","disabled","Specifies the operation mode of the RX rate match FIFO in the 'Standard PCS'."
"std_rx_rmfifo_pattern_n","RX rate match insert/delete -ve pattern (hex)","-2147483648:2147483647","0","Specifies the -ve (negative) disparity value for the RX rate match FIFO. The value is 20 bits and specified as a hexadecimal string."
"std_rx_rmfifo_pattern_p","RX rate match insert/delete +ve pattern (hex)","-2147483648:2147483647","0","Specifies the +ve (positive) disparity value for the RX rate match FIFO. The value is 20 bits and specified as a hexadecimal string."
"enable_port_rx_std_rmfifo_full","Enable rx_std_rmfifo_full port","{0 1}","0","Enables the optional rx_std_rmfifo_full status output port. This signal indicates when the standard RX rate match FIFO has reached the full threshold."
"enable_port_rx_std_rmfifo_empty","Enable rx_std_rmfifo_empty port","{0 1}","0","Enables the optional rx_std_rmfifo_empty status output port. This signal indicates when the standard RX rate match FIFO has reached the empty threshold."
"pcie_rate_match","PCI Express Gen 3 rate match FIFO mode","Bypass {0 ppm} {600 ppm}","Bypass","Specifies the PPM tolerance mode of the PCI Express Gen 3 rate match FIFO."
"std_tx_bitslip_enable","Enable TX bitslip","{0 1}","0","Enables TX bitslip support. When enabled, the outgoing transmit data can be slipped a specific number of bits as specified by the 'tx_bitslipboundarysel' control signal."
"enable_port_tx_std_bitslipboundarysel","Enable tx_std_bitslipboundarysel port","{0 1}","0","Enables the optional tx_std_bitslipboundarysel control input port."
"std_rx_word_aligner_mode","RX word aligner mode","bitslip {manual (PLD controlled):manual (FPGA Fabric controlled)} {synchronous state machine} {deterministic latency}","bitslip","Specifies the RX word aligner mode for the 'Standard PCS'."
"std_rx_word_aligner_pattern_len","RX word aligner pattern length","7 8 10 16 20 32 40","7","Specifies the RX word alignment pattern length."
"std_rx_word_aligner_pattern","RX word aligner pattern (hex)","","0","Specifies the RX word alignment pattern."
"std_rx_word_aligner_rknumber","Number of word alignment patterns to achieve sync","0:255","3","Specifies the number of valid word alignment patterns that must be received before the word aligner achieves sync lock."
"std_rx_word_aligner_renumber","Number of invalid data words to lose sync","0:63","3","Specifies the number of invalid data codes or disparity errors that must be received before the word aligner loses sync lock."
"std_rx_word_aligner_rgnumber","Number of valid data words to decrement error count","0:255","3","Specifies the number of valid data codes that must be received to decrement the error counter. If enough valid data codes are received to decrement the error count to zero the word aligner returns to sync lock."
"std_rx_word_aligner_rvnumber","Number of valid data patterns required to achieve word alignment","0:8191","0","Intended to be used only for SRIO V2.1."
"std_rx_word_aligner_fast_sync_status_enable","Enable fast sync status reporting for deterministic latency SM","{0 1}","0","If this parameter is selected, the word align status signal is asserted high once cycle slip operation between PCS and PMA is done. Otherwise the word align status is asserted after the cycle slip operation is done and it is detected that the word align pattern comes in aligned to the PCS. This parameter selection takes effect only if the selected protocol mode is CPRI (Auto)."
"enable_port_rx_std_wa_patternalign","Enable rx_std_wa_patternalign port","{0 1}","0","Enables the optional rx_std_wa_patternalign control input port. A rising edge on this signal causes the word aligner to align to the next incoming word alignment pattern when the word aligner is configured in "manual" mode."
"enable_port_rx_std_wa_a1a2size","Enable rx_std_wa_a1a2size port","{0 1}","0","Enables the optional rx_std_a1a2size control input port."
"enable_port_rx_std_bitslipboundarysel","Enable rx_std_bitslipboundarysel port","{0 1}","0","Enables the optional rx_std_bitslipboundarysel status output port."
"enable_port_rx_std_bitslip","Enable rx_bitslip port","{0 1}","0","Enables the optional rx_bitslip control input port. This is the shared RX bitslip control port for the Standard and Enhanced PCS datapaths."
"std_tx_bitrev_enable","Enable TX bit reversal","{0 1}","0","Enables transmitter bit order reversal. When enabled, the TX parallel data is reversed before passing to the PMA for serialization. When bit reversal is activated the transmitted TX data bit order changes to MSB->LSB rather than the normal LSB->MSB. This is a static setting and can only be dynamically changed through dynamic reconfiguration."
"std_tx_byterev_enable","Enable TX byte reversal","{0 1}","0","Enables transmitter byte order reversal. When the PCS / PMA interface width is 16 or 20 bits the PCS can swap the ordering of the individual 8-bit or 10-bit words. This option is not valid under all protocol modes."
"std_tx_polinv_enable","Enable TX polarity inversion","{0 1}","0","Enables TX bit polarity inversion. When enabled, the 'tx_polinv' control port controls polarity inversion of the TX parallel data bits before passing to the PMA."
"enable_port_tx_polinv","Enable tx_polinv port","{0 1}","0","Enables the optional tx_polinv control input port. When TX bit polarity inversion is enabled the assertion of this signal causes the TX bit polarity to be inverted."
"std_rx_bitrev_enable","Enable RX bit reversal","{0 1}","0","Enables receiver bit order reversal. When enabled, the 'rx_std_bitrev_ena' control port controls bit reversal of the RX parallel data after passing from the PMA to the PCS. When bit reversal is activated the received RX data bit order changes to MSB->LSB rather than the normal LSB->MSB"
"enable_port_rx_std_bitrev_ena","Enable rx_std_bitrev_ena port","{0 1}","0","Enables the optional rx_std_bitrev_ena control input port. When receiver bit order reversal is enabled the assertion of this signal causes the received RX data bit order to be changed to MSB->LSB rather than the normal LSB->MSB. This is an asynchronous input signal."
"std_rx_byterev_enable","Enable RX byte reversal","{0 1}","0","Enables receiver byte order reversal. When the PCS / PMA interface width is 16 or 20 bits the PCS can swap the ordering of the individual 8- or 10-bit words. When enabled, the 'rx_std_byterev_ena' port controls byte swapping. This option is not valid under all protocol modes."
"enable_port_rx_std_byterev_ena","Enable rx_std_byterev_ena port","{0 1}","0","Enables the optional rx_std_byterev_ena control input port. When receiver byte order reversal is enabled the assertion of this signal swaps the order of individual 8- or 10-bit words received from the PMA."
"std_rx_polinv_enable","Enable RX polarity inversion","{0 1}","0","Enables RX bit polarity inversion. When enabled, the 'rx_polinv' control port controls polarity inversion of the RX parallel data bits after passing from the PMA."
"enable_port_rx_polinv","Enable rx_polinv port","{0 1}","0","Enables the optional rx_polinv control input port. When RX bit polarity inversion is enabled the assertion of this signal causes the RX bit polarity to be inverted."
"enable_port_rx_std_signaldetect","Enable rx_std_signaldetect port","{0 1}","0","Enables the optional rx_std_signaldetect status output port. The assertion of this signal indicates that a signal has been detected on the receiver. The signal detect threshold can be specified through Quartus Prime QSF assignments."
"enable_ports_pipe_sw","Enable PCIe dynamic datarate switch ports","{0 1}","0","Enables the pipe_sw and pipe_sw_done ports. These ports must be connected to the PLL IP instance in multi-lane PCI Express Gen 2 and Gen 3 configurations. The 'pipe_sw' and 'pipe_sw_done' ports are only exposed for multi-lane bonded configurations."
"enable_ports_pipe_rx_elecidle","Enable PCIe electrical idle control and status ports","{0 1}","0","Enables the pipe_rx_eidleinfersel and pipe_rx_elecidle ports. These ports are used for PCI Express configurations."
"enable_ports_pipe_hclk","Enable PCIe pipe_hclk_in and pipe_hclk_out ports","{0 1}","0","Enables the pipe_hclk_in and pipe_hclk_out ports. These ports must be connected to the PLL IP instance in PCI Express configurations."
"enable_early_spd_chng","Enable early speed change","{0 1}","0","When selected the Native PHY enables early speed change logic for PIPE."
"enable_debug_ports","Enable PCS reset status ports","{0 1}","0","Enables the optional TX digital reset and RX digital reset release status output ports including tx_transfer_ready, rx_transfer_ready, tx_fifo_ready, rx_fifo_ready, tx_digitalreset_timeout and rx_digitalreset_timeout."
"tx_fifo_mode","TX Core Interface FIFO mode","{Phase compensation} Register Interlaken Basic","Phase compensation","Specifies the mode for the TX PCS-Core Interface FIFO."
"tx_fifo_pfull","TX FIFO partially full threshold","0:31","5","Specifies the partially full threshold for the TX PCS-Core Interface FIFO."
"tx_fifo_pempty","TX FIFO partially empty threshold","0:31","2","Specifies the partially empty threshold for the TX PCS-Core Interface FIFO."
"enable_port_tx_fifo_full","Enable tx_fifo_full port","{0 1}","0","Enables the optional tx_fifo_full status output port. This signal indicates when the TX core FIFO has reached the full threshold. This signal is synchronous with 'tx_clkout'."
"enable_port_tx_fifo_empty","Enable tx_fifo_empty port","{0 1}","0","Enables the optional tx_fifo_empty status output port. This signal indicates when the TX core FIFO has reached the empty threshold. This signal is synchronous with 'tx_clkout'."
"enable_port_tx_fifo_pfull","Enable tx_fifo_pfull port","{0 1}","0","Enables the optional tx_fifo_pfull status output port. This signal indicates when the TX core FIFO has reached the specified partially full threshold. "
"enable_port_tx_fifo_pempty","Enable tx_fifo_pempty port","{0 1}","0","Enables the optional tx_fifo_pempty status output port. This signal indicates when the TX core FIFO has reached the specified partially empty threshold."
"enable_port_tx_dll_lock","Enable tx_dll_lock port","{0 1}","0","Enables the optional tx_dll_lock status output port. This signal indicates when the TX DLL is locked for data transfer. Refer to the reset requirements for Basic/Interlaken FIFO mode in the user guide for more details about the usage of this signal."
"rx_fifo_mode","RX PCS-Core Interface FIFO mode (PCS FIFO-Core FIFO)","{Phase compensation} {Phase compensation-Register} {Phase compensation-Basic} Register {Register-Phase compensation} Register-Basic Interlaken 10GBase-R","Phase compensation","Specifies the mode for the RX PCS-Core Interface FIFO."
"rx_fifo_pfull","RX FIFO partially full threshold","0:63","5","Specifies the partially full threshold for the RX PCS-Core Interface FIFO."
"rx_fifo_pempty","RX FIFO partially empty threshold","0:63","2","Specifies the partially empty threshold for the RX PCS-Core Interface FIFO."
"rx_fifo_align_del","Enable RX FIFO alignment word deletion (Interlaken)","{0 1}","0","Enables Interlaken alignment word (sync word) removal. When the RX PCS-Core Interface FIFO is configured for Interlaken mode, enabling this option removes all alignment (sync) words once frame synchronization has occurred. This includes the first sync word. Enabling this option requires that you also enable control word deletion."
"rx_fifo_control_del","Enable RX FIFO control word deletion (Interlaken)","{0 1}","0","Enables Interlaken control word removal. When the Enhanced RX core FIFO is configured for Interlaken mode enabling this option removes all control words after frame synchronization has occurred. Enabling this option requires that you also enable alignment word deletion."
"enable_port_rx_data_valid","Enable rx_data_valid port","{0 1}","0","Enables the optional rx_data_valid status output port when simplified interface is enabled. This signal indicates when the RX core FIFO data is valid. This signal is synchronous with 'rx_clkout'."
"enable_port_rx_fifo_full","Enable rx_fifo_full port","{0 1}","0","Enables the optional rx_fifo_full status output port. This signal indicates when the RX core FIFO has reached the full threshold. This signal is synchronous with 'rx_clkout'."
"enable_port_rx_fifo_empty","Enable rx_fifo_empty port","{0 1}","0","Enables the optional rx_fifo_empty status output port. This signal indicates when the RX core FIFO has reached the empty threshold. This signal is synchronous with 'rx_clkout'."
"enable_port_rx_fifo_pfull","Enable rx_fifo_pfull port","{0 1}","0","Enables the optional rx_fifo_pfull status output port. This signal indicates when the RX core FIFO has reached the specified partially full threshold."
"enable_port_rx_fifo_pempty","Enable rx_fifo_pempty port","{0 1}","0","Enables the optional rx_fifo_pempty status output port. This signal indicates when the RX core FIFO has reached the specified partially empty threshold."
"enable_port_rx_fifo_del","Enable rx_fifo_del port (10GBASE-R)","{0 1}","0","Enables the optional rx_fifo_del status output port. This signal indicates when a word has been deleted from the rate-match FIFO. This signal is used in 10GBASE-R mode only."
"enable_port_rx_fifo_insert","Enable rx_fifo_insert port (10GBASE-R)","{0 1}","0","Enables the optional rx_fifo_insert status output port. This signal indicates when a word has been inserted into the rate-match FIFO. This signal is used in 10GBASE-R mode only."
"enable_port_rx_fifo_rd_en","Enable rx_fifo_rd_en port","{0 1}","0","Enables the optional rx_fifo_rd_en control input port. This port is used for Interlaken and Basic FIFO modes. Asserting this signal enables the read from RX core FIFO."
"enable_port_rx_fifo_align_clr","Enable rx_fifo_align_clr port (Interlaken)","{0 1}","0","Enables the optional rx_fifo_align_clr control input port. This port is used for Interlaken mode only."
"tx_clkout_sel","Selected tx_clkout clock source","{pcs_clkout:PCS clkout} {pcs_x2_clkout:PCS clkout x2} pma_div_clkout","pcs_clkout","Specifies the clock source for tx_clkout output clock. When "PCS clkout x2" is selected, the clock frequency of tx_clkout is 2x of TX PCS parallel clock frequency only when the TX PCS-Core Interface FIFO operates in full-rate or double-rate transfer mode. However, when PMA-PCS width is set to 20-bit for "Standard PCS" and byte-serializer is disabled, the clock frequency of tx_clkout is the same as TX PCS parallel clock frequency even though the FIFO operates in double-rate transfer mode. "
"enable_port_tx_clkout2","Enable tx_clkout2 port","{0 1}","0","Enables the optional tx_clkout2 output clock."
"tx_clkout2_sel","Selected tx_clkout2 clock source","{pcs_clkout:PCS clkout} {pcs_x2_clkout:PCS clkout x2} pma_div_clkout","pcs_clkout","Specifies the clock source for tx_clkout2output clock. When "PCS clkout x2" is selected, the clock frequency of tx_clkout2 is 2x of TX PCS parallel clock frequency only when the TX PCS-Core Interface FIFO operates in full-rate or double-rate transfer mode. However, when PMA-PCS width is set to 20-bit for "Standard PCS" and byte-serializer is disabled, the clock frequency of tx_clkout2 is the same as TX PCS parallel clock frequency even though the FIFO operates in double-rate transfer mode. "
"enable_port_tx_clkout_hioint","Enable tx_clkout_hioint port","{0 1}","0","Enables the optional tx_clkout_hioint output clock."
"enable_port_tx_clkout2_hioint","Enable tx_clkout2_hioint port","{0 1}","0","Enables the optional tx_clkout2_hioint output clock."
"tx_coreclkin_clock_network","Selected tx_coreclkin clock network","{dedicated:Dedicated Clock} {rowclk:Global Clock}","dedicated","Specifies the type of clock network to use to route the clock signal to tx_coreclkin port. "Dedicated Clock" allows a higher maximum frequency (fmax) between the FPGA fabric and the TX PCS. The number of "Dedicated Clock" lines are limited."
"tx_pcs_bonding_clock_network","Selected TX PCS bonding clock network","{dedicated:Dedicated Clock} {rowclk:Global Clock}","dedicated","Specifies the type of clock network to use for TX PCS bonding. "Dedicated Clock" allows a higher maximum frequency (fmax) between the FPGA fabric and the TX PCS. The number of "Dedicated Clock" lines are limited."
"rx_clkout_sel","Selected rx_clkout clock source","{pcs_clkout:PCS clkout} {pcs_x2_clkout:PCS clkout x2} pma_div_clkout","pcs_clkout","Specifies the clock source for rx_clkout output clock. When "PCS clkout x2" is selected, the clock frequency of rx_clkout is 2x of RX PCS parallel clock frequency only when the RX PCS-Core Interface FIFO operates in full-rate or double-rate transfer mode."
"enable_port_rx_clkout2","Enable rx_clkout2 port","{0 1}","0","Enables the optional rx_clkout2 output clock."
"enable_port_rx_clkout_hioint","Enable rx_clkout_hioint port","{0 1}","0","Enables the optional rx_clkout_hioint output clock."
"enable_port_rx_clkout2_hioint","Enable rx_clkout2_hioint port","{0 1}","0","Enables the optional rx_clkout2_hioint output clock."
"rx_coreclkin_clock_network","Selected rx_coreclkin clock network","{dedicated:Dedicated Clock} {rowclk:Global Clock}","dedicated","Specifies the type of clock network to use to route the clock signal to rx_coreclkin port. "Dedicated Clock" allows a higher maximum frequency (fmax) between the FPGA fabric and the RX PCS. The number of "Dedicated Clock" lines are limited."
"enable_port_latency_measurement","Enable latency measurement ports","{0 1}","0","Enables the optional latency_sclk, tx_fifo_latency_pulse, tx_pcs_fifo_latency_pulse, rx_fifo_latency_pulse and rx_pcs_fifo_latency_pulse ports that are used to measure the FIFO latency for deterministic latency application."
"generate_docs","Generate parameter documentation file","{0 1}","1","When enabled, generation produces a Comma-Separated Value file (.csv) with descriptions of the Native PHY parameters."
"enable_tx_coreclkin2","Enable tx_coreclkin2 port","{0 1}","0","This clock port needs to be enabled to provide a fifo read clock when double rate transfer is enabled with a PMA width of 20 without byte serialization"
"rcfg_shared","Share reconfiguration interface","{0 1}","0","When enabled, the Native PHY presents a single Avalon-MM slave interface for dynamic reconfiguration of all channels. In this configuration the upper [n-1:11] address bits of the reconfiguration address bus specify the selected channel. Address bits [10:0] provide the register offset address within the reconfiguration space of the selected channel."
"rcfg_use_clk_reset_only","Use AVMM clock and reset ports only","{0 1}","0","When enabled, the Native PHY exposes only clcok and reset ports for Avalon-MM slave interface, other ports are terminated."
"set_embedded_debug_enable","Enable embedded debug","{0 1}","0","Enables the embedded debug logic in the transceiver channel and grants access to capability registers, soft prbs accumulators and control and status registers"
"set_prbs_soft_logic_enable","Enable prbs soft accumulators","{0 1}","0","Enables soft logic for doing prbs bit and error accumulation when using the hard prbs generator and checker."
"enable_rcfg_tx_digitalreset_release_ctrl","Enable rcfg_tx_digitalreset_release_ctrl port","{0 1}","0","Enables the rcfg_tx_digitalreset_release_ctrl port that dynamically controls the TX PCS reset release sequence. This port is mandatory when reconfiguring to/from TX PCS Gearbox ratio of *:67. Deassert this signal at least 30ns before deasserting tx_digitalreset when the TX PCS Gearbox ratio is configured to *:67. In other modes, assert this signal at least 30ns before deasserting tx_digitalreset."
"suppress_design_example_messages","suppress_design_example_messages","-2147483648:2147483647","0","This parameter is intended for a parent IP to supress the messages."
"tx_pll_type","Tx PLL type","ATX fPLL CMU","ATX","Selects the type of the TX PLL to be used in example design."
"tx_pll_refclk","Tx PLL reference clock frequency","","125.0","Tx PLL reference clock frequency. If an appropriate value is not specified, design example generation will fail."
"use_tx_clkout2","Use tx_clkout2 as source for tx_coreclkin","{0 1}","0","Determines whether tx_clkout or tx_clkout2 is used to clock tx_coreclkin and the TX data generator."
"use_rx_clkout2","Use rx_clkout2 as source for rx_coreclkin","{0 1}","0","Determines whether rx_clkout or rx_clkout2 is used to clock rx_coreclkin and the RX data generator."
"enable_de_hardware_debug","Enable soft register map for System Console","{0 1}","0","Enables a soft register map to be read out in system-console.  Allows the reading back of the design status.  Works in tandem with the transceiver ADME."
"enable_fast_sim","Enable fast simulations","{0 1}","0","When enabled, reduces counter values to improve simulation time for PCI-e. Not recommended for hardware."
"enable_mac_total_control","Enable MAC total control of PHY settings","{0 1}","0","When enabled, the PCIe pseudo MAC controls tx_margin, tx_swing, tx_deemph, and other settings of PHY."
"enable_insert_eios_err","Enable PCIe EIOS error insertion","{0 1}","0","When this testing feature enabled, erred EIOS will be sent from PCIe pseudo MAC."
"tile_type_suffix","Xcvr Tile Type Suffix","{} _htile _etile","","TBD."
"design_example_filename","Design example filename","","top","Specifies the name of the design example. If design example generation succesful, filename.qsys and filename_tb.qsys files will be generated."
"anlg_voltage","VCCR_GXB and VCCT_GXB supply voltage for the Transceiver","1_1V 1_0V","1_0V","Selects the VCCR_GXB and VCCT_GXB supply voltage for the Transceiver."
"anlg_link","Tranceiver Link Type","sr lr","sr","Selects the type of transceiver link. SR-Short Reach (Chip-to-chip communication), LR-Long Reach (Backplane communication)"
"enable_ports_adaptation","Enable adaptation control ports","{0 1}","0","Enables the optional rx_adapt_reset, and rx_adapt_start ports. These ports are used to control the adaptation engine (adaptation engine can also be controlled through DPRIO interface). Even if they are exposed, the ports are not usable until they are activated through DPRIO interface. For adaptation engine control: user needs to apply the reset first, after releasing reset, assert the start. The adaptation status can be observed through DPRIO interface."
"qsf_assignments_enable","Provide sample QSF assignments","{0 1}","0","When enabled, the IP will display the sample Quartus Settings File assignments equivalent to the current IP settings. You do not normally need these QSF assignments as the analog settings are set by the IP in the design. However, depending on your system, you may want to override the IP settings using QSF assignments. One such case may be when you have different analog settings per channel in a multi-channel interface or if you want to use different analog settings assignments for different instances of an interface."
"tx_pma_analog_mode","TX PMA analog mode rules","analog_off cei_4976_lr cei_4976_sr cei_6375_lr cei_6375_sr cei_9950_lr cei_9950_sr cei_11100_lr cei_11100_sr cei_12500_lr cei_12500_sr cei_19000_vsr cei_28000_vsr cpri_12500 cpri_e6hv cpri_e6lv cpri_e6lvii cpri_e6lviii cpri_e12hv cpri_e12lv cpri_e12lvii cpri_e12lviii cpri_e24lv cpri_e24lvii cpri_e24lviii cpri_e30lv cpri_e30lvii cpri_e30lviii cpri_e48lvii cpri_e48lviii cpri_e60lvii cpri_e60lviii cpri_e96lviii cpri_e99lviii dp_1620 dp_2700 dp_5400 fc_400_df_ea_s fc_400_df_el_s fc_800_df_ea_s fc_800_df_el_s fc_1600_df_ea_s fc_1600_df_el_s gige_1250 gpon_155 gpon_622 gpon_1244 gpon_2488 hdmi_3400 hdmi_6000 higig_3125 higig_3750 higig_4062 higig_5000 higig_6250 higig_6562 hmc_10000 hmc_12500 hmc_15000 ieee_10g_base_cr_10312 ieee_10g_base_cx4 ieee_10g_base_kx4 ieee_10g_kr_10312 ieee_40g_base_cr4_10312 ieee_40g_base_kr_10312 ieee_100g_base_cr4_25781 ieee_100g_base_cr10_10312 ieee_100g_base_kr4_25781 ieee_1000_base_cx ieee_1000_base_kx ieee_itut_10g_gpon_epon infiniband_ddr_5000 infiniband_fdr_14000 infiniband_qdr_10000 infiniband_sdr_2500 interlaken_3125 interlaken_6375 interlaken_11100 interlaken_12500 interlaken_25781 jesd204_a_b_312 jesd204_a_b_3125 jesd204_a_b_6375 jesd204_a_b_12500 jesd204_b_16000 nppi_10312 otu2_10709 pcie_cable qsgmii_5000 sas_1500 sas_3000 sas_6000 sas_12000 sata_1500 sata_3000 sata_6000 sdi_270_sd sdi_1485_hd sdi_2970_3g sdi_6000 sdi_12000 serial_lite_iii_16400 serial_lite_iii_17400 sff_8431 sfi_2488 sfi_3125 sfi_s_6250 sfi_s_11200 sonet_oc12_622 sonet_oc48_2488 sonet_oc192_9953 srio_1250_lr srio_1250_sr srio_2500_lr srio_2500_sr srio_3125_lr srio_3125_sr srio_5000_lr srio_5000_mr srio_5000_sr srio_6250_lr srio_6250_mr srio_6250_sr srio_10312_lr srio_10312_sr upi user_custom xaui_3125 xfp_9950 xfp_10310 xfp_10520 xfp_10700 xfp_11320 xfp_12500","user_custom","Selects the analog protocol mode rules to pre-select the TX pin swing settings (VOD, Pre-emphasis, and Slew Rate). "
"rx_pma_analog_mode","RX PMA analog mode rules","analog_off dp_1620 dp_2700 dp_5400 dp_8100 gpon_622 gpon_1244 hdmi_3400 hdmi_6000 ieee_10g_base_kx4 ieee_10g_kr_10312 ieee_40g_base_cr4_10312 ieee_100g_base_cr10_10312 ieee_1000_base_kx infiniband_fdr_14000 nppi_10312 sas_12000 sonet_oc48_2488 upi user_custom","user_custom","Selects the analog protocol mode rules to pre-select the RX pin swing settings (VOD, Pre-emphasis, and Slew Rate). "
"tx_pma_optimal_settings","Use default TX PMA analog settings","{0 1}","1","When enabled, the TX PMA analog parameters will be configured using Intel specified default settings. When disabled, you must manually configure the TX PMA analog parameters. Your particular system or appliation may require custom settings."
"rx_pma_optimal_settings","Use default RX PMA analog settings","{0 1}","1","When enabled', the RX PMA analog parameters will be configured using Intel specified default settings. When disabled, you must manually configure the RX PMA analog parameters. Your particular system or appliation may require custom settings."
"rx_pma_adapt_mode","RX adaptation mode","{manual:Manual CTLE, Manual VGA, DFE Off} {ctle_only:Adaptive CTLE, Adaptive VGA, DFE Off} {ctle_dfe:Adaptive CTLE, Adaptive VGA, All-Tap Adaptive DFE} {ctle_dfe_tap1:Adaptive CTLE, Adaptive VGA, 1-Tap Adaptive DFE} {ctle_dfe_mode_2:Adaptive Mode for PCIe Gen 3}","manual","Specifies the operation mode for the RX adaptation circuits."
