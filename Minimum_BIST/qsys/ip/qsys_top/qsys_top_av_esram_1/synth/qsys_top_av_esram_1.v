// qsys_top_av_esram_1.v

// Generated using ACDS version 20.3 158

`timescale 1 ps / 1 ps
module qsys_top_av_esram_1 (
		input  wire        refclk,         //     refclk.clk
		output wire        esram_clk,      //  esram_clk.clk
		output wire        esram_rst,      //  esram_rst.reset
		output wire        iopll_lock,     // iopll_lock.iopll_lock
		input  wire [10:0] av_address,     //     reg_if.address
		input  wire        av_read,        //           .read
		output wire        av_waitrequest, //           .waitrequest
		input  wire        av_write,       //           .write
		output wire [31:0] av_readdata,    //           .readdata
		input  wire [31:0] av_writedata    //           .writedata
	);

	av_esram #(
		.c_ADDR_BITS (11),
		.chan0       (0)
	) av_esram_1 (
		.refclk         (refclk),         //   input,   width = 1,     refclk.clk
		.esram_clk      (esram_clk),      //  output,   width = 1,  esram_clk.clk
		.esram_rst      (esram_rst),      //  output,   width = 1,  esram_rst.reset
		.iopll_lock     (iopll_lock),     //  output,   width = 1, iopll_lock.iopll_lock
		.av_address     (av_address),     //   input,  width = 11,     reg_if.address
		.av_read        (av_read),        //   input,   width = 1,           .read
		.av_waitrequest (av_waitrequest), //  output,   width = 1,           .waitrequest
		.av_write       (av_write),       //   input,   width = 1,           .write
		.av_readdata    (av_readdata),    //  output,  width = 32,           .readdata
		.av_writedata   (av_writedata)    //   input,  width = 32,           .writedata
	);

endmodule
