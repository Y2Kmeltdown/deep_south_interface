	dr_interface u0 (
		.config_clk_clk           (_connected_to_config_clk_clk_),           //   input,   width = 1,     config_clk.clk
		.config_rstn_reset_n      (_connected_to_config_rstn_reset_n_),      //   input,   width = 1,    config_rstn.reset_n
		.pcie_user_clk_clk        (_connected_to_pcie_user_clk_clk_),        //   input,   width = 1,  pcie_user_clk.clk
		.pcie_user_rstn_reset_n   (_connected_to_pcie_user_rstn_reset_n_),   //   input,   width = 1, pcie_user_rstn.reset_n
		.avmm_phy_0_waitrequest   (_connected_to_avmm_phy_0_waitrequest_),   //   input,   width = 1,     avmm_phy_0.waitrequest
		.avmm_phy_0_readdata      (_connected_to_avmm_phy_0_readdata_),      //   input,  width = 32,               .readdata
		.avmm_phy_0_readdatavalid (_connected_to_avmm_phy_0_readdatavalid_), //   input,   width = 1,               .readdatavalid
		.avmm_phy_0_burstcount    (_connected_to_avmm_phy_0_burstcount_),    //  output,   width = 1,               .burstcount
		.avmm_phy_0_writedata     (_connected_to_avmm_phy_0_writedata_),     //  output,  width = 32,               .writedata
		.avmm_phy_0_address       (_connected_to_avmm_phy_0_address_),       //  output,  width = 13,               .address
		.avmm_phy_0_write         (_connected_to_avmm_phy_0_write_),         //  output,   width = 1,               .write
		.avmm_phy_0_read          (_connected_to_avmm_phy_0_read_),          //  output,   width = 1,               .read
		.avmm_phy_0_byteenable    (_connected_to_avmm_phy_0_byteenable_),    //  output,   width = 4,               .byteenable
		.avmm_phy_0_debugaccess   (_connected_to_avmm_phy_0_debugaccess_),   //  output,   width = 1,               .debugaccess
		.avmm_phy_1_waitrequest   (_connected_to_avmm_phy_1_waitrequest_),   //   input,   width = 1,     avmm_phy_1.waitrequest
		.avmm_phy_1_readdata      (_connected_to_avmm_phy_1_readdata_),      //   input,  width = 32,               .readdata
		.avmm_phy_1_readdatavalid (_connected_to_avmm_phy_1_readdatavalid_), //   input,   width = 1,               .readdatavalid
		.avmm_phy_1_burstcount    (_connected_to_avmm_phy_1_burstcount_),    //  output,   width = 1,               .burstcount
		.avmm_phy_1_writedata     (_connected_to_avmm_phy_1_writedata_),     //  output,  width = 32,               .writedata
		.avmm_phy_1_address       (_connected_to_avmm_phy_1_address_),       //  output,  width = 13,               .address
		.avmm_phy_1_write         (_connected_to_avmm_phy_1_write_),         //  output,   width = 1,               .write
		.avmm_phy_1_read          (_connected_to_avmm_phy_1_read_),          //  output,   width = 1,               .read
		.avmm_phy_1_byteenable    (_connected_to_avmm_phy_1_byteenable_),    //  output,   width = 4,               .byteenable
		.avmm_phy_1_debugaccess   (_connected_to_avmm_phy_1_debugaccess_),   //  output,   width = 1,               .debugaccess
		.avmm_phy_2_waitrequest   (_connected_to_avmm_phy_2_waitrequest_),   //   input,   width = 1,     avmm_phy_2.waitrequest
		.avmm_phy_2_readdata      (_connected_to_avmm_phy_2_readdata_),      //   input,  width = 32,               .readdata
		.avmm_phy_2_readdatavalid (_connected_to_avmm_phy_2_readdatavalid_), //   input,   width = 1,               .readdatavalid
		.avmm_phy_2_burstcount    (_connected_to_avmm_phy_2_burstcount_),    //  output,   width = 1,               .burstcount
		.avmm_phy_2_writedata     (_connected_to_avmm_phy_2_writedata_),     //  output,  width = 32,               .writedata
		.avmm_phy_2_address       (_connected_to_avmm_phy_2_address_),       //  output,  width = 13,               .address
		.avmm_phy_2_write         (_connected_to_avmm_phy_2_write_),         //  output,   width = 1,               .write
		.avmm_phy_2_read          (_connected_to_avmm_phy_2_read_),          //  output,   width = 1,               .read
		.avmm_phy_2_byteenable    (_connected_to_avmm_phy_2_byteenable_),    //  output,   width = 4,               .byteenable
		.avmm_phy_2_debugaccess   (_connected_to_avmm_phy_2_debugaccess_),   //  output,   width = 1,               .debugaccess
		.avmm_phy_3_waitrequest   (_connected_to_avmm_phy_3_waitrequest_),   //   input,   width = 1,     avmm_phy_3.waitrequest
		.avmm_phy_3_readdata      (_connected_to_avmm_phy_3_readdata_),      //   input,  width = 32,               .readdata
		.avmm_phy_3_readdatavalid (_connected_to_avmm_phy_3_readdatavalid_), //   input,   width = 1,               .readdatavalid
		.avmm_phy_3_burstcount    (_connected_to_avmm_phy_3_burstcount_),    //  output,   width = 1,               .burstcount
		.avmm_phy_3_writedata     (_connected_to_avmm_phy_3_writedata_),     //  output,  width = 32,               .writedata
		.avmm_phy_3_address       (_connected_to_avmm_phy_3_address_),       //  output,  width = 13,               .address
		.avmm_phy_3_write         (_connected_to_avmm_phy_3_write_),         //  output,   width = 1,               .write
		.avmm_phy_3_read          (_connected_to_avmm_phy_3_read_),          //  output,   width = 1,               .read
		.avmm_phy_3_byteenable    (_connected_to_avmm_phy_3_byteenable_),    //  output,   width = 4,               .byteenable
		.avmm_phy_3_debugaccess   (_connected_to_avmm_phy_3_debugaccess_),   //  output,   width = 1,               .debugaccess
		.avmm_slave_waitrequest   (_connected_to_avmm_slave_waitrequest_),   //  output,   width = 1,     avmm_slave.waitrequest
		.avmm_slave_readdata      (_connected_to_avmm_slave_readdata_),      //  output,  width = 32,               .readdata
		.avmm_slave_readdatavalid (_connected_to_avmm_slave_readdatavalid_), //  output,   width = 1,               .readdatavalid
		.avmm_slave_burstcount    (_connected_to_avmm_slave_burstcount_),    //   input,   width = 1,               .burstcount
		.avmm_slave_writedata     (_connected_to_avmm_slave_writedata_),     //   input,  width = 32,               .writedata
		.avmm_slave_address       (_connected_to_avmm_slave_address_),       //   input,  width = 18,               .address
		.avmm_slave_write         (_connected_to_avmm_slave_write_),         //   input,   width = 1,               .write
		.avmm_slave_read          (_connected_to_avmm_slave_read_),          //   input,   width = 1,               .read
		.avmm_slave_byteenable    (_connected_to_avmm_slave_byteenable_),    //   input,   width = 4,               .byteenable
		.avmm_slave_debugaccess   (_connected_to_avmm_slave_debugaccess_)    //   input,   width = 1,               .debugaccess
	);

